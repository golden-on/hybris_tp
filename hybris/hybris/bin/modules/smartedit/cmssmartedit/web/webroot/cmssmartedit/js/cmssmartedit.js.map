{"version":3,"sources":["webpack:///cmssmartedit.js","webpack:///webpack/bootstrap","webpack:///npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js\" from dll-reference vendor_chunk","webpack:///npm-ancillary/npmancillary/resources/npm/node_modules/@angular/platform-browser/fesm5/platform-browser.js\" from dll-reference vendor_chunk","webpack:///npm-ancillary/npmancillary/resources/npm/node_modules/@angular/upgrade/fesm5/static.js\" from dll-reference vendor_chunk","webpack:///./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss?7fe8","webpack:///./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss?a19c","webpack:///./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss?77a7","webpack:////Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js","webpack:///npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\" from dll-reference vendor_chunk","webpack:////Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js","webpack:////Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/urls.js","webpack:///npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\" from dll-reference vendor_chunk","webpack:///delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/lib/smarteditcommons/src/index.js from dll-reference smarteditcommons","webpack:///./jsTarget/web/features/cmscommons sync \\.js$","webpack:///./jsTarget/web/features/cmscommons/cmsConstantsModule.ts","webpack:///./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss","webpack:///./jsTarget/web/features/cmscommons/components/synchronize/synchronizationConstants.ts","webpack:///./jsTarget/web/features/cmscommons/components/synchronize/synchronizationPanel.js","webpack:///./jsTarget/web/features/cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService.ts","webpack:///./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts","webpack:///./jsTarget/web/features/cmscommons/dao/index.ts","webpack:///./jsTarget/web/features/cmscommons/dao/resource.js","webpack:///./jsTarget/web/features/cmscommons/dao/resourceLocations.js","webpack:///./jsTarget/web/features/cmscommons/dtos/ICMSPage.ts","webpack:///./jsTarget/web/features/cmscommons/dtos/SlotStatus.ts","webpack:///./jsTarget/web/features/cmscommons/dtos/index.ts","webpack:///./jsTarget/web/features/cmscommons/index.ts","webpack:///./jsTarget/web/features/cmscommons/services/AssetsService.ts","webpack:///./jsTarget/web/features/cmscommons/services/AttributePermissionsRestService.ts","webpack:///./jsTarget/web/features/cmscommons/services/CMSTimeService.ts","webpack:///./jsTarget/web/features/cmscommons/services/IContextAwareEditableItemService.ts","webpack:///./jsTarget/web/features/cmscommons/services/IEditorModalService.ts","webpack:///./jsTarget/web/features/cmscommons/services/TypePermissionsRestService.ts","webpack:///./jsTarget/web/features/cmscommons/services/cache/tags/index.ts","webpack:///./jsTarget/web/features/cmscommons/services/cache/tags/slotEvictionTags.ts","webpack:///./jsTarget/web/features/cmscommons/services/cache/tags/workflowEvictionTags.ts","webpack:///./jsTarget/web/features/cmscommons/services/componentService.js","webpack:///./jsTarget/web/features/cmscommons/services/componentService.ts","webpack:///./jsTarget/web/features/cmscommons/services/componentVisibilityAlertServiceInterface.js","webpack:///./jsTarget/web/features/cmscommons/services/components/IComponentSharedService.ts","webpack:///./jsTarget/web/features/cmscommons/services/index.ts","webpack:///./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptor.ts","webpack:///./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptorModule.ts","webpack:///./jsTarget/web/features/cmscommons/services/modes/CMSModesService.ts","webpack:///./jsTarget/web/features/cmscommons/services/pages/IPageService.ts","webpack:///./jsTarget/web/features/cmscommons/services/pages/index.ts","webpack:///./jsTarget/web/features/cmscommons/services/removeComponentServiceInterface.js","webpack:///./jsTarget/web/features/cmscommons/services/synchronizationService.js","webpack:///./jsTarget/web/features/cmscommons/templates.js","webpack:///./jsTarget/web/features/cmssmartedit sync \\.js$","webpack:///./jsTarget/web/features/cmssmartedit/cmssmartedit.ts","webpack:///./jsTarget/web/features/cmssmartedit/components/cmsComponentsModule.ts","webpack:///./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss","webpack:///./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentButton.js","webpack:///./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentDecorator.js","webpack:///./jsTarget/web/features/cmssmartedit/components/index.ts","webpack:///./jsTarget/web/features/cmssmartedit/components/sharedComponent/sharedComponentButton.ts","webpack:///./jsTarget/web/features/cmssmartedit/components/slotShared/slotSharedButton.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecorator.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss","webpack:///./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecorator.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledComponent.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotUnshared/slotUnsharedButton.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityButton.js","webpack:///./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponent.js","webpack:///./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SlotSynchronizationPanel.ts","webpack:///./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecorator.ts","webpack:///./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html","webpack:///./jsTarget/web/features/cmssmartedit/components/synchronize/slots/slotSyncButton.js","webpack:///./jsTarget/web/features/cmssmartedit/dao/PageContentSlotsComponentsRestServiceInner.ts","webpack:///./jsTarget/web/features/cmssmartedit/forcedImports.ts","webpack:///./jsTarget/web/features/cmssmartedit/index.ts","webpack:///./jsTarget/web/features/cmssmartedit/legacyCmssmartedit.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/ComponentSharedServiceInner.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/EditorModalServiceInner.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/HiddenComponentMenuService.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/SyncPollingServiceInner.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/cmsSmarteditServicesModule.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/componentInfoService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/componentVisibilityAlertService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/contextAwareEditableItem/ContextAwareEditableItemServiceInner.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/contextualMenuDropdownService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/dragAndDrop/cmsDragAndDropService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/dragAndDrop/componentEditingFacadeService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/dragAndDrop/slotRestrictionsService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/editorEnablerService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/index.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/pageContentSlotsService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/pages/PageServiceInner.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/pages/index.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/removeComponentService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/slotContainerService.ts","webpack:///./jsTarget/web/features/cmssmartedit/services/slotSharedService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/slotSynchronizationService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/slotUnsharedService.js","webpack:///./jsTarget/web/features/cmssmartedit/services/slotVisibilityService.js","webpack:///./jsTarget/web/features/cmssmartedit/templates.js","webpack:///external \"angular\"","webpack:///external \"smarteditcommons\"","webpack:///external \"vendor_chunk\"","webpack:///external \"moment\""],"names":[],"mappings":"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;;;;;;MhD8mIM;;;;;OAKC,SAAS,QAAQ,SAAS;;AiD33IjC;EACA;;EAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;;;;;MjDq4IM;;;;;OAKC,SAAS,QAAQ,SAAS,qBAAqB;;AkDv+ItD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;;;AAIA;CACA;CACA;;AAEA;CACA;CACA;EACA;EACA;EACA;;CAEA;;AAEA;CACA;;AAEA;AACA;AACA;;;;MlD6+IM;;;;;OAKC,SAAS,QAAQ,qBAAqB,qBAAqB;;AAElE;AACA,oBAAoB,EAAE;+BACS,oBAAoB,EAAE,qBAAqB,sBAAsB,WAAW,EAAE,OAAO;qBAC/F,IAAI,qCAAqC,iCAAiC;qBAC1E,IAAI,yDAAyD,qDAAqD;qBAClH,IAAI,uDAAuD,mDAAmD;qBAC9G,IAAI,6CAA6C,yCAAyC;qBAC1F,IAAI,gGAAgG,4FAA4F;qBAChM,IAAI,gDAAgD,4CAA4C;qBAChG,IAAI,qEAAqE,oBAAoB,EAAE;qBAC/F,IAAI,uEAAuE,oEAAoE;qBAC/I,IAAI,4FAA4F,oBAAoB,EAAE;;;;;;;;;;;AmD9gJ3I;IAAA;;IAAa,qBAAkB;QAtB9B,uEAAc;QACd,+DAAS;YACT,SAA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OAKC,SAAS,QAAQ,SAAS;;;;;A6Dn9JjC;KACA;QACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;gBACA;gBACA;;;;;;;;M7Dg+JM;;;;;OAKC,SAAS,QAAQ,SAAS;;;;;A8Dh/JjC;KACA;;QAEA;QACA;;QAEA;QACA;;QAEA;YACA;YACA;YACA;;;QAGA;;YAEA;YACA;YACA;YACA;;;QAGA;YACA;YACA;gBACA;cACa;;;QAGb;YACA;YACA;gBACA;cACa;;;QAGb;YACA;gBACA;gBACA;cACa;;;QAGb;;YAEA;YACA;gBACA;mBACa;gBACb;;;YAGA;gBACA;gBACA;;;YAGA;;;QAGA;YACA;YACA;gBACA;mBACa;gBACb;;;YAGA;;;QAGA;YACA;UACS;;KAET;QACA;QACA;QACA;QACA;YACA;YACA;;;;;;;M9D4/JM;;;;;OAKC,SAAS,QAAQ,SAAS;;;;;A+DnlKjC;KACA;;QAEA;;YAEA;gBACA;gBACA;;;YAGA;gBACA;oBACA;oBACA;kBACiB;cACJ;;;;QAIb;;YAEA;YACA;YACA;YACA;;YAEA;gBACA;cACa;;YAEb;gBACA;cACa;;;QAGb;;YAEA;gBACA;gBACA;oBACA;oBACA;;;;;;QAMA;YACA;;;;KAIA;QACA;QACA;QACA;QACA;YACA;YACA;YACA;;;;;;;M/D+lKM;;;;;OAKC,SAAS,QAAQ,SAAS;;;;;;;;;;;;AgExpKjC;;;;;;;;KAQA;KACA;;;;;QAKA;;YAEA;YACA;;YAEA;;YAEA;gBACA;gBACA;gBACA;cACa;;YAEb;;;QAGA;YACA;;;QAGA;YACA;YACA;YACA;;;;;;QAMA;YACA;;YAEA;YACA;gBACA;oBACA;oBACA;;;UAGS;;QAET;YACA;UACS;;QAET;YACA;YACA;;YAEA;gBACA;;UAES;;QAET;YACA;gBACA;gBACA;;;;;;;;;;;KAWA;QACA;QACA;QACA;QACA;QACA;YACA;YACA;;;;;;;MhE2qKM;;;;;OAKC,SAAS,QAAQ,SAAS;;;;;;;;;;;;;AiExwKjC;;;;;;;;;;;;;KAaA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;QACA;QACA;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;;;;;;;;;SAWA;;;;;;;;;YASA;;;;;;;;;YASA;;;;;;;;;YASA;;;;;;;;;YASA;;;;;;;;;SASA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;UACA;;YAEA;;YAEA;YACA;YACA;;YAEA;YACA;YACA;;YAEA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;;YAGA;;;YAGA;YACA;YACA;YACA;YACA;;YAEA;YACA;;YAEA;;;;;;;;;;YAUA;gBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;;;;;;;;;;;;YAYA;gBACA;;gBAEA;oBACA;;gBAEA;oBACA;;;;;;;;;;;;;YAaA;gBACA;gBACA;;;gBAGA;gBACA;;gBAEA;oBACA;oBACA;kBACiB;;gBAEjB;oBACA;oBACA;kBACiB;;;;;;;;;;;;YAYjB;gBACA;;;gBAGA;;;gBAGA;;;;YAIA;gBACA;gBACA;cACa;;;YAGb;;gBAEA;;gBAEA;oBACA;;gBAEA;gBACA;;;;;gBAKA;gBACA;gBACA;gBACA;gBACA;;gBAEA;gBACA;;gBAEA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;;gBAEA;gBACA;gBACA;cACa;;YAEb;gBACA;cACa;;YAEb;gBACA;oBACA;wBACA;;;oBAGA;;;oBAGA;;wBAEA;2BACqB;;wBAErB;;;oBAGA;oBACA;;wBAEA;4BACA;;4BAEA;gCACA;oCACA;oCACA;;8BAE6B;;;;wBAI7B;4BACA;gCACA;oCACA;oCACA;;8BAE6B;;;;oBAI7B;wBACA;2BACqB;wBACrB;4BACA;gCACA;;4BAEA;gCACA;oCACA;;;;;;kBAMiB;;cAEJ;;YAEb;gBACA;oBACA;oBACA;oBACA;oBACA;;oBAEA;oBACA;;oBAEA;wBACA;4BACA;4BACA;;wBAEA;4BACA;;wBAEA;;oBAEA;wBACA;wBACA;;wBAEA;;wBAEA;4BACA;gCACA;oCACA;oCACA;;gCAEA;gCACA;mCAC6B;;gCAE7B;oCACA;oCACA;oCACA;;gCAEA;oCACA;oCACA;oCACA;;;gCAGA;;+BAEyB;4BACzB;gCACA;gCACA;;;oCAGA;;;;4BAIA;;;wBAGA;4BACA;0BACyB;4BACzB;0BACyB;4BACzB;;;;cAIa;;YAEb;gBACA;gBACA;oBACA;gBACA;oBACA;;gBAEA;oBACA;oBACA;gBACA;cACa;;YAEb;gBACA;oBACA;oBACA;;oBAEA;wBACA;;;;cAIa;;YAEb;gBACA;gBACA;gBACA;gBACA;cACa;;;;;;;;YAQb;gBACA;gBACA;oBACA;;gBAEA;;;;YAIA;gBACA;gBACA;;;gBAGA;gBACA;;;;gBAIA;;;YAGA;gBACA;gBACA;oBACA;;;gBAGA;gBACA;gBACA;;gBAEA;gBACA;gBACA;;;YAGA;gBACA;gBACA;;gBAEA;gBACA;oBACA;;oBAEA;wBACA;;;;gBAIA;oBACA;;oBAEA;;oBAEA;oBACA;oBACA;wBACA;;;oBAGA;wBACA;;4BAEA;gCACA;;gCAEA;gCACA;;;;;gCAKA;gCACA;;gCAEA;oCACA;oCACA;wCACA;;uCAEiC;oCACjC;;;gCAGA;oCACA;wCACA;wCACA;;;;0BAIyB;sBACJ;;;gBAGrB;;;YAGA;gBACA;;;gBAGA;;gBAEA;oBACA;oBACA;oBACA;;oBAEA;;oBAEA;wBACA;wBACA;;wBAEA;wBACA;wBACA;;wBAEA;wBACA;;wBAEA;wBACA;2BACqB;wBACrB;4BACA;4BACA;4BACA;;4BAEA;4BACA;;4BAEA;4BACA;;4BAEA;4BACA;;4BAEA;4BACA;;4BAEA;gCACA;gCACA;mCAC6B;gCAC7B;gCACA;;;4BAGA;4BACA;;4BAEA;;;;;;YAMA;gBACA;gBACA;oBACA;;;gBAGA;gBACA;;gBAEA;oBACA;oBACA;oBACA;;;;oBAIA;wBACA;4BACA;4BACA;4BACA;4BACA;4BACA;;;wBAGA;wBACA;4BACA;4BACA;gCACA;gCACA;gCAC6B;+BACJ;;4BAEzB;gCACA;gCACA;oCACA;wCACA;wCACA;;;gCAGA;oCACA;;gCAEA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;;;gCAGA;gCACA;oCACA;oCACA;wCACA;wCACA;wCACA;;;oCAGA;;;gCAGA;;;;wBAIA;;;;;;YAMA;gBACA;oBACA;oBACA;oBACA;;;;YAIA;gBACA;gBACA;oBACA;oBACA;;;;YAIA;gBACA;;gBAEA;oBACA;oBACA;oBACA;oBACA;oBACA;;;gBAGA;;;YAGA;gBACA;;gBAEA;;;YAGA;gBACA;gBACA;oBACA;oBACA;oBACA;oBACA;;;gBAGA;;;YAGA;gBACA;;;YAGA;gBACA;gBACA;oBACA;;;;YAIA;gBACA;;;;;;;;;YASA;gBACA;oBACA;oBACA;wBACA;;oBAEA;wBACA;;;;;;;;;;MpFwgOM;;;;;OAKC,SAAS,QAAQ,SAAS;;;;;;;;;;;;;;AqF7vPjC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;KAEA;KACA;;;;;;;;KAQA;;QAEA;;QAEA;YACA;gBACA;gBACA;oBACA;oBACA;;;;;QAKA;YACA;gBACA;oBACA;oBACA;wBACA;wBACA;wBACA;;;mBAGa;gBACb;;;;QAIA;YACA;gBACA;oBACA;wBACA;;oBAEA;mBACiB;oBACjB;oBACA;oBACA;;eAEa;gBACb;gBACA;gBACA;gBACA;;;;;;;;;;;;;;;;;;;;QAoBA;YACA;gBACA;gBACA;;YAEA;gBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;;;gBAGA;gBACA;;;;;;;;;;;;;;;;;QAiBA;YACA;gBACA;oBACA;wBACA;4BACA;gCACA;gCACA;gCACA;gCACA;gCACA;gCACA;;;;4BAIA;;;;;;;4BAOA;gCACA;gCACA;gCACA;gCACA;;;4BAGA;2BACyB;4BACzB;4BACA;;;oBAGA;wBACA;wBACA;;;;;;;;;;;;;;;;;;;;QAoBA;YACA;gBACA;oBACA;;;oBAGA;oBACA;oBACA;oBACA;;oBAEA;oBACA;oBACA;oBACA;oBACA;oBACA;;oBAEA;wBACA;wBACA;wBACA;wBACA;;oBAEA;wBACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;;;wBAGA;wBACA;;;eAGa;gBACb;gBACA;;;;;;;;;;;;;;;;;;;QAmBA;YACA;YACA;;YAEA;gBACA;oBACA;oBACA;oBACA;oBACA;oBACA;mBACiB;oBACjB;wBACA;;oBAEA;wBACA;4BACA;4BACA;gCACA;gCACA;;;wBAGA;;;;;;;;;;;MrFsxPM;;;;;OAKC,SAAS,QAAQ,SAAS;;;;;;;;;;;;;;;;;AsFxhQjC;KACA;QACA;QACA;QACA;QACA;;KAEA;KACA;QACA;QACA;QACA;;;;;;;;;;KAUA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;QACA;QACA;QACA;;;;;;;;;;QAUA;YACA;YACA;gBACA;oBACA;;;;YAIA;gBACA;oBACA;wBACA;sBACqB;;cAErB;gBACA;oBACA;;gBAEA;oBACA;;;;;;;;;;;;;;;QAeA;YACA;gBACA;oBACA;oBACA;oBACA;wBACA;2BACqB;wBACrB;wBACA;;oBAEA;kBACiB;;;;QAIjB;YACA;YACA;gBACA;oBACA;kBACiB;;YAEjB;YACA;YACA;;;;QAIA;YACA;gBACA;;YAEA;gBACA;oBACA;kBACiB;;;;;QAKjB;YACA;gBACA;oBACA;;oBAEA;wBACA;wBACA;4BACA;4BACA;;;oBAGA;yBACA;4BACA;4BACA;;yBAEA;4BACA;gCACA;gCACA;oCACA;wCACA;4CACA;4CACA;;wCAEA;sCACqC;;gCAErC;8BAC6B;4BAC7B;gCACA;gCACA;;;kBAGiB;;;;;;;;;;;;;;;;;;;;;;QAsBjB;YACA;gBACA;qBACA;qBACA;wBACA;4BACA;4BACA;gCACA;;;wBAGA;4BACA;gCACA;wCACA;wCACA;;oCAEA;oCACA;mCAC6B;gCAC7B;;;wBAGA;;;;;;;;;;;;;;;;;QAiBA;YACA;gBACA;oBACA;wBACA;4BACA;4BACA;gCACA;gCACA;oCACA;oCACA;oCACA;;;4BAGA;0BACyB;;kBAER;;;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EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;EAIA;IACA;IACA;;;;EAIA;IACA;IACA;IACA;IACA;IACA;;;;;;;;MlG6pSM;;;;;OAKC,SAAS,QAAQ,SAAS;;AmGvhTjC;;;;MnG6hTM;;;;;OAKC,SAAS,QAAQ,SAAS;;AoGliTjC;;;;MpGwiTM;;;;;OAKC,SAAS,QAAQ,SAAS;;AqG7iTjC;;;;MrGmjTM;;;;;OAKC,SAAS,QAAQ,SAAS;;AsGxjTjC","file":"cmssmartedit.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./jsTarget/web/features/cmssmartedit/index.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js\":\n/*!******************************************************************************************************************************************************************************************************!*\\\n  !*** delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js from dll-reference vendor_chunk ***!\n  \\******************************************************************************************************************************************************************************************************/\n/*! exports provided: ɵangular_packages_core_core_p, ɵangular_packages_core_core_m, ɵangular_packages_core_core_n, ɵangular_packages_core_core_o, ɵangular_packages_core_core_g, ɵangular_packages_core_core_k, ɵangular_packages_core_core_l, ɵangular_packages_core_core_c, ɵangular_packages_core_core_d, ɵangular_packages_core_core_e, ɵangular_packages_core_core_f, ɵangular_packages_core_core_q, ɵangular_packages_core_core_s, ɵangular_packages_core_core_r, ɵangular_packages_core_core_v, ɵangular_packages_core_core_t, ɵangular_packages_core_core_u, ɵangular_packages_core_core_z, ɵangular_packages_core_core_bh, ɵangular_packages_core_core_ba, ɵangular_packages_core_core_bb, ɵangular_packages_core_core_bc, ɵangular_packages_core_core_bd, ɵangular_packages_core_core_bg, ɵangular_packages_core_core_bk, ɵangular_packages_core_core_h, ɵangular_packages_core_core_i, ɵangular_packages_core_core_j, ɵangular_packages_core_core_a, ɵangular_packages_core_core_b, ɵangular_packages_core_core_bi, ɵangular_packages_core_core_w, ɵangular_packages_core_core_x, ɵangular_packages_core_core_y, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken, enableProdMode, isDevMode, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, INJECTOR, Injector, inject, InjectFlags, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, ɵNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ɵALLOW_MULTIPLE_PLATFORMS, ɵAPP_ID_RANDOM_PROVIDER, ɵdefaultIterableDiffers, ɵdefaultKeyValueDiffers, ɵdevModeEqual, ɵisListLikeIterable, ɵChangeDetectorStatus, ɵisDefaultChangeDetectionStrategy, ɵConsole, ɵgetInjectableDef, ɵinject, ɵsetCurrentInjector, ɵAPP_ROOT, ɵivyEnabled, ɵComponentFactory, ɵCodegenComponentFactoryResolver, ɵresolveComponentResources, ɵReflectionCapabilities, ɵRenderDebugInfo, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, ɵglobal, ɵlooseIdentical, ɵstringify, ɵmakeDecorator, ɵisObservable, ɵisPromise, ɵclearOverrides, ɵinitServicesIfNeeded, ɵoverrideComponentView, ɵoverrideProvider, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, ɵdefineBase, ɵdefineComponent, ɵdefineDirective, ɵdefinePipe, ɵdefineNgModule, ɵdetectChanges, ɵrenderComponent, ɵRender3ComponentFactory, ɵRender3ComponentRef, ɵdirectiveInject, ɵinjectAttribute, ɵgetFactoryOf, ɵgetInheritedFactory, ɵtemplateRefExtractor, ɵProvidersFeature, ɵInheritDefinitionFeature, ɵNgOnChangesFeature, ɵLifecycleHooksFeature, ɵRender3NgModuleRef, ɵmarkDirty, ɵNgModuleFactory, ɵNO_CHANGE, ɵcontainer, ɵnextContext, ɵelementStart, ɵnamespaceHTML, ɵnamespaceMathML, ɵnamespaceSVG, ɵelement, ɵlistener, ɵtext, ɵembeddedViewStart, ɵquery, ɵregisterContentQuery, ɵprojection, ɵbind, ɵinterpolation1, ɵinterpolation2, ɵinterpolation3, ɵinterpolation4, ɵinterpolation5, ɵinterpolation6, ɵinterpolation7, ɵinterpolation8, ɵinterpolationV, ɵpipeBind1, ɵpipeBind2, ɵpipeBind3, ɵpipeBind4, ɵpipeBindV, ɵpureFunction0, ɵpureFunction1, ɵpureFunction2, ɵpureFunction3, ɵpureFunction4, ɵpureFunction5, ɵpureFunction6, ɵpureFunction7, ɵpureFunction8, ɵpureFunctionV, ɵgetCurrentView, ɵrestoreView, ɵcontainerRefreshStart, ɵcontainerRefreshEnd, ɵqueryRefresh, ɵloadQueryList, ɵelementEnd, ɵelementProperty, ɵprojectionDef, ɵreference, ɵenableBindings, ɵdisableBindings, ɵelementAttribute, ɵelementContainerStart, ɵelementContainerEnd, ɵelementStyling, ɵelementStylingMap, ɵelementStyleProp, ɵelementStylingApply, ɵelementClassProp, ɵtextBinding, ɵtemplate, ɵembeddedViewEnd, ɵstore, ɵload, ɵpipe, ɵwhenRendered, ɵi18n, ɵi18nAttributes, ɵi18nExp, ɵi18nStart, ɵi18nEnd, ɵi18nApply, ɵi18nPostprocess, ɵWRAP_RENDERER_FACTORY2, ɵsetClassMetadata, ɵRender3DebugRendererFactory2, ɵcompileComponent, ɵcompileDirective, ɵcompileNgModule, ɵcompileNgModuleDefs, ɵpatchComponentDefWithScope, ɵcompilePipe, ɵsanitizeHtml, ɵsanitizeStyle, ɵsanitizeUrl, ɵsanitizeResourceUrl, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ɵgetContext, ɵbindPlayerFactory, ɵaddPlayer, ɵgetPlayers, ɵcompileNgModuleFactory__POST_R3__, ɵSWITCH_COMPILE_COMPONENT__POST_R3__, ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, ɵSWITCH_COMPILE_PIPE__POST_R3__, ɵSWITCH_COMPILE_NGMODULE__POST_R3__, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, ɵSWITCH_IVY_ENABLED__POST_R3__, ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, ɵSWITCH_RENDERER2_FACTORY__POST_R3__, ɵpublishGlobalUtil, ɵpublishDefaultGlobalUtils, ɵSWITCH_INJECTOR_FACTORY__POST_R3__, ɵregisterModuleFactory, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵelementEventFullName, ɵgetComponentViewDefinitionFactory, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpid, ɵprd, ɵpad, ɵpod, ɵppd, ɵqud, ɵted, ɵunv, ɵvid */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js\");\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/platform-browser/fesm5/platform-browser.js\":\n/*!******************************************************************************************************************************************************************************************************************************!*\\\n  !*** delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/@angular/platform-browser/fesm5/platform-browser.js from dll-reference vendor_chunk ***!\n  \\******************************************************************************************************************************************************************************************************************************/\n/*! exports provided: ɵangular_packages_platform_browser_platform_browser_c, ɵangular_packages_platform_browser_platform_browser_b, ɵangular_packages_platform_browser_platform_browser_a, ɵangular_packages_platform_browser_platform_browser_k, ɵangular_packages_platform_browser_platform_browser_d, ɵangular_packages_platform_browser_platform_browser_i, ɵangular_packages_platform_browser_platform_browser_h, ɵangular_packages_platform_browser_platform_browser_e, ɵangular_packages_platform_browser_platform_browser_f, ɵangular_packages_platform_browser_platform_browser_j, ɵangular_packages_platform_browser_platform_browser_g, BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, BrowserTransferStateModule, TransferState, makeStateKey, By, DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, DomSanitizer, VERSION, ɵBROWSER_SANITIZATION_PROVIDERS, ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, ɵinitDomAdapter, ɵBrowserDomAdapter, ɵBrowserPlatformLocation, ɵTRANSITION_ID, ɵBrowserGetTestability, ɵescapeHtml, ɵELEMENT_PROBE_PROVIDERS, ɵDomAdapter, ɵgetDOM, ɵsetRootDomAdapter, ɵDomRendererFactory2, ɵNAMESPACE_URIS, ɵflattenStyles, ɵshimContentAttribute, ɵshimHostAttribute, ɵDomEventsPlugin, ɵHammerGesturesPlugin, ɵKeyEventsPlugin, ɵDomSharedStylesHost, ɵSharedStylesHost, ɵDomSanitizerImpl */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/platform-browser/fesm5/platform-browser.js\");\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/upgrade/fesm5/static.js\":\n/*!***********************************************************************************************************************************************************************************************************!*\\\n  !*** delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/@angular/upgrade/fesm5/static.js from dll-reference vendor_chunk ***!\n  \\***********************************************************************************************************************************************************************************************************/\n/*! exports provided: ɵangular_packages_upgrade_static_static_e, ɵangular_packages_upgrade_static_static_c, ɵangular_packages_upgrade_static_static_a, ɵangular_packages_upgrade_static_static_d, ɵangular_packages_upgrade_static_static_b, getAngularJSGlobal, getAngularLib, setAngularJSGlobal, setAngularLib, downgradeComponent, downgradeInjectable, VERSION, downgradeModule, UpgradeComponent, UpgradeModule */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/upgrade/fesm5/static.js\");\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss\":\nn  !*** /Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true,\"url\":true}!/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src?{\"config\":{\"path\":\"./smartedit-build/config/\"}}!/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib?{\"data\":\"@import /\"se-variables/\";\",\"includePaths\":[\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\"]}!./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss ***!\nn/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(/*! ../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.i, \".se-sync-panel-header {\\n  padding: 0 20px 20px;\\n  border-bottom: 1px solid #d9d9d9;\\n  min-width: 400px; }\\n\\n.se-sync-panel__sub-header {\\n  padding-top: 4px;\\n  color: #51555a; }\\n\\n.se-sync-panel-header__new-page-message {\\n  padding: 20px; }\\n\\n.se-sync-panel__message--new-page {\\n  font-weight: 700;\\n  padding-bottom: 4px; }\\n\\n.se-sync-panel-header__timestamp {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  color: #51555a;\\n  position: absolute;\\n  left: 20px;\\n  bottom: 23px;\\n  width: 150px; }\\n\\n.se-sync-panel__sync-info {\\n  max-height: 300px;\\n  overflow-y: scroll; }\\n\\n.se-sync-panel__sync-info__row {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  padding: 0 20px;\\n  height: 40px;\\n  border-bottom: 1px solid #d9d9d9; }\\n  .se-sync-panel__sync-info__row:first-child {\\n    height: 50px; }\\n  .se-sync-panel__sync-info__row:last-child {\\n    border-bottom: none; }\\n\\n.se-sync-panel__info-checkbox {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  margin: 0 !important; }\\n  .se-sync-panel__info-checkbox input {\\n    margin: 0; }\\n\\n.fd-form__label.se-sync-panel__info-checkbox-label {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  word-break: break-all;\\n  max-width: 190px !important;\\n  margin: 0 !important;\\n  padding-left: 8px;\\n  color: #32363a;\\n  text-transform: capitalize; }\\n  .fd-form__label.se-sync-panel__info-checkbox-label--select-all {\\n    font-weight: bold !important; }\\n\\n.se-sync-panel__sync-info__right-icon {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--accept {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #0a7e3e; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--message-warning {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #e9730c; }\\n\\n.se-sync-panel__footer {\\n  padding: 20px;\\n  border-top: 1px solid #d9d9d9;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end; }\\n\\nbutton.se-sync-panel__footer__btn {\\n  text-transform: capitalize;\\n  padding: 8px 20px;\\n  margin-left: 8px; }\\n\\n.se-modal__body .se-sync-panel-header, .se-modal__body .se-sync-panel__sync-info {\\n  padding: 0;\\n  border-bottom: none; }\\n\\n.se-synchronize-catalog {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end; }\\n\\n.se-synchronize-catalog__sync-info {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n\\n.se-synchronize-catalog__sync-btn button {\\n  margin-left: 20px; }\\n\\n.se-synchronize-catalog__sync-info__sync-label,\\n.catalog-last-synced {\\n  color: #6a6d70;\\n  display: block;\\n  text-align: right;\\n  margin: 0; }\\n\\n.se-synchronize-catalog__sync-info__sync-cata-name {\\n  font-weight: 700;\\n  color: #51555a; }\\n\\n.se-synchronize-catalog__in-progress {\\n  color: #0a7e3e; }\\n\\n.se-synchronize-catalog__sync-failed {\\n  color: #bb0000; }\\n\", \"\",{\"version\":3,\"sources\":[\"synchronization.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB,gCAAgC;EAChC,gBAAgB,EAAE;;AAEpB;EACE,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,aAAa,EAAE;;AAEjB;EACE,gBAAgB;EAChB,mBAAmB,EAAE;;AAEvB;EACE,qBAAqB;EACrB,oBAAoB;EACpB,gBAAgB;EAChB,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,YAAY,EAAE;;AAEhB;EACE,iBAAiB;EACjB,kBAAkB,EAAE;;AAEtB;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,yBAA8B;MAA9B,sBAA8B;UAA9B,8BAA8B;EAC9B,eAAe;EACf,YAAY;EACZ,gCAAgC,EAAE;EAClC;IACE,YAAY,EAAE;EAChB;IACE,mBAAmB,EAAE;;AAEzB;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,oBAAoB,EAAE;EACtB;IACE,SAAS,EAAE;;AAEf;EACE,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,qBAAqB;EACrB,2BAA2B;EAC3B,oBAAoB;EACpB,iBAAiB;EACjB,cAAc;EACd,0BAA0B,EAAE;EAC5B;IACE,4BAA4B,EAAE;;AAElC;EACE,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,EAAE;;AAEpB;EACE,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,aAAa;EACb,6BAA6B;EAC7B,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,qBAAyB;MAAzB,kBAAyB;UAAzB,yBAAyB,EAAE;;AAE7B;EACE,0BAA0B;EAC1B,iBAAiB;EACjB,gBAAgB,EAAE;;AAEpB;EACE,UAAU;EACV,mBAAmB,EAAE;;AAEvB;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,qBAAyB;MAAzB,kBAAyB;UAAzB,yBAAyB,EAAE;;AAE7B;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB,EAAE;;AAEvB;EACE,iBAAiB,EAAE;;AAErB;;EAEE,cAAc;EACd,cAAc;EACd,iBAAiB;EACjB,SAAS,EAAE;;AAEb;EACE,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,cAAc,EAAE;;AAElB;EACE,cAAc,EAAE\",\"file\":\"synchronization.scss\",\"sourcesContent\":[\".se-sync-panel-header {\\n  padding: 0 20px 20px;\\n  border-bottom: 1px solid #d9d9d9;\\n  min-width: 400px; }\\n\\n.se-sync-panel__sub-header {\\n  padding-top: 4px;\\n  color: #51555a; }\\n\\n.se-sync-panel-header__new-page-message {\\n  padding: 20px; }\\n\\n.se-sync-panel__message--new-page {\\n  font-weight: 700;\\n  padding-bottom: 4px; }\\n\\n.se-sync-panel-header__timestamp {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  color: #51555a;\\n  position: absolute;\\n  left: 20px;\\n  bottom: 23px;\\n  width: 150px; }\\n\\n.se-sync-panel__sync-info {\\n  max-height: 300px;\\n  overflow-y: scroll; }\\n\\n.se-sync-panel__sync-info__row {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0 20px;\\n  height: 40px;\\n  border-bottom: 1px solid #d9d9d9; }\\n  .se-sync-panel__sync-info__row:first-child {\\n    height: 50px; }\\n  .se-sync-panel__sync-info__row:last-child {\\n    border-bottom: none; }\\n\\n.se-sync-panel__info-checkbox {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  margin: 0 !important; }\\n  .se-sync-panel__info-checkbox input {\\n    margin: 0; }\\n\\n.fd-form__label.se-sync-panel__info-checkbox-label {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  word-break: break-all;\\n  max-width: 190px !important;\\n  margin: 0 !important;\\n  padding-left: 8px;\\n  color: #32363a;\\n  text-transform: capitalize; }\\n  .fd-form__label.se-sync-panel__info-checkbox-label--select-all {\\n    font-weight: bold !important; }\\n\\n.se-sync-panel__sync-info__right-icon {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--accept {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #0a7e3e; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--message-warning {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #e9730c; }\\n\\n.se-sync-panel__footer {\\n  padding: 20px;\\n  border-top: 1px solid #d9d9d9;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\nbutton.se-sync-panel__footer__btn {\\n  text-transform: capitalize;\\n  padding: 8px 20px;\\n  margin-left: 8px; }\\n\\n.se-modal__body .se-sync-panel-header, .se-modal__body .se-sync-panel__sync-info {\\n  padding: 0;\\n  border-bottom: none; }\\n\\n.se-synchronize-catalog {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.se-synchronize-catalog__sync-info {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\\n.se-synchronize-catalog__sync-btn button {\\n  margin-left: 20px; }\\n\\n.se-synchronize-catalog__sync-info__sync-label,\\n.catalog-last-synced {\\n  color: #6a6d70;\\n  display: block;\\n  text-align: right;\\n  margin: 0; }\\n\\n.se-synchronize-catalog__sync-info__sync-cata-name {\\n  font-weight: 700;\\n  color: #51555a; }\\n\\n.se-synchronize-catalog__in-progress {\\n  color: #0a7e3e; }\\n\\n.se-synchronize-catalog__sync-failed {\\n  color: #bb0000; }\\n\"],\"sourceRoot\":\"\"}]);\n\n\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss\":\n/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** /Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true,\"url\":true}!/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src?{\"config\":{\"path\":\"./smartedit-build/config/\"}}!/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib?{\"data\":\"@import /\"se-variables/\";\",\"includePaths\":[\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\"]}!./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss ***!\nn/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(/*! ../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.i, \"#smarteditoverlay .se-slot-ctx-menu__divider::after {\\n  content: \\\"\\\";\\n  background-color: white;\\n  display: block;\\n  position: absolute;\\n  width: 1px;\\n  height: 16px;\\n  top: 8px;\\n  left: -2px;\\n  opacity: 0.6; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-wrapper {\\n  margin-right: 3px;\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  font-size: 1.28571rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  background-color: transparent;\\n  color: white;\\n  width: 55px;\\n  height: 32px;\\n  border: none; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle:hover:not(.se-slot-ctx-menu__dropdown-toggle--open) {\\n    opacity: 0.6; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open {\\n    background-color: white;\\n    color: #0a6ed1 !important; }\\n    #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open .se-slot-ctx-menu__dropdown-toggle-add-on {\\n      color: #0a6ed1; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon {\\n    font-size: 1.28571rem;\\n    line-height: 1.33333;\\n    font-weight: 400; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon--disabled {\\n    cursor: not-allowed; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-add-on {\\n    margin-left: 4px;\\n    font-size: 1rem;\\n    line-height: 1.42857;\\n    font-weight: 400;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__popover-ancor {\\n  position: absolute;\\n  display: block;\\n  cursor: not-allowed;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0; }\\n\\n#smarteditoverlay .se-slot-contextual-menu__header {\\n  padding: 20px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  border-bottom: 1px solid #d9d9d9;\\n  height: 53px; }\\n  #smarteditoverlay .se-slot-contextual-menu__header:first-child {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    color: #32363a; }\\n\\n#smarteditoverlay .se-slot__dropdown-menu.dropdown-menu {\\n  border: none;\\n  border-radius: 0;\\n  -webkit-transform: translateY(-2px);\\n          transform: translateY(-2px);\\n  min-width: 265px;\\n  max-height: 300px;\\n  overflow-y: auto; }\\n\\n#smarteditoverlay .se-sync-panel__info-checkbox input {\\n  margin: 0; }\\n\\n#smarteditoverlay::before {\\n  margin-right: 0 !important;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400; }\\n\\n#smarteditoverlay .se-sync-panel__sync-btn {\\n  color: white; }\\n\\n#smarteditoverlay .se-slot-visility__component-list {\\n  padding: 16px 20px;\\n  list-style: none; }\\n\\n#smarteditoverlay .se-slot-visility__component-list-item {\\n  margin-bottom: 16px; }\\n  #smarteditoverlay .se-slot-visility__component-list-item:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-slot-visibility-wrapper {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-align: start;\\n      -ms-flex-align: start;\\n          align-items: flex-start; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__content {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__description {\\n  margin-right: 16px; }\\n\\n#smarteditoverlay .se-slot-visibility__icon-wrapper {\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-visibility__icon {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  height: 48px;\\n  width: 48px;\\n  border-radius: 4px;\\n  background-color: #2b78c5;\\n  color: white;\\n  margin-right: 16px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared {\\n    color: fd-type(\\\"text\\\", 5);\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n\\n#smarteditoverlay .se-slot-visibility__icon--shared {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-width: 14px;\\n  border-color: #354a5f transparent transparent #354a5f;\\n  border-radius: 4px 0px 0px 0px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared::before {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    position: absolute;\\n    left: -12px;\\n    top: -15px;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name, #smarteditoverlay .se-slot-visiblity-component__visibility {\\n  color: #32363a; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name--link {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__type {\\n  color: #6a6d70; }\\n\\n#smarteditoverlay .slot-visiblity-component--globe-icon {\\n  margin-left: 4px; }\\n\\n#smarteditoverlay .se-hidden-component-menu__toggle {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-hidden-component-menu {\\n  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n          box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n  background-color: white;\\n  border-radius: 4px !important;\\n  min-width: 100px;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  position: absolute;\\n  border: 1px solid #d9d9d9;\\n  z-index: 2000;\\n  top: 96%;\\n  left: initial !important;\\n  right: 0; }\\n  #smarteditoverlay .se-hidden-component-menu::before {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: #d9d9d9;\\n    border-bottom-color: var(var(--fd-color-neutral-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -8px; }\\n  #smarteditoverlay .se-hidden-component-menu::after {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: white;\\n    border-bottom-color: var(var(--fd-color-background-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -7px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    right: 10px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    display: none; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item-icon {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  margin-right: 8px; }\\n\\n#smarteditoverlay .se-shared-slot__body {\\n  padding: 16px 20px;\\n  width: 350px; }\\n\\n#smarteditoverlay .se-shared-slot__sub-header {\\n  margin-bottom: 12px; }\\n\\n#smarteditoverlay .se-shared-slot__option {\\n  margin-bottom: 8px; }\\n  #smarteditoverlay .se-shared-slot__option:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-shared-slot__description {\\n  margin-bottom: 16px; }\\n\\n#smarteditoverlay .se-shared-slot__link {\\n  cursor: pointer;\\n  color: #0a6ed1;\\n  text-decoration: none;\\n  text-transform: capitalize; }\\n  #smarteditoverlay .se-shared-slot__link:hover {\\n    text-decoration: none;\\n    color: #085caf; }\\n\", \"\",{\"version\":3,\"sources\":[\"contextualSlotDropdown.scss\"],\"names\":[],\"mappings\":\"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\",\"file\":\"contextualSlotDropdown.scss\",\"sourcesContent\":[\"#smarteditoverlay .se-slot-ctx-menu__divider::after {\\n  content: \\\"\\\";\\n  background-color: white;\\n  display: block;\\n  position: absolute;\\n  width: 1px;\\n  height: 16px;\\n  top: 8px;\\n  left: -2px;\\n  opacity: 0.6; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-wrapper {\\n  margin-right: 3px;\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.28571rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  background-color: transparent;\\n  color: white;\\n  width: 55px;\\n  height: 32px;\\n  border: none; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle:hover:not(.se-slot-ctx-menu__dropdown-toggle--open) {\\n    opacity: 0.6; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open {\\n    background-color: white;\\n    color: #0a6ed1 !important; }\\n    #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open .se-slot-ctx-menu__dropdown-toggle-add-on {\\n      color: #0a6ed1; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon {\\n    font-size: 1.28571rem;\\n    line-height: 1.33333;\\n    font-weight: 400; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon--disabled {\\n    cursor: not-allowed; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-add-on {\\n    margin-left: 4px;\\n    font-size: 1rem;\\n    line-height: 1.42857;\\n    font-weight: 400;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__popover-ancor {\\n  position: absolute;\\n  display: block;\\n  cursor: not-allowed;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0; }\\n\\n#smarteditoverlay .se-slot-contextual-menu__header {\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  border-bottom: 1px solid #d9d9d9;\\n  height: 53px; }\\n  #smarteditoverlay .se-slot-contextual-menu__header:first-child {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    color: #32363a; }\\n\\n#smarteditoverlay .se-slot__dropdown-menu.dropdown-menu {\\n  border: none;\\n  border-radius: 0;\\n  transform: translateY(-2px);\\n  min-width: 265px;\\n  max-height: 300px;\\n  overflow-y: auto; }\\n\\n#smarteditoverlay .se-sync-panel__info-checkbox input {\\n  margin: 0; }\\n\\n#smarteditoverlay::before {\\n  margin-right: 0 !important;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400; }\\n\\n#smarteditoverlay .se-sync-panel__sync-btn {\\n  color: white; }\\n\\n#smarteditoverlay .se-slot-visility__component-list {\\n  padding: 16px 20px;\\n  list-style: none; }\\n\\n#smarteditoverlay .se-slot-visility__component-list-item {\\n  margin-bottom: 16px; }\\n  #smarteditoverlay .se-slot-visility__component-list-item:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-slot-visibility-wrapper {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  align-items: flex-start; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__content {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  flex-grow: 1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__description {\\n  margin-right: 16px; }\\n\\n#smarteditoverlay .se-slot-visibility__icon-wrapper {\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-visibility__icon {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  height: 48px;\\n  width: 48px;\\n  border-radius: 4px;\\n  background-color: #2b78c5;\\n  color: white;\\n  margin-right: 16px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared {\\n    color: fd-type(\\\"text\\\", 5);\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n\\n#smarteditoverlay .se-slot-visibility__icon--shared {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-width: 14px;\\n  border-color: #354a5f transparent transparent #354a5f;\\n  border-radius: 4px 0px 0px 0px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared::before {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    position: absolute;\\n    left: -12px;\\n    top: -15px;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name, #smarteditoverlay .se-slot-visiblity-component__visibility {\\n  color: #32363a; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name--link {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__type {\\n  color: #6a6d70; }\\n\\n#smarteditoverlay .slot-visiblity-component--globe-icon {\\n  margin-left: 4px; }\\n\\n#smarteditoverlay .se-hidden-component-menu__toggle {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-hidden-component-menu {\\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n  background-color: white;\\n  border-radius: 4px !important;\\n  min-width: 100px;\\n  width: fit-content;\\n  position: absolute;\\n  border: 1px solid #d9d9d9;\\n  z-index: 2000;\\n  top: 96%;\\n  left: initial !important;\\n  right: 0; }\\n  #smarteditoverlay .se-hidden-component-menu::before {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: #d9d9d9;\\n    border-bottom-color: var(var(--fd-color-neutral-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -8px; }\\n  #smarteditoverlay .se-hidden-component-menu::after {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: white;\\n    border-bottom-color: var(var(--fd-color-background-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -7px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    right: 10px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    display: none; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item-icon {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  margin-right: 8px; }\\n\\n#smarteditoverlay .se-shared-slot__body {\\n  padding: 16px 20px;\\n  width: 350px; }\\n\\n#smarteditoverlay .se-shared-slot__sub-header {\\n  margin-bottom: 12px; }\\n\\n#smarteditoverlay .se-shared-slot__option {\\n  margin-bottom: 8px; }\\n  #smarteditoverlay .se-shared-slot__option:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-shared-slot__description {\\n  margin-bottom: 16px; }\\n\\n#smarteditoverlay .se-shared-slot__link {\\n  cursor: pointer;\\n  color: #0a6ed1;\\n  text-decoration: none;\\n  text-transform: capitalize; }\\n  #smarteditoverlay .se-shared-slot__link:hover {\\n    text-decoration: none;\\n    color: #085caf; }\\n\"],\"sourceRoot\":\"\"}]);\n\n\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss\":\nn  !*** /Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true,\"url\":true}!/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src?{\"config\":{\"path\":\"./smartedit-build/config/\"}}!/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib?{\"data\":\"@import /\"se-variables/\";\",\"includePaths\":[\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\"]}!./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss ***!\nn/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(/*! ../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.i, \".se-slot-popover {\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: reverse;\\n      -ms-flex-direction: column-reverse;\\n          flex-direction: column-reverse;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n  .se-slot-popover__arrow {\\n    opacity: 0;\\n    margin-top: 15px;\\n    position: relative;\\n    width: 0;\\n    border-bottom: 12px solid #d9d9d9;\\n    border-right: 12px solid transparent;\\n    border-left: 12px solid transparent;\\n    z-index: 9999; }\\n    .se-slot-popover__arrow--fill {\\n      position: absolute;\\n      top: 1px;\\n      left: -11px;\\n      width: 0;\\n      border-bottom: 11px solid white;\\n      border-right: 11px solid transparent;\\n      border-left: 11px solid transparent; }\\n  .se-slot-popover:before {\\n    opacity: 0;\\n    -webkit-box-shadow: 0 0 4px 0 #d9d9d9;\\n            box-shadow: 0 0 4px 0 #d9d9d9;\\n    z-index: 3125;\\n    background-color: white;\\n    color: #32363a;\\n    border: 1px solid #d9d9d9;\\n    border-radius: 4px;\\n    content: attr(data-popover-content);\\n    margin-bottom: calc(-5.2 * 15px);\\n    padding: 10px;\\n    white-space: nowrap; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover:before {\\n  opacity: 1;\\n  margin-top: -1px; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover__arrow {\\n  opacity: 1; }\\n\", \"\",{\"version\":3,\"sources\":[\"popovers.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAA8B;EAA9B,8BAA8B;MAA9B,kCAA8B;UAA9B,8BAA8B;EAC9B,wBAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB,EAAE;EACzB;IACE,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,QAAQ;IACR,iCAAiC;IACjC,oCAAoC;IACpC,mCAAmC;IACnC,aAAa,EAAE;IACf;MACE,kBAAkB;MAClB,QAAQ;MACR,WAAW;MACX,QAAQ;MACR,+BAA+B;MAC/B,oCAAoC;MACpC,mCAAmC,EAAE;EACzC;IACE,UAAU;IACV,qCAA6B;YAA7B,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,mCAAmC;IACnC,gCAAgC;IAChC,aAAa;IACb,mBAAmB,EAAE;;AAEzB;EACE,UAAU;EACV,gBAAgB,EAAE;;AAEpB;EACE,UAAU,EAAE\",\"file\":\"popovers.scss\",\"sourcesContent\":[\".se-slot-popover {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column-reverse;\\n  justify-content: center; }\\n  .se-slot-popover__arrow {\\n    opacity: 0;\\n    margin-top: 15px;\\n    position: relative;\\n    width: 0;\\n    border-bottom: 12px solid #d9d9d9;\\n    border-right: 12px solid transparent;\\n    border-left: 12px solid transparent;\\n    z-index: 9999; }\\n    .se-slot-popover__arrow--fill {\\n      position: absolute;\\n      top: 1px;\\n      left: -11px;\\n      width: 0;\\n      border-bottom: 11px solid white;\\n      border-right: 11px solid transparent;\\n      border-left: 11px solid transparent; }\\n  .se-slot-popover:before {\\n    opacity: 0;\\n    box-shadow: 0 0 4px 0 #d9d9d9;\\n    z-index: 3125;\\n    background-color: white;\\n    color: #32363a;\\n    border: 1px solid #d9d9d9;\\n    border-radius: 4px;\\n    content: attr(data-popover-content);\\n    margin-bottom: calc(-5.2 * 15px);\\n    padding: 10px;\\n    white-space: nowrap; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover:before {\\n  opacity: 1;\\n  margin-top: -1px; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover__arrow {\\n  opacity: 1; }\\n\"],\"sourceRoot\":\"\"}]);\n\n\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\":\n/*!**************************************************************************************************************************************************************!*\\\n  !*** /Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js ***!\n  \\**************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\":\n/*!*******************************************************************************************************************************************************************************************!*\\\n  !*** delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js from dll-reference vendor_chunk ***!\n  \\*******************************************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\");\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\":\n/*!*************************************************************************************************************************************************************!*\\\n  !*** /Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js ***!\n  \\*************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/urls.js\":\n/*!********************************************************************************************************************************************************!*\\\n  !*** /Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/urls.js ***!\n  \\********************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n\n/***/ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\":\n/*!*********************************************************************************************************************************************************************************************!*\\\n  !*** delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js from dll-reference vendor_chunk ***!\n  \\*********************************************************************************************************************************************************************************************/\n/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n\n/***/ }),\n\n/***/ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\":\n/*!**********************************************************************************************************************************************************************************************!*\\\n  !*** delegated ./Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/lib/smarteditcommons/src/index.js from dll-reference smarteditcommons ***!\n  \\**********************************************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(/*! dll-reference smarteditcommons */ \"dll-reference smarteditcommons\"))(\"./smartedit-build/lib/smarteditcommons/src/index.js\");\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons sync recursive \\\\.js$\":\n/*!*****************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons sync \\.js$ ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./components/synchronize/synchronizationPanel.js\": \"./jsTarget/web/features/cmscommons/components/synchronize/synchronizationPanel.js\",\n\t\"./dao/resource.js\": \"./jsTarget/web/features/cmscommons/dao/resource.js\",\n\t\"./dao/resourceLocations.js\": \"./jsTarget/web/features/cmscommons/dao/resourceLocations.js\",\n\t\"./services/componentService.js\": \"./jsTarget/web/features/cmscommons/services/componentService.js\",\n\t\"./services/componentVisibilityAlertServiceInterface.js\": \"./jsTarget/web/features/cmscommons/services/componentVisibilityAlertServiceInterface.js\",\n\t\"./services/removeComponentServiceInterface.js\": \"./jsTarget/web/features/cmscommons/services/removeComponentServiceInterface.js\",\n\t\"./services/synchronizationService.js\": \"./jsTarget/web/features/cmscommons/services/synchronizationService.js\",\n\t\"./templates.js\": \"./jsTarget/web/features/cmscommons/templates.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./jsTarget/web/features/cmscommons sync recursive \\\\.js$\";\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/cmsConstantsModule.ts\":\n/*!****************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/cmsConstantsModule.ts ***!\n  \\****************************************************************/\n/*! exports provided: CmsConstantsModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmsConstantsModule\", function() { return CmsConstantsModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons_components_synchronize_synchronizationConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons/components/synchronize/synchronizationConstants */ \"./jsTarget/web/features/cmscommons/components/synchronize/synchronizationConstants.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nvar CmsConstantsModule = /** @class */ (function () {\n    function CmsConstantsModule() {\n    }\n    CmsConstantsModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeModule\"])({\n            providers: [\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"diNameUtils\"].makeValueProvider({ DEFAULT_SYNCHRONIZATION_STATUSES: cmscommons_components_synchronize_synchronizationConstants__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_SYNCHRONIZATION_STATUSES\"] }),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"diNameUtils\"].makeValueProvider({ DEFAULT_SYNCHRONIZATION_POLLING: cmscommons_components_synchronize_synchronizationConstants__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_SYNCHRONIZATION_POLLING\"] }),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"diNameUtils\"].makeValueProvider({ DEFAULT_SYNCHRONIZATION_EVENT: cmscommons_components_synchronize_synchronizationConstants__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_SYNCHRONIZATION_EVENT\"] })\n            ]\n        })\n    ], /* @ngInject */ CmsConstantsModule);\n    return CmsConstantsModule;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss\":\n/*!**************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(/*! !../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true,\"url\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src?{\"config\":{\"path\":\"./smartedit-build/config/\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib?{\"data\":\"@import /\"se-variables/\";\",\"includePaths\":[\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\"]}!./synchronization.scss */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/components/synchronize/synchronizationConstants.ts\":\n/*!*********************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/components/synchronize/synchronizationConstants.ts ***!\n  \\*********************************************************************************************/\n/*! exports provided: DEFAULT_SYNCHRONIZATION_STATUSES, DEFAULT_SYNCHRONIZATION_POLLING, DEFAULT_SYNCHRONIZATION_EVENT */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_SYNCHRONIZATION_STATUSES\", function() { return DEFAULT_SYNCHRONIZATION_STATUSES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_SYNCHRONIZATION_POLLING\", function() { return DEFAULT_SYNCHRONIZATION_POLLING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_SYNCHRONIZATION_EVENT\", function() { return DEFAULT_SYNCHRONIZATION_EVENT; });\n/* harmony import */ var _synchronization_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./synchronization.scss */ \"./jsTarget/web/features/cmscommons/components/synchronize/synchronization.scss\");\n/* harmony import */ var _synchronization_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_synchronization_scss__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc object\n * @name cmsConstantsModule.object:SYNCHRONIZATION_STATUSES\n *\n * @description\n * Constant containing the different sync statuses\n * * UNAVAILABLE\n * * IN_SYNC\n * * NOT_SYNC\n * * IN_PROGRESS\n * * SYNC_FAILED\n *\n */\n\nvar DEFAULT_SYNCHRONIZATION_STATUSES = {\n    UNAVAILABLE: \"UNAVAILABLE\",\n    IN_SYNC: \"IN_SYNC\",\n    NOT_SYNC: \"NOT_SYNC\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n    SYNC_FAILED: \"SYNC_FAILED\"\n};\n/**\n * @ngdoc object\n * @name cmsConstantsModule.object:SYNCHRONIZATION_POLLING\n *\n * @description\n * Constant containing polling related values\n * * `SLOW_POLLING_TIME` : the slow polling time in milliseconds\n * * `FAST_POLLING_TIME` : the slow polling time in milliseconds\n * * `SPEED_UP` : event used to speed up polling (`syncPollingSpeedUp`)\n * * `SLOW_DOWN` : event used to slow down polling (`syncPollingSlowDown`)\n * * `FAST_FETCH` : event used to trigger a sync fetch (`syncFastFetch`)\n * * `FETCH_SYNC_STATUS_ONCE`: event used to trigger a one time sync (`fetchSyncStatusOnce`)\n *\n */\nvar DEFAULT_SYNCHRONIZATION_POLLING = {\n    SLOW_POLLING_TIME: 20000,\n    FAST_POLLING_TIME: 4000,\n    SPEED_UP: \"syncPollingSpeedUp\",\n    SLOW_DOWN: \"syncPollingSlowDown\",\n    FAST_FETCH: \"syncFastFetch\",\n    FETCH_SYNC_STATUS_ONCE: \"fetchSyncStatusOnce\"\n};\n/**\n * @ngdoc object\n * @name cmsConstantsModule.object:SYNCHRONIZATION_EVENT\n *\n * @description\n * Constant containing synchronization events\n * * CATALOG_SYNCHRONIZED\n */\nvar DEFAULT_SYNCHRONIZATION_EVENT = {\n    CATALOG_SYNCHRONIZED: \"CATALOG_SYNCHRONIZED_EVENT\"\n};\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/components/synchronize/synchronizationPanel.js\":\n/*!*****************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/components/synchronize/synchronizationPanel.js ***!\n  \\*****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('synchronizationPanelModule', [\n        'yHelpModule',\n        'translationServiceModule',\n        'alertServiceModule',\n        'timerModule',\n        'alertsBoxModule',\n        'yMessageModule',\n        'smarteditServicesModule',\n        'l10nModule'\n    ])\n    .controller('SynchronizationPanelController', function($log, $q, $attrs, $translate, isBlank, EVENT_CONTENT_CATALOG_UPDATE, SYNCHRONIZATION_POLLING, SYNCHRONIZATION_STATUSES, alertService, systemEventService, timerService, crossFrameEventService, catalogService, l10nFilter, sharedDataService, waitDialogService) {\n\n        this.syncPendingItems = [];\n        this.selectedItems = [];\n        this.message = null;\n        this.showItemList = true;\n        this.disableList = false;\n        this.isLoading = false;\n        this.refreshInterval = SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME;\n        this.getRows = function() {\n            return this.syncStatus ? [this.syncStatus].concat(this.syncStatus.selectedDependencies) : [];\n        };\n\n        /**\n         * @ngdoc object\n         * @name synchronizationPanelModule.object:api\n         * @description\n         * The synchronization panel api object exposing public functionality\n         */\n        this.api = {\n            /**\n             * @ngdoc method\n             * @name selectAll\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that selects all items on synchronization panel. Should be used with onSyncStatusReady event.\n             */\n            selectAll: function() {\n                if (this.syncStatus) {\n                    this.syncStatus.selected = true;\n                    this.selectionChange(0);\n                } else {\n                    throw new Error(\"Synchronization status is not available. The 'selectAll' function should be used with 'onSyncStatusReady' event.\");\n                }\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name displayItemList\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that changes the visibility of the item list.\n             */\n            displayItemList: function(visible) {\n                this.showItemList = visible;\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name disableItemList\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that determines if the panel, as a whole, should be disabled.\n             * \n             */\n            disableItemList: function(disableList) {\n                this.disableList = disableList;\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name setMessage\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that adds a message (yMessage) in the panel. \n             * \n             */\n            setMessage: function(msgConfig) {\n                this.message = msgConfig;\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name disableItem\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that determines if an item should be disabled.\n             */\n            disableItem: null\n\n        };\n\n        this.selectionChange = function(index) {\n\n            this.syncStatus.selectedDependencies.forEach(function(item) {\n                item.selected = (index === 0 && item.status !== SYNCHRONIZATION_STATUSES.IN_SYNC && !item.isExternal) ? true : item.selected;\n            }.bind(this));\n\n            this.selectedItems = this.getRows().filter(function(item) {\n                return item.selected;\n            });\n\n            if (this.onSelectedItemsUpdate) {\n                this.onSelectedItemsUpdate(this.selectedItems);\n            }\n\n        };\n        this.preserveSelection = function(selectedItems) {\n\n            var itemIds = (selectedItems || []).map(function(item) {\n                return item.itemId;\n            }, []);\n\n            this.getRows().forEach(function(item) {\n                item.selected = itemIds.indexOf(item.itemId) > -1 && item.status !== SYNCHRONIZATION_STATUSES.IN_SYNC;\n            });\n        };\n\n        this.isDisabled = function(item) {\n            if (this.disableList || (this.api.disableItem && this.api.disableItem(item))) {\n                return true;\n            }\n\n            return (item !== this.syncStatus && this.syncStatus.selected) || item.status === SYNCHRONIZATION_STATUSES.IN_SYNC;\n        }.bind(this);\n\n        this.isSyncButtonDisabled = function() {\n            return (this.disableList || this.selectedItems.length === 0 || this.syncPendingItems.length !== 0);\n        };\n        this.isInSync = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.IN_SYNC;\n        };\n        this.isOutOfSync = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.NOT_IN_SYNC;\n        };\n        this.isInProgress = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.IN_PROGRESS;\n        };\n        this.isSyncFailed = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.SYNC_FAILED;\n        };\n        this.hasHelp = function(dependency) {\n            return dependency.dependentItemTypesOutOfSync && dependency.dependentItemTypesOutOfSync.length > 0;\n        };\n        this.buildInfoTemplate = function(dependency) {\n            if (dependency && dependency.dependentItemTypesOutOfSync && !dependency.isExternal) {\n                var infoTemplate = dependency.dependentItemTypesOutOfSync.reduce(function(accumulator, item) {\n                    accumulator += (\"<div>\" + $translate.instant(item.i18nKey) + \"</div>\");\n                    return accumulator;\n                }, \"\");\n                return (infoTemplate) ? \"<div>\" + infoTemplate + \"</div>\" : '';\n            } else if (dependency.isExternal) {\n                return dependency.catalogVersionNameTemplate;\n            }\n        };\n\n        this.fetchSyncStatus = function(eventId, eventData) {\n            if (eventData && eventData.itemId !== this.itemId) {\n                return;\n            }\n\n            this.isLoading = true;\n            return this.getSyncStatus(this.itemId).then(function(syncStatus) {\n                sharedDataService.get('experience').then(function(experience) {\n                    var targetCatalogVersion = syncStatus.catalogVersionUuid;\n                    this.syncStatus = syncStatus;\n                    this.preserveSelection(this.selectedItems);\n                    this.selectionChange();\n                    this._updateStatus();\n                    this.markExternalComponents(targetCatalogVersion, this.getRows());\n                    this.setTemplateExternalCatalogVersionName(experience, this.getRows());\n                    if (this.syncPendingItems.length === 0) {\n                        this.refreshInterval = SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME;\n                        this.resynchTimer.restart(this.refreshInterval);\n                        systemEventService.publishAsync(SYNCHRONIZATION_POLLING.SLOW_DOWN, this.itemId);\n                    }\n\n                    if (typeof this.onSyncStatusReady === 'function') {\n                        this.onSyncStatusReady({\n                            $syncStatus: syncStatus\n                        });\n                    }\n                }.bind(this));\n            }.bind(this)).finally(function() {\n                this.isLoading = false;\n            }.bind(this));\n        };\n\n        this.markExternalComponents = function(targetCatalogVersion, syncStatuses) {\n            syncStatuses.forEach(function(syncStatus) {\n                syncStatus.isExternal = syncStatus.catalogVersionUuid !== targetCatalogVersion;\n            });\n        };\n\n        this.getInfoTitle = function(dependency) {\n            if (!dependency.isExternal) {\n                return \"se.cms.synchronization.panel.update.title\";\n            }\n        };\n\n        this.getTemplateInfoForExternalComponent = function() {\n            return \"<div>\" + $translate.instant('se.cms.synchronization.slot.external.component') + \"</div>\";\n        };\n\n        this.setTemplateExternalCatalogVersionName = function(experience, syncStatuses) {\n            syncStatuses.forEach(function(syncStatus) {\n                syncStatus.catalogVersionNameTemplate = \"<span></span>\";\n                catalogService.getCatalogVersionByUuid(syncStatus.catalogVersionUuid, experience.siteDescriptor.uid).then(function(catalogVersion) {\n                    syncStatus.catalogVersionNameTemplate = \"<div>\" + l10nFilter(catalogVersion.catalogName) + \"</div>\";\n                });\n            });\n        };\n\n        this._updateStatus = function() {\n            var anyFailures = false;\n\n            var itemsInErrors = '';\n            var preNbSyncPendingItems = this.syncPendingItems.length;\n            this.getRows().forEach(function(item) {\n                if (this.syncPendingItems.indexOf(item.itemId) > -1 && item.status === SYNCHRONIZATION_STATUSES.SYNC_FAILED) {\n                    itemsInErrors = ' ' + itemsInErrors + item.itemId;\n                    anyFailures = true;\n                }\n                if (this.syncPendingItems.indexOf(item.itemId) > -1 && item.status !== SYNCHRONIZATION_STATUSES.IN_PROGRESS && item.status !== SYNCHRONIZATION_STATUSES.NOT_SYNC) {\n                    this.syncPendingItems.splice(this.syncPendingItems.indexOf(item.itemId), 1);\n                }\n\n                // if there was at least one item in the sync queue, and the last item has been resolved\n                // or if there wasn't any item in the sync queue\n                var syncQueueCompleted = (preNbSyncPendingItems && this.syncPendingItems.length === 0);\n                if (syncQueueCompleted || preNbSyncPendingItems === 0) {\n                    if (syncQueueCompleted) {\n                        systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE);\n                        preNbSyncPendingItems = 0;\n                    }\n                    waitDialogService.hideWaitModal();\n                }\n                if (item.status === SYNCHRONIZATION_STATUSES.IN_PROGRESS && this.syncPendingItems.indexOf(item.itemId) === -1) {\n                    this.syncPendingItems.push(item.itemId);\n                }\n            }.bind(this));\n\n            if (anyFailures) {\n                alertService.showDanger({\n                    message: $translate.instant('se.cms.synchronization.panel.failure.message', {\n                        items: itemsInErrors\n                    })\n                });\n            }\n\n        };\n\n        this.$onInit = function() {\n            this.syncItems = function() {\n\n                var syncPayload = this.getRows().filter(function(item) {\n                    return item.selected;\n                }).map(function(item) {\n                    return {\n                        itemId: item.itemId,\n                        itemType: item.itemType\n                    };\n                });\n                Array.prototype.push.apply(this.syncPendingItems, syncPayload.map(function(el) {\n                    return el.itemId;\n                }));\n\n                if (this.selectedItems.length) {\n                    waitDialogService.showWaitModal(\"se.sync.synchronizing\");\n                    return this.performSync(syncPayload).then(function() {\n                        this.refreshInterval = SYNCHRONIZATION_POLLING.FAST_POLLING_TIME;\n                        this.resynchTimer.restart(this.refreshInterval);\n                        systemEventService.publishAsync(SYNCHRONIZATION_POLLING.SPEED_UP, this.itemId);\n                    }.bind(this), function() {\n                        $log.warn(\"[synchronizationPanel] - Could not perform synchronization.\");\n                        waitDialogService.hideWaitModal();\n                    });\n                } else {\n                    return $q.when();\n                }\n            }.bind(this);\n\n            if (typeof this.getApi === 'function') {\n                this.getApi({\n                    $api: this.api\n                });\n            }\n\n            this.unsubscribeFastFetch = crossFrameEventService.subscribe(SYNCHRONIZATION_POLLING.FAST_FETCH, this.fetchSyncStatus.bind(this));\n            this.fetchSyncStatus();\n\n            //start timer polling\n            this.resynchTimer = timerService.createTimer(this.fetchSyncStatus.bind(this), this.refreshInterval);\n            this.resynchTimer.start();\n        };\n\n        this.$onDestroy = function() {\n            this.resynchTimer.teardown();\n            this.unsubscribeFastFetch();\n            systemEventService.publishAsync(SYNCHRONIZATION_POLLING.SLOW_DOWN, this.itemId);\n        };\n\n        this.$postLink = function() {\n            this.showSyncButton = isBlank($attrs.syncItems);\n        };\n    })\n    /**\n     * @ngdoc directive\n     * @name synchronizationPanelModule.component:synchronizationPanel\n     * @scope\n     * @restrict E\n     * @element synchronization-panel\n     *\n     * @description\n     * This component reads and performs synchronization for a main object and its dependencies (from a synchronization perspective).\n     * The component will list statuses of backend-configured dependent types.\n     * The main object and the listed dependencies will display as well lists of logical grouping of dependencies (in a popover)\n     * that cause the main object or the listed dependency to be out of sync.\n     * @param {< String} itemId the unique identifier of the main object of the synchronization panel\n     * @param {< Function} getSyncStatus the callback, invoked with itemId that returns a promise of the aggregated sync status required for the component to initialize.\n     * the expected format of the aggregated status is the following:\n     * ````\n     *{\n     *  itemId:'someUid',\n     *  itemType:'AbstractPage',\n     *  name:'Page1',\n     *  lastSyncTime: long,\n     *  selectAll: 'some.key.for.first.row.item' // Some i18nKey to display the title for the first item\n     *  status:{name: 'IN_SYNC', i18nKey: 'some.key.for.in.sync'}  //'IN_SYNC'|'NOT_IN_SYNC'|'NOT_AVAILABLE'|'IN_PROGRESS'|'SYNC_FAILED'\n     *  dependentItemTypesOutOfSync:[\n     *                          {code: 'MetaData', i18nKey: 'some.key.for.MetaData'},\n     *                          {code: 'Restrictions', i18nKey: 'some.key.for.Restrictions'},\n     *                          {code: 'Slot', i18nKey: 'some.key.for.Slot'},\n     *                          {code: 'Component', i18nKey: 'some.key.for.Component'},\n     *                          {code: 'Navigation', i18nKey: 'some.key.for.Navigation'},\n     *                          {code: 'Customization', i18nKey: 'some.key.for.Customization'}\n     *                          ],\n     *  selectedDependencies:[\n     *  {\n     *      itemId:'someUid',\n     *      itemType:'ContentSlot',\n     *      name:'Slot1',\n     *      lastSyncTime: long,\n     *      selectAll: 'some.key.for.first.row.item' // Some i18nKey to display the title for the first item\n     *      status:{name: 'IN_SYNC', i18nKey: 'some.key.for.in.sync'}  //'IN_SYNC'|'NOT_IN_SYNC'|'NOT_AVAILABLE'|'IN_PROGRESS'|'SYNC_FAILED'\n     *      dependentItemTypesOutOfSync:[\n     *                              {code: 'Component', i18nKey: 'some.key.for.Component'},\n     *                              {code: 'Navigation', i18nKey: 'some.key.for.Navigation'},\n     *                              {code: 'Customization', i18nKey: 'some.key.for.Customization'}\n     *                              ]\n     *  }\n     *  ]\n     *}\n     * ````\n     *  @param {< Function} performSync the function invoked with the list of item unique identifiers to perform synchronization. It returns a promise of the resulting sync status with the following values : 'IN_SYNC'|'NOT_IN_SYNC'|'NOT_AVAILABLE'|'IN_PROGRESS'|'SYNC_FAILED'\n     *  @param {< String =} headerTemplateUrl the path to an HTML template to customize the header of the synchronization panel. Optional.\n     *  @param {= Function =} syncItems enables parent directive/component to invoke the internal synchronization. Optional, if not set, the panel will display a sync button for manual synchronization.\n     *  @param {< Function =} onSelectedItemsUpdate callback function invoked when the the list of selected items change\n     *  @param {& Function =} onSyncStatusReady callback function that is invoked each time when the new synchronization status is available.\n     *  @param {& Function =} getApi Exposes the synchronization panel's api object\n     */\n    .component('synchronizationPanel', {\n        templateUrl: 'synchronizationPanelTemplate.html',\n        controller: 'SynchronizationPanelController',\n        controllerAs: 'sync',\n        bindings: {\n            itemId: '<',\n            getSyncStatus: '<',\n            performSync: '<',\n            headerTemplateUrl: '<?',\n            syncItems: '=?',\n            onSelectedItemsUpdate: '<?',\n            onSyncStatusReady: '&?',\n            getApi: '&?'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService.ts\":\n/*!*******************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService.ts ***!\n  \\*******************************************************************************************************/\n/*! exports provided: IPageContentSlotsComponentsRestService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IPageContentSlotsComponentsRestService\", function() { return IPageContentSlotsComponentsRestService; });\n/**\n * @description\n * Rest Service to retrieve page content slots for components.\n */\nvar IPageContentSlotsComponentsRestService = /** @class */ (function () {\n    function IPageContentSlotsComponentsRestService() {\n    }\n    /**\n     * @description\n     * Clears the slotId - components list map in the cache.\n     */\n    IPageContentSlotsComponentsRestService.prototype.clearCache = function () {\n        'proxyFunction';\n    };\n    /**\n     * @description\n     * Retrieves a list of pageContentSlotsComponents associated to a page and Converts the list of pageContentSlotsComponents to slotId - components list map.\n     * If the map is already stored in the cache, it will return the cache info.\n     *\n     * @param {string} pageUid The uid of the page to retrieve the content slots to components map.\n     * @return {Promise} A promise that resolves to slotId - components list map.\n     */\n    IPageContentSlotsComponentsRestService.prototype.getSlotsToComponentsMapForPageUid = function (pageUid) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @description\n     * Retrieves a list of all components for a given slot which is part of the page being loaded.\n     * It returns all the components irrespective of their visibility.\n     *\n     * @param {string} slotUuid The uid of the slot to retrieve the list of components.\n     * @return {Promise} A promise that resolves to components list.\n     */\n    IPageContentSlotsComponentsRestService.prototype.getComponentsForSlot = function (slotUuid) {\n        'proxyFunction';\n        return null;\n    };\n    return IPageContentSlotsComponentsRestService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts\":\n/*!******************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts ***!\n  \\******************************************************************************************/\n/*! exports provided: cmsitemsUri, cmsitemsEvictionTag, CmsitemsRestService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cmsitemsUri\", function() { return cmsitemsUri; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cmsitemsEvictionTag\", function() { return cmsitemsEvictionTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmsitemsRestService\", function() { return CmsitemsRestService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var cmscommons_dtos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cmscommons/dtos */ \"./jsTarget/web/features/cmscommons/dtos/index.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name cmsitemsRestService\n *\n * @description\n * The cmsitemsRestService provides a service to CRUD operations on CMS Items API.\n */\n\n\n\nvar cmsitemsUri = \"/cmswebservices/v1/sites/\" + smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"CONTEXT_SITE_ID\"] + \"/cmsitems\";\nvar cmsitemsEvictionTag = new smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"EvictionTag\"]({ event: \"CMSITEMS_UPDATE\" });\n/**\n * @ngdoc service\n * @name cmsitemsRestService.cmsitemsRestService\n *\n * @description\n * Service to deal with CMS Items related CRUD operations.\n */\nvar CmsitemsRestService = /** @class */ (function () {\n    function CmsitemsRestService(restServiceFactory, catalogService) {\n        this.restServiceFactory = restServiceFactory;\n        this.catalogService = catalogService;\n        this.cmsitemsUuidsUri = \"/cmswebservices/v1/sites/\" + smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"CONTEXT_SITE_ID\"] + \"/cmsitems/uuids\";\n        this.resource = restServiceFactory.get(cmsitemsUri);\n        this.versionedResource = restServiceFactory.get(cmsitemsUri + \"/:itemUuid\");\n        this.uuidsResource = restServiceFactory.get(this.cmsitemsUuidsUri);\n    }\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#create\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Create a new CMS Item.\n     *\n     * @param {Object} cmsitem The object representing the CMS Item to create\n     *\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the CMS Item object. If the\n     * request fails, it resolves with errors from the backend.\n     */\n    CmsitemsRestService.prototype.create = function (cmsitem) {\n        var _this = this;\n        return this.catalogService.getCatalogVersionUUid().then(function (catalogVersionUUid) {\n            cmsitem.catalogVersion = cmsitem.catalogVersion || catalogVersionUUid;\n            if (cmsitem.onlyOneRestrictionMustApply === undefined) {\n                cmsitem.onlyOneRestrictionMustApply = false;\n            }\n            return _this.resource.save(cmsitem);\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#getById\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Get the CMS Item that matches the given item uuid (Universally Unique Identifier).\n     *\n     * @param {Number} cmsitemUuid The CMS Item uuid\n     *\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the CMS Item object. If the\n     * request fails, it resolves with errors from the backend.\n     */\n    CmsitemsRestService.prototype.getById = function (cmsitemUuid) {\n        return this.resource.getById(cmsitemUuid);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#getByIdAndVersion\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Get the CMS Item that matches the given item uuid (Universally Unique Identifier) for a given version.\n     *\n     * @param {String} cmsitemUuid The CMS Item uuid\n     * @param {String} versionId The uid of the version to be retrieved.\n     *\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the CMS Item object. If the\n     * request fails, it resolves with errors from the backend.\n     */\n    CmsitemsRestService.prototype.getByIdAndVersion = function (itemUuid, versionId) {\n        return this.versionedResource.get({\n            itemUuid: itemUuid,\n            versionId: versionId\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#get\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Fetch CMS Items search result by making a REST call to the CMS Items API.\n     * A search can be performed by a typeCode (optionnaly in combination of a mask parameter), or by providing a list of cms items uuid.\n     *\n     * @param {Object} queryParams The object representing the query params\n     * @param {String} queryParams.pageSize number of items in the page\n     * @param {String} queryParams.currentPage current page number\n     * @param {String =} queryParams.typeCode for filtering on the cms item typeCode\n     * @param {String =} queryParams.mask for filtering the search\n     * @param {String =} queryParams.itemSearchParams search on additional fields using a comma separated list of field name and value\n     * pairs which are separated by a colon. Exact matches only.\n     * @param {String =} queryParams.catalogId the catalog to search items in. If empty, the current context catalog will be used.\n     * @param {String =} queryParams.catalogVersion the catalog version to search items in. If empty, the current context catalog version will be used.\n     *\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the paged search result. If the\n     * request fails, it resolves with errors from the backend.\n     */\n    CmsitemsRestService.prototype.get = function (queryParams) {\n        var _this = this;\n        return this.catalogService.retrieveUriContext().then(function (uriContext) {\n            var catalogDetailsParams = {\n                catalogId: queryParams.catalogId || uriContext.CURRENT_CONTEXT_CATALOG,\n                catalogVersion: queryParams.catalogVersion || uriContext.CURRENT_CONTEXT_CATALOG_VERSION\n            };\n            queryParams = lodash__WEBPACK_IMPORTED_MODULE_1__[\"merge\"](catalogDetailsParams, queryParams);\n            return _this.restServiceFactory.get(cmsitemsUri).get(queryParams);\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#getByIds\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Fetch CMS Items by uuids, making a POST call to the CMS Items API.\n     * A search can be performed by providing a list of cms items uuid.\n     *\n     * @param {string[] =} uuids list of cms item uuids\n     *\n     * @returns {Promise} If request is successful, it returns a promise that resolves to the result. If the\n     * request fails, it resolves with errors from the backend. Be mindful that the response payload size could\n     * increase dramatically depending on the number of uuids that you send on the request.\n     */\n    CmsitemsRestService.prototype.getByIds = function (uuids) {\n        var _this = this;\n        uuids = Array.from(new Set(uuids)); // removing duplicates\n        return this.catalogService.getCatalogVersionUUid().then(function (catalogVersion) {\n            return _this.uuidsResource.save({\n                catalogVersion: catalogVersion,\n                uuids: uuids\n            });\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#update\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Update a CMS Item.\n     *\n     * @param {Object} cmsitem The object representing the CMS Item to update\n     * @param {String} cmsitem.identifier The cms item identifier (uuid)\n     *\n     * @returns {angular.IPromise<CMSItem> } If request is successful, it returns a promise that resolves with the updated CMS Item object. If the\n     * request fails, it resolves with errors from the backend.\n     */\n    CmsitemsRestService.prototype.update = function (cmsitem) {\n        return this.resource.update(cmsitem);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsitemsRestService.service:cmsitemsRestService#delete\n     * @methodOf cmsitemsRestService.cmsitemsRestService\n     *\n     * @description\n     * Remove a CMS Item.\n     *\n     * @param {Number} cmsitemUuid The CMS Item uuid\n     */\n    CmsitemsRestService.prototype.delete = function (identifier) {\n        return this.resource.remove({\n            identifier: identifier\n        });\n    };\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"userEvictionTag\"], cmsitemsEvictionTag] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [String]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_a = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _a : Object)\n    ], CmsitemsRestService.prototype, \"getById\", null);\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"userEvictionTag\"], cmsitemsEvictionTag] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [String, String]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_b = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _b : Object)\n    ], CmsitemsRestService.prototype, \"getByIdAndVersion\", null);\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"userEvictionTag\"], cmsitemsEvictionTag] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Object]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_c = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _c : Object)\n    ], CmsitemsRestService.prototype, \"get\", null);\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"userEvictionTag\"], cmsitemsEvictionTag] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Array]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_d = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _d : Object)\n    ], CmsitemsRestService.prototype, \"getByIds\", null);\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"InvalidateCache\"])(cmsitemsEvictionTag),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_e = typeof cmscommons_dtos__WEBPACK_IMPORTED_MODULE_3__[\"CMSItem\"] !== \"undefined\" && cmscommons_dtos__WEBPACK_IMPORTED_MODULE_3__[\"CMSItem\"]) === \"function\" ? _e : Object]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_f = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _f : Object)\n    ], CmsitemsRestService.prototype, \"update\", null);\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"InvalidateCache\"])(cmsitemsEvictionTag),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [String]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_g = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _g : Object)\n    ], CmsitemsRestService.prototype, \"delete\", null);\n    CmsitemsRestService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"OperationContextRegistered\"])(cmsitemsUri.replace(/CONTEXT_SITE_ID/, ':CONTEXT_SITE_ID'), 'CMS'),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_h = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"IRestServiceFactory\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"IRestServiceFactory\"]) === \"function\" ? _h : Object, typeof (_j = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"ICatalogService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"ICatalogService\"]) === \"function\" ? _j : Object])\n    ], /* @ngInject */ CmsitemsRestService);\n    return CmsitemsRestService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dao/index.ts\":\n/*!*******************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dao/index.ts ***!\n  \\*******************************************************/\n/*! exports provided: cmsitemsUri, cmsitemsEvictionTag, CmsitemsRestService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cmswebservices/sites/CmsitemsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cmsitemsUri\", function() { return _cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_0__[\"cmsitemsUri\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cmsitemsEvictionTag\", function() { return _cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_0__[\"cmsitemsEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmsitemsRestService\", function() { return _cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_0__[\"CmsitemsRestService\"]; });\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dao/resource.js\":\n/*!**********************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dao/resource.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n(function() {\n    /**\n     * @ngdoc overview\n     * @name resourceModule\n     *\n     * @description\n     * The resource module provides $resource factories.\n     */\n    angular.module('resourceModule', ['smarteditServicesModule', 'resourceLocationsModule', 'cmsResourceLocationsModule', 'functionsModule'])\n        /**\n         * @ngdoc service\n         * @name resourceModule.service:itemsResource\n         *\n         * @description\n         * This service is used to retrieve the $resource factor for retrieving component items.\n         */\n        .factory('itemsResource', function(restServiceFactory, ITEMS_RESOURCE_URI, URIBuilder) {\n\n            return {\n                /**\n                 * @ngdoc method\n                 * @name resourceModule.service:itemsResource#getItemResourceByContext\n                 * @methodOf resourceModule.service:itemsResource\n                 * \n                 * @description\n                 * Returns  the resource of the custom components REST service by replacing the placeholders with the currently selected catalog version.\n                 */\n                getItemResource: function() {\n                    return restServiceFactory.get(ITEMS_RESOURCE_URI);\n                },\n\n                /**\n                 * @ngdoc method\n                 * @name resourceModule.service:itemsResource#getItemResourceByContext\n                 * @methodOf resourceModule.service:itemsResource\n                 * \n                 * @description\n                 * Returns  the resource of the custom components REST service by providing the current uri context as the input object.\n                 * \n                 * The input object contains the necessary site and catalog information to retrieve the items.\n                 * \n                 * @param {Object} uriContext A  {@link resourceLocationsModule.object:UriContext uriContext}\n                 */\n                getItemResourceByContext: function(context) {\n                    return restServiceFactory.get(new URIBuilder(ITEMS_RESOURCE_URI).replaceParams(context).build());\n                }\n\n            };\n\n        })\n        .factory('pagesContentSlotsComponentsResource', function(restServiceFactory, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI) {\n            return restServiceFactory.get(PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI);\n        })\n        .factory('navigationNodeRestService', function(restServiceFactory, NAVIGATION_MANAGEMENT_RESOURCE_URI) {\n            return restServiceFactory.get(NAVIGATION_MANAGEMENT_RESOURCE_URI);\n        })\n        .factory('synchronizationResource', function(restServiceFactory, URIBuilder, GET_PAGE_SYNCHRONIZATION_RESOURCE_URI, POST_PAGE_SYNCHRONIZATION_RESOURCE_URI) {\n\n            return {\n\n                getPageSynchronizationGetRestService: function(uriContext) {\n                    var getURI = new URIBuilder(GET_PAGE_SYNCHRONIZATION_RESOURCE_URI).replaceParams(uriContext).build();\n                    return restServiceFactory.get(getURI);\n                },\n\n                getPageSynchronizationPostRestService: function(uriContext) {\n                    var postURI = new URIBuilder(POST_PAGE_SYNCHRONIZATION_RESOURCE_URI).replaceParams(uriContext).build();\n                    return restServiceFactory.get(postURI);\n                }\n            };\n\n        });\n})();\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dao/resourceLocations.js\":\n/*!*******************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dao/resourceLocations.js ***!\n  \\*******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n(function() {\n\n    var CONTEXT_CATALOG = 'CURRENT_CONTEXT_CATALOG';\n    var CONTEXT_CATALOG_VERSION = 'CURRENT_CONTEXT_CATALOG_VERSION';\n    var CONTEXT_SITE_ID = 'CURRENT_CONTEXT_SITE_ID';\n\n    var PAGE_CONTEXT_CATALOG = 'CURRENT_PAGE_CONTEXT_CATALOG';\n    var PAGE_CONTEXT_CATALOG_VERSION = 'CURRENT_PAGE_CONTEXT_CATALOG_VERSION';\n    var PAGE_CONTEXT_SITE_ID = 'CURRENT_PAGE_CONTEXT_SITE_ID';\n\n    angular.module('cmsResourceLocationsModule', [])\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTEXT_SITE_ID\n         *\n         * @description\n         * Constant containing the name of the site uid placeholder in URLs\n         */\n        .constant('CONTEXT_SITE_ID', CONTEXT_SITE_ID)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTEXT_CATALOG\n         *\n         * @description\n         * Constant containing the name of the catalog uid placeholder in URLs\n         */\n        .constant('CONTEXT_CATALOG', CONTEXT_CATALOG)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTEXT_CATALOG_VERSION\n         *\n         * @description\n         * Constant containing the name of the catalog version placeholder in URLs\n         */\n        .constant('CONTEXT_CATALOG_VERSION', CONTEXT_CATALOG_VERSION)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_CONTEXT_SITE_ID\n         *\n         * @description\n         * Constant containing the name of the current page site uid placeholder in URLs\n         */\n        .constant('PAGE_CONTEXT_SITE_ID', PAGE_CONTEXT_SITE_ID)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_CONTEXT_CATALOG\n         *\n         * @description\n         * Constant containing the name of the current page catalog uid placeholder in URLs\n         */\n        .constant('PAGE_CONTEXT_CATALOG', PAGE_CONTEXT_CATALOG)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_CONTEXT_CATALOG_VERSION\n         *\n         * @description\n         * Constant containing the name of the current page catalog version placeholder in URLs\n         */\n        .constant('PAGE_CONTEXT_CATALOG_VERSION', PAGE_CONTEXT_CATALOG_VERSION)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:UriContext\n         *\n         * @description\n         * A map that contains the necessary site and catalog information for CMS services and directives.\n         * It contains the following keys:\n         * {@link resourceLocationsModule.object:CONTEXT_SITE_ID CONTEXT_SITE_ID} for the site uid,\n         * {@link resourceLocationsModule.object:CONTEXT_CATALOG CONTEXT_CATALOG} for the catalog uid,\n         * {@link resourceLocationsModule.object:CONTEXT_CATALOG_VERSION CONTEXT_CATALOG_VERSION} for the catalog version.\n         */\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:TYPES_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the component types REST service.\n         */\n        .constant('TYPES_RESOURCE_URI', '/cmswebservices/v1/types')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:ITEMS_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the custom components REST service.\n         */\n        .constant('ITEMS_RESOURCE_URI', '/cmswebservices/v1/sites/' + CONTEXT_SITE_ID + '/catalogs/' + CONTEXT_CATALOG + '/versions/' + CONTEXT_CATALOG_VERSION + '/items')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages content slot component REST service.\n         */\n        .constant('PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI', '/cmswebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pagescontentslotscomponents')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTENT_SLOT_TYPE_RESTRICTION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the content slot type restrictions REST service.\n         */\n        .constant('CONTENT_SLOT_TYPE_RESTRICTION_RESOURCE_URI', '/cmswebservices/v1/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pages/:pageUid/contentslots/:slotUid/typerestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the content slot type restrictions REST service given the page uid.\n         */\n        .constant('CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI', '/cmswebservices/v1/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pages/:pageUid/typerestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsMod`ule.object:PAGES_LIST_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages REST service.\n         */\n        .constant('PAGES_LIST_RESOURCE_URI', '/cmswebservices/v1/sites/' + CONTEXT_SITE_ID + '/catalogs/' + CONTEXT_CATALOG + '/versions/' + CONTEXT_CATALOG_VERSION + '/pages')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_LIST_PATH\n         *\n         * @description\n         * Path of the page list\n         */\n        .constant('PAGE_LIST_PATH', '/pages/:siteId/:catalogId/:catalogVersion')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:TRASHED_PAGE_LIST_PATH\n         *\n         * @description\n         * Path of the page list\n         */\n        .constant('TRASHED_PAGE_LIST_PATH', '/trashedpages/:siteId/:catalogId/:catalogVersion')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGES_CONTENT_SLOT_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the page content slots REST service\n         */\n        .constant('PAGES_CONTENT_SLOT_RESOURCE_URI', '/cmswebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pagescontentslots')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_TEMPLATES_URI\n         *\n         * @description\n         * Resource URI of the page templates REST service\n         */\n        .constant('PAGE_TEMPLATES_URI', '/cmswebservices/v1/sites/:' + CONTEXT_SITE_ID + '/catalogs/:' + CONTEXT_CATALOG + '/versions/:' + CONTEXT_CATALOG_VERSION + '/pagetemplates')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_PAGE_PATH\n         *\n         * @description\n         * Path to the Navigation Management\n         */\n        .constant('NAVIGATION_MANAGEMENT_PAGE_PATH', '/navigations/:siteId/:catalogId/:catalogVersion')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the navigations REST service.\n         */\n        .constant('NAVIGATION_MANAGEMENT_RESOURCE_URI', '/cmswebservices/v1/sites/:' + CONTEXT_SITE_ID + '/catalogs/:' + CONTEXT_CATALOG + '/versions/:' + CONTEXT_CATALOG_VERSION + '/navigations')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_ENTRIES_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the navigations REST service.\n         */\n        .constant('NAVIGATION_MANAGEMENT_ENTRIES_RESOURCE_URI', '/cmswebservices/v1/sites/:' + CONTEXT_SITE_ID + '/catalogs/:' + CONTEXT_CATALOG + '/versions/:' + CONTEXT_CATALOG_VERSION + '/navigations/:navigationUid/entries')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_ENTRY_TYPES_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the navigation entry types REST service.\n         */\n        .constant('NAVIGATION_MANAGEMENT_ENTRY_TYPES_RESOURCE_URI', '/cmswebservices/v1/navigationentrytypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.CONTEXTUAL_PAGES_RESTRICTIONS_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages restrictions REST service, with placeholders to be replaced by the currently selected catalog version.\n         */\n        .constant('CONTEXTUAL_PAGES_RESTRICTIONS_RESOURCE_URI', '/cmswebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pagesrestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.PAGES_RESTRICTIONS_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages restrictions REST service, with placeholders to be replaced by the currently selected catalog version.\n         */\n        .constant('PAGES_RESTRICTIONS_RESOURCE_URI', '/cmswebservices/v1/sites/:siteUID/catalogs/:catalogId/versions/:catalogVersion/pagesrestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.RESTRICTION_TYPES_URI\n         *\n         * @description\n         * Resource URI of the restriction types REST service.\n         */\n        .constant('RESTRICTION_TYPES_URI', '/cmswebservices/v1/restrictiontypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.RESTRICTION_TYPES_URI\n         *\n         * @description\n         * Resource URI of the pageTypes-restrictionTypes relationship REST service.\n         */\n        .constant('PAGE_TYPES_RESTRICTION_TYPES_URI', '/cmswebservices/v1/pagetypesrestrictiontypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.PAGE_TYPES_URI\n         *\n         * @description\n         * Resource URI of the page types REST service.\n         */\n        .constant('PAGE_TYPES_URI', '/cmswebservices/v1/pagetypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:GET_PAGE_SYNCHRONIZATION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI to retrieve the full synchronization status of page related items\n         */\n        .constant('GET_PAGE_SYNCHRONIZATION_RESOURCE_URI', '/cmssmarteditwebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/synchronizations/versions/:target/pages/:pageUid')\n\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:POST_PAGE_SYNCHRONIZATION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI to perform synchronization of page related items\n         */\n        .constant('POST_PAGE_SYNCHRONIZATION_RESOURCE_URI', '/cmssmarteditwebservices/v1/sites/' + CONTEXT_SITE_ID + '/catalogs/' + CONTEXT_CATALOG + '/versions/' + CONTEXT_CATALOG_VERSION + '/synchronizations/versions/:target');\n})();\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/CMSItem.ts\":\n/*!**********************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/CMSItem.ts ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/CMSItemStructure.ts\":\n/*!*******************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/CMSItemStructure.ts ***!\n  \\*******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/CMSRestriction.ts\":\n/*!*****************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/CMSRestriction.ts ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/ICMSComponent.ts\":\n/*!****************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/ICMSComponent.ts ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/ICMSPage.ts\":\n/*!***********************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/ICMSPage.ts ***!\n  \\***********************************************************/\n/*! exports provided: CMSPageTypes, CMSPageStatus, CmsApprovalStatus */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CMSPageTypes\", function() { return CMSPageTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CMSPageStatus\", function() { return CMSPageStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmsApprovalStatus\", function() { return CmsApprovalStatus; });\nvar CMSPageTypes;\n(function (CMSPageTypes) {\n    CMSPageTypes[\"ContentPage\"] = \"ContentPage\";\n    CMSPageTypes[\"CategoryPage\"] = \"CategoryPage\";\n    CMSPageTypes[\"ProductPage\"] = \"ProductPage\";\n    CMSPageTypes[\"EmailPage\"] = \"EmailPage\";\n})(CMSPageTypes || (CMSPageTypes = {}));\nvar CMSPageStatus;\n(function (CMSPageStatus) {\n    CMSPageStatus[\"ACTIVE\"] = \"ACTIVE\";\n    CMSPageStatus[\"DELETED\"] = \"DELETED\";\n})(CMSPageStatus || (CMSPageStatus = {}));\nvar CmsApprovalStatus;\n(function (CmsApprovalStatus) {\n    CmsApprovalStatus[\"APPROVED\"] = \"APPROVED\";\n    CmsApprovalStatus[\"CHECK\"] = \"CHECK\";\n    CmsApprovalStatus[\"UNAPPROVED\"] = \"UNAPPROVED\";\n})(CmsApprovalStatus || (CmsApprovalStatus = {}));\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/ISyncStatus.ts\":\n/*!**************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/ISyncStatus.ts ***!\n  \\**************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/SlotStatus.ts\":\n/*!*************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/SlotStatus.ts ***!\n  \\*************************************************************/\n/*! exports provided: SlotStatus */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotStatus\", function() { return SlotStatus; });\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @description\n * This enum contains the possible types (called status) of a Cms Content Slot.\n */\nvar SlotStatus;\n(function (SlotStatus) {\n    SlotStatus[\"TEMPLATE\"] = \"TEMPLATE\";\n    SlotStatus[\"PAGE\"] = \"PAGE\";\n    SlotStatus[\"OVERRIDE\"] = \"OVERRIDE\";\n})(SlotStatus || (SlotStatus = {}));\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/dtos/index.ts\":\n/*!********************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/dtos/index.ts ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CMSRestriction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CMSRestriction */ \"./jsTarget/web/features/cmscommons/dtos/CMSRestriction.ts\");\n/* harmony import */ var _CMSRestriction__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_CMSRestriction__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSRestriction\", function() { return _CMSRestriction__WEBPACK_IMPORTED_MODULE_0__[\"CMSRestriction\"]; });\n\n/* harmony import */ var _CMSItemStructure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CMSItemStructure */ \"./jsTarget/web/features/cmscommons/dtos/CMSItemStructure.ts\");\n/* harmony import */ var _CMSItemStructure__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_CMSItemStructure__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSItemStructure\", function() { return _CMSItemStructure__WEBPACK_IMPORTED_MODULE_1__[\"CMSItemStructure\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSItemStructureField\", function() { return _CMSItemStructure__WEBPACK_IMPORTED_MODULE_1__[\"CMSItemStructureField\"]; });\n\n/* harmony import */ var _ICMSComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ICMSComponent */ \"./jsTarget/web/features/cmscommons/dtos/ICMSComponent.ts\");\n/* harmony import */ var _ICMSComponent__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ICMSComponent__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ICMSComponent\", function() { return _ICMSComponent__WEBPACK_IMPORTED_MODULE_2__[\"ICMSComponent\"]; });\n\n/* harmony import */ var _CMSItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CMSItem */ \"./jsTarget/web/features/cmscommons/dtos/CMSItem.ts\");\n/* harmony import */ var _CMSItem__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_CMSItem__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _CMSItem__WEBPACK_IMPORTED_MODULE_3__) if([\"CMSRestriction\",\"CMSItemStructure\",\"CMSItemStructureField\",\"ICMSComponent\",\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _CMSItem__WEBPACK_IMPORTED_MODULE_3__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _ICMSPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ICMSPage */ \"./jsTarget/web/features/cmscommons/dtos/ICMSPage.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSPageTypes\", function() { return _ICMSPage__WEBPACK_IMPORTED_MODULE_4__[\"CMSPageTypes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSPageStatus\", function() { return _ICMSPage__WEBPACK_IMPORTED_MODULE_4__[\"CMSPageStatus\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmsApprovalStatus\", function() { return _ICMSPage__WEBPACK_IMPORTED_MODULE_4__[\"CmsApprovalStatus\"]; });\n\n/* harmony import */ var _SlotStatus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SlotStatus */ \"./jsTarget/web/features/cmscommons/dtos/SlotStatus.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SlotStatus\", function() { return _SlotStatus__WEBPACK_IMPORTED_MODULE_5__[\"SlotStatus\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/index.ts\":\n/*!***************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/index.ts ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dtos_ISyncStatus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dtos/ISyncStatus */ \"./jsTarget/web/features/cmscommons/dtos/ISyncStatus.ts\");\n/* harmony import */ var _dtos_ISyncStatus__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_dtos_ISyncStatus__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ISyncStatus\", function() { return _dtos_ISyncStatus__WEBPACK_IMPORTED_MODULE_0__[\"ISyncStatus\"]; });\n\n/* harmony import */ var _services_AssetsService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/AssetsService */ \"./jsTarget/web/features/cmscommons/services/AssetsService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AssetsService\", function() { return _services_AssetsService__WEBPACK_IMPORTED_MODULE_1__[\"AssetsService\"]; });\n\n/* harmony import */ var _services_modes_CMSModesService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/modes/CMSModesService */ \"./jsTarget/web/features/cmscommons/services/modes/CMSModesService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSModesService\", function() { return _services_modes_CMSModesService__WEBPACK_IMPORTED_MODULE_2__[\"CMSModesService\"]; });\n\n/* harmony import */ var cmscommons_services_TypePermissionsRestService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cmscommons/services/TypePermissionsRestService */ \"./jsTarget/web/features/cmscommons/services/TypePermissionsRestService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TypePermissionNames\", function() { return cmscommons_services_TypePermissionsRestService__WEBPACK_IMPORTED_MODULE_3__[\"TypePermissionNames\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TypePermissionsRestService\", function() { return cmscommons_services_TypePermissionsRestService__WEBPACK_IMPORTED_MODULE_3__[\"TypePermissionsRestService\"]; });\n\n/* harmony import */ var cmscommons_services_AttributePermissionsRestService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cmscommons/services/AttributePermissionsRestService */ \"./jsTarget/web/features/cmscommons/services/AttributePermissionsRestService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AttributePermissionsRestService\", function() { return cmscommons_services_AttributePermissionsRestService__WEBPACK_IMPORTED_MODULE_4__[\"AttributePermissionsRestService\"]; });\n\n/* harmony import */ var cmscommons_services_CMSTimeService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cmscommons/services/CMSTimeService */ \"./jsTarget/web/features/cmscommons/services/CMSTimeService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CMSTimeService\", function() { return cmscommons_services_CMSTimeService__WEBPACK_IMPORTED_MODULE_5__[\"CMSTimeService\"]; });\n\n/* harmony import */ var _services_interceptors_versionExperienceInterceptor_VersionExperienceInterceptorModule__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptorModule */ \"./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptorModule.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VersionExperienceInterceptorModule\", function() { return _services_interceptors_versionExperienceInterceptor_VersionExperienceInterceptorModule__WEBPACK_IMPORTED_MODULE_6__[\"VersionExperienceInterceptorModule\"]; });\n\n/* harmony import */ var _dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dao/cmswebservices/IPageContentSlotsComponentsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IPageContentSlotsComponentsRestService\", function() { return _dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_7__[\"IPageContentSlotsComponentsRestService\"]; });\n\n/* harmony import */ var _services_components_IComponentSharedService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services/components/IComponentSharedService */ \"./jsTarget/web/features/cmscommons/services/components/IComponentSharedService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IComponentSharedService\", function() { return _services_components_IComponentSharedService__WEBPACK_IMPORTED_MODULE_8__[\"IComponentSharedService\"]; });\n\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./services */ \"./jsTarget/web/features/cmscommons/services/index.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IPageService\", function() { return _services__WEBPACK_IMPORTED_MODULE_9__[\"IPageService\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IContextAwareEditableItemService\", function() { return _services__WEBPACK_IMPORTED_MODULE_9__[\"IContextAwareEditableItemService\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ComponentService\", function() { return _services__WEBPACK_IMPORTED_MODULE_9__[\"ComponentService\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"workflowCompletedEvictionTag\", function() { return _services__WEBPACK_IMPORTED_MODULE_9__[\"workflowCompletedEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"workflowTasksMenuOpenedEvictionTag\", function() { return _services__WEBPACK_IMPORTED_MODULE_9__[\"workflowTasksMenuOpenedEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"slotEvictionTag\", function() { return _services__WEBPACK_IMPORTED_MODULE_9__[\"slotEvictionTag\"]; });\n\n/* harmony import */ var _dtos__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dtos */ \"./jsTarget/web/features/cmscommons/dtos/index.ts\");\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _dtos__WEBPACK_IMPORTED_MODULE_10__) if([\"ISyncStatus\",\"AssetsService\",\"CMSModesService\",\"TypePermissionNames\",\"TypePermissionsRestService\",\"AttributePermissionsRestService\",\"CMSTimeService\",\"VersionExperienceInterceptorModule\",\"IPageContentSlotsComponentsRestService\",\"IComponentSharedService\",\"IPageService\",\"IContextAwareEditableItemService\",\"ComponentService\",\"workflowCompletedEvictionTag\",\"workflowTasksMenuOpenedEvictionTag\",\"slotEvictionTag\",\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _dtos__WEBPACK_IMPORTED_MODULE_10__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _dao__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dao */ \"./jsTarget/web/features/cmscommons/dao/index.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cmsitemsUri\", function() { return _dao__WEBPACK_IMPORTED_MODULE_11__[\"cmsitemsUri\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cmsitemsEvictionTag\", function() { return _dao__WEBPACK_IMPORTED_MODULE_11__[\"cmsitemsEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmsitemsRestService\", function() { return _dao__WEBPACK_IMPORTED_MODULE_11__[\"CmsitemsRestService\"]; });\n\n/* harmony import */ var _cmsConstantsModule__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cmsConstantsModule */ \"./jsTarget/web/features/cmscommons/cmsConstantsModule.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmsConstantsModule\", function() { return _cmsConstantsModule__WEBPACK_IMPORTED_MODULE_12__[\"CmsConstantsModule\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/AssetsService.ts\":\n/*!********************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/AssetsService.ts ***!\n  \\********************************************************************/\n/*! exports provided: AssetsService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AssetsService\", function() { return AssetsService; });\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:AssetsService\n *\n * @description\n * Determines the root of the production and test assets\n */\nvar AssetsService = /** @class */ (function () {\n    function AssetsService(injector) {\n        // Constants\n        this.TEST_ASSETS_KEY = 'testAssets';\n        this.TEST_ASSETS_SRC = '/web/webroot';\n        this.PROD_ASSETS_SRC = '/cmssmartedit';\n        this.$injector = injector;\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:AssetsService#getAssetsRoot\n     * @methodOf cmsSmarteditServicesModule.service:AssetsService\n     *\n     * @description\n     * Set data for the given key.\n     *\n     * @returns {String} the assets root folder\n     */\n    AssetsService.prototype.getAssetsRoot = function () {\n        var useTestAssets = false;\n        if (this.getInjector().has(this.TEST_ASSETS_KEY)) {\n            var result = this.getInjector().get(this.TEST_ASSETS_KEY);\n            useTestAssets = (typeof result === 'boolean') ? result : false;\n        }\n        return useTestAssets ? this.TEST_ASSETS_SRC : this.PROD_ASSETS_SRC;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:AssetsService#getInjector\n     * @methodOf cmsSmarteditServicesModule.service:AssetsService\n     *\n     * @description\n     * Returns an injector\n     *\n     * @returns {Object} an injector\n     */\n    AssetsService.prototype.getInjector = function () {\n        return this.$injector;\n    };\n    AssetsService.$inject = ['$injector'];\n    return AssetsService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/AttributePermissionsRestService.ts\":\n/*!**************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/AttributePermissionsRestService.ts ***!\n  \\**************************************************************************************/\n/*! exports provided: AttributePermissionNames, AttributePermissionsRestService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributePermissionNames\", function() { return AttributePermissionNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributePermissionsRestService\", function() { return AttributePermissionsRestService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n/**\n * @ngdoc object\n * @name cmsSmarteditServicesModule.object:AttributePermissionNames\n * @description\n * An enum type representing available attribute permission names for a given item\n */\nvar AttributePermissionNames;\n(function (AttributePermissionNames) {\n    AttributePermissionNames[\"READ\"] = \"read\";\n    AttributePermissionNames[\"CHANGE\"] = \"change\";\n})(AttributePermissionNames || (AttributePermissionNames = {}));\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:AttributePermissionsRestService\n *\n * @description\n * Rest Service to retrieve attribute permissions.\n */\nvar AttributePermissionsRestService = /** @class */ (function () {\n    function AttributePermissionsRestService(restServiceFactory, sessionService, $q, $log, lodash) {\n        this.sessionService = sessionService;\n        this.$q = $q;\n        this.$log = $log;\n        this.lodash = lodash;\n        this.ATTRIBUTE_PERMISSIONS_URI = \"/permissionswebservices/v1/permissions/principals/:user/attributes\";\n        this.attributePermissionsRestService = restServiceFactory.get(this.ATTRIBUTE_PERMISSIONS_URI);\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:AttributePermissionsRestService#hasReadPermissionOnAttributesInType\n     * @methodOf cmsSmarteditServicesModule.service:AttributePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has READ access to the given attributes in the given type.\n     *\n     * @param {String} type The type enclosing the attributes for which to evaluate their read permissions.\n     * @param {String[]} attributeNames The names of the attributes for which to evaluate their read permissions.\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the attribute name) and\n     * value (true if the user has READ access to the type or false otherwise).\n     */\n    AttributePermissionsRestService.prototype.hasReadPermissionOnAttributesInType = function (type, attributeNames) {\n        return this.getPermissionsForAttributesAndNameByType(type, attributeNames, AttributePermissionNames.READ);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:AttributePermissionsRestService#hasChangePermissionOnAttributesInType\n     * @methodOf cmsSmarteditServicesModule.service:AttributePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has CHANGE access to the given attributes in the given type.\n     *\n     * @param {String} type The type enclosing the attributes for which to evaluate their change permissions.\n     * @param {String[]} attributeNames The names of the attributes for which to evaluate their change permissions.\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the attribute name) and\n     * value (true if the user has READ access to the type or false otherwise).\n     */\n    AttributePermissionsRestService.prototype.hasChangePermissionOnAttributesInType = function (type, attributeNames) {\n        return this.getPermissionsForAttributesAndNameByType(type, attributeNames, AttributePermissionNames.CHANGE);\n    };\n    AttributePermissionsRestService.prototype.getPermissionsForAttributesAndNameByType = function (type, attributes, permissionName) {\n        var convertedAttributeNames = attributes.map(function (attr) { return type + \".\" + attr; });\n        return this.getPermissionsForAttributesAndName(convertedAttributeNames, permissionName).then(function (attributePermissionsByTypeMap) {\n            return attributePermissionsByTypeMap[type];\n        });\n    };\n    AttributePermissionsRestService.prototype.getPermissionsForAttributesAndName = function (attributes, permissionName) {\n        var _this = this;\n        return this.getAllPermissionsForAttributes(attributes).then(function (response) {\n            var allPermissions = _this.concatPermissionsNotFound(attributes, response);\n            return allPermissions.reduce(function (attributePermissionsByTypeMap, permissionsResult) {\n                if (permissionsResult.permissions) {\n                    var typeAttributePair = _this.parsePermissionsResultId(permissionsResult.id);\n                    if (!attributePermissionsByTypeMap[typeAttributePair.type]) {\n                        attributePermissionsByTypeMap[typeAttributePair.type] = {};\n                    }\n                    attributePermissionsByTypeMap[typeAttributePair.type][typeAttributePair.attribute] = _this.getPermissionByNameFromResult(permissionsResult, permissionName);\n                }\n                return attributePermissionsByTypeMap;\n            }, {});\n        });\n    };\n    AttributePermissionsRestService.prototype.parsePermissionsResultId = function (id) {\n        var tokens = id.split('.');\n        if (tokens.length !== 2) {\n            throw new Error(\"AttributePermissionsRestService - Received invalid attribute permissions\");\n        }\n        return {\n            type: tokens[0],\n            attribute: tokens[1]\n        };\n    };\n    AttributePermissionsRestService.prototype.getPermissionByNameFromResult = function (permissionsResult, permissionName) {\n        return JSON.parse(permissionsResult.permissions.find(function (permission) { return permission.key === permissionName; }).value);\n    };\n    AttributePermissionsRestService.prototype.concatPermissionsNotFound = function (attributes, permissionsFound) {\n        var permissionKeysFound = permissionsFound.map(function (permission) { return permission.id; });\n        var permissionKeysNotFound = this.lodash.difference(attributes, permissionKeysFound);\n        return permissionsFound.concat(permissionKeysNotFound.map(function (key) {\n            return {\n                id: key,\n                permissions: [{\n                        key: AttributePermissionNames.READ,\n                        value: 'false'\n                    }, {\n                        key: AttributePermissionNames.CHANGE,\n                        value: 'false'\n                    }]\n            };\n        }));\n    };\n    /**\n     * @internal\n     *\n     * This method retrieves ALL the permissions the current user has on the given attributes. Attributes are expected with the following format:\n     * - type.attribute name\n     * For example, for an attribute called approvalStatus within the type ContentPage, the given attribute must be:\n     * - ContentPage.approvalStatus\n     *\n     * Note: This method is cached.\n     *\n     * @param attributes The list of attributes for which to retrieve permissions\n     * @returns {angular.IPromise<IPermissionsRestServiceResult[]>} A promise that resolves to a list of IPermissionsRestServiceResult, each of which\n     * represents the permissions of one of the given attributes.\n     */\n    AttributePermissionsRestService.prototype.getAllPermissionsForAttributes = function (attributes) {\n        var _this = this;\n        if (attributes.length <= 0) {\n            return this.$q.when([]);\n        }\n        return this.sessionService.getCurrentUsername().then(function (user) {\n            if (!user) {\n                return [];\n            }\n            return _this.attributePermissionsRestService.get({\n                user: user,\n                attributes: attributes.join(','),\n                permissionNames: AttributePermissionNames.CHANGE + ',' + AttributePermissionNames.READ\n            }).then(function (response) {\n                return response.permissionsList || [];\n            }, function (error) {\n                if (error) {\n                    _this.$log.error(\"AttributePermissionsRestService - couldn't retrieve attribute permissions \" + attributes);\n                }\n                return _this.$q.reject(error);\n            });\n        });\n    };\n    var _a, _b, _c, _d, _e, _f;\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"authorizationEvictionTag\"]] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Array]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_a = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _a : Object)\n    ], AttributePermissionsRestService.prototype, \"getAllPermissionsForAttributes\", null);\n    AttributePermissionsRestService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"IRestServiceFactory\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"IRestServiceFactory\"]) === \"function\" ? _b : Object, typeof (_c = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"ISessionService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"ISessionService\"]) === \"function\" ? _c : Object, typeof (_d = typeof angular !== \"undefined\" && angular.IQService) === \"function\" ? _d : Object, typeof (_e = typeof angular !== \"undefined\" && angular.ILogService) === \"function\" ? _e : Object, typeof (_f = typeof lodash__WEBPACK_IMPORTED_MODULE_1__ !== \"undefined\" && lodash__WEBPACK_IMPORTED_MODULE_1__[\"LoDashStatic\"]) === \"function\" ? _f : Object])\n    ], /* @ngInject */ AttributePermissionsRestService);\n    return AttributePermissionsRestService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/CMSTimeService.ts\":\n/*!*********************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/CMSTimeService.ts ***!\n  \\*********************************************************************/\n/*! exports provided: CMSTimeService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CMSTimeService\", function() { return CMSTimeService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ \"moment\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:CMSTimeService\n *\n * @description\n * Service for time management functionality.\n */\nvar CMSTimeService = /** @class */ (function () {\n    function CMSTimeService($translate) {\n        this.$translate = $translate;\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:CMSTimeService#getTimeAgo\n     * @methodOf cmsSmarteditServicesModule.service:CMSTimeService\n     *\n     * @description\n     * Give a time difference in milliseconds, this method returns a string that determites time in ago.\n     *\n     * Examples:\n     * If the diff is less then 24 hours, the result is in hours eg: 17 hour(s) ago.\n     * If the diff is more than a day, the result is in days, eg: 2 day(s) ago.\n     *\n     * @param {number} timeDiff The time difference in milli seconds.\n     * @returns {String} the assets root folder\n     */\n    CMSTimeService.prototype.getTimeAgo = function (timeDiff) {\n        var timeAgoInDays = Math.floor(moment__WEBPACK_IMPORTED_MODULE_1__[\"duration\"](timeDiff).asDays());\n        var timeAgoInHours = Math.floor(moment__WEBPACK_IMPORTED_MODULE_1__[\"duration\"](timeDiff).asHours());\n        if (timeAgoInDays >= 1) {\n            return timeAgoInDays + \" \" + this.$translate.instant('se.cms.actionitem.page.workflow.action.started.days.ago');\n        }\n        else if (timeAgoInHours >= 1) {\n            return timeAgoInHours + \" \" + this.$translate.instant('se.cms.actionitem.page.workflow.action.started.hours.ago');\n        }\n        return \"<1 \" + this.$translate.instant('se.cms.actionitem.page.workflow.action.started.hours.ago');\n    };\n    var _a, _b;\n    CMSTimeService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_b = typeof angular !== \"undefined\" && (_a = angular.translate) !== void 0 && _a.ITranslateService) === \"function\" ? _b : Object])\n    ], /* @ngInject */ CMSTimeService);\n    return CMSTimeService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/IContextAwareEditableItemService.ts\":\n/*!***************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/IContextAwareEditableItemService.ts ***!\n  \\***************************************************************************************/\n/*! exports provided: IContextAwareEditableItemService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IContextAwareEditableItemService\", function() { return IContextAwareEditableItemService; });\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:contextAwareEditableItemService\n *\n * @description\n * Service to verify whether the item is editable in a particular context.\n */\nvar IContextAwareEditableItemService = /** @class */ (function () {\n    function IContextAwareEditableItemService() {\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:contextAwareEditableItemService#isItemEditable\n     * @methodOf cmsSmarteditServicesModule.service:contextAwareEditableItemService\n     *\n     * @description\n     * Verifies whether the item is editable in current context or not.\n     *\n     * @param {string} itemUid The item uid.\n     *\n     * @returns {Promise} A promise that resolves to a boolean. It will be true, if the item is editable, false otherwise.\n     */\n    IContextAwareEditableItemService.prototype.isItemEditable = function (itemUid) {\n        'proxyFunction';\n        return null;\n    };\n    return IContextAwareEditableItemService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/IEditorModalService.ts\":\n/*!**************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/IEditorModalService.ts ***!\n  \\**************************************************************************/\n/*! exports provided: IEditorModalService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IEditorModalService\", function() { return IEditorModalService; });\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:editorModalService\n *\n * @description\n * Convenience service to open an editor modal window for a given component type and component ID.\n *\n * Example:\n * We pass information about component to open method, and the component editor in form of modal appears.\n */\nvar IEditorModalService = /** @class */ (function () {\n    function IEditorModalService() {\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:editorModalService#open\n     * @methodOf cmsSmarteditServicesModule.service:editorModalService\n     *\n     * @description\n     * Proxy function which delegates opening an editor modal for a given component type and component ID to the\n     * SmartEdit container.\n     *\n     * @param {IComponent} componentAttributes The details of the component to be created/edited\n     * @param {string?} componentAttributes.smarteditComponentUuid An optional universally unique UUID of the component if the component is being edited.\n     * @param {string?} componentAttributes.smarteditComponentId An optional universally unique ID of the component if the component is being edited.\n     * @param {string} componentAttributes.smarteditComponentType The component type\n     * @param {string?} componentAttributes.smarteditCatalogVersionUuid The smartedit catalog version UUID to add the component to.\n     * @param {string?} componentAttributes.catalogVersionUuid The catalog version UUID to add the component to.\n     * @param {boolean} componentAttributes.initialDirty Is the component dirty.\n     * @param {Payload?} componentAttributes.content An optional content for create operation. It's ignored if componentAttributes.smarteditComponentUuid is defined.\n     * @param {string?} targetSlotId The ID of the slot in which the component is placed.\n     * @param {string?} position The position in a given slot where the component should be placed.\n     * @param {string?} targetedQualifier Causes the genericEditor to switch to the tab containing a qualifier of the given name.\n     * @param {Function} saveCallback The optional function that is executed if the user clicks the Save button and the modal closes successfully. The function provides one parameter: item that has been saved.\n     * @param {string} editorStackId The string that identifies the stack of editors being edited together.\n     *\n     * @returns {Promise} A promise that resolves to the data returned by the modal when it is closed.\n     */\n    IEditorModalService.prototype.open = function (componentAttributes, targetSlotId, position, targetedQualifier, saveCallback, editorStackId) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:editorModalService#open\n     * @methodOf cmsSmarteditServicesModule.service:editorModalService\n     *\n     * @description\n     * Proxy function which delegates opening an editor modal for a given component type and component ID to the\n     * SmartEdit container.\n     *\n     * @param {string} componentType The type of component as defined in the platform.\n     * @param {string} componentUuid The UUID of the component as defined in the database.\n     * @param {string?} targetedQualifier Causes the genericEditor to switch to the tab containing a qualifier of the given name.\n     * @param {Function} saveCallback The optional function that is executed if the user clicks the Save button and the modal closes successfully. The function provides one parameter: item that has been saved.\n     * @param {string} editorStackId The string that identifies the stack of editors being edited together.\n     *\n     * @returns {Promise} A promise that resolves to the data returned by the modal when it is closed.\n     */\n    IEditorModalService.prototype.openAndRerenderSlot = function (componentType, componentUuid, targetedQualifier, saveCallback, editorStackId) {\n        'proxyFunction';\n        return null;\n    };\n    return IEditorModalService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/TypePermissionsRestService.ts\":\n/*!*********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/TypePermissionsRestService.ts ***!\n  \\*********************************************************************************/\n/*! exports provided: TypePermissionNames, TypePermissionsRestService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypePermissionNames\", function() { return TypePermissionNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypePermissionsRestService\", function() { return TypePermissionsRestService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n/**\n * @ngdoc object\n * @name cmsSmarteditServicesModule.object:TypePermissionNames\n * @description\n * An enum type representing available type permission names for a given item\n */\nvar TypePermissionNames;\n(function (TypePermissionNames) {\n    TypePermissionNames[\"CREATE\"] = \"create\";\n    TypePermissionNames[\"READ\"] = \"read\";\n    TypePermissionNames[\"CHANGE\"] = \"change\";\n    TypePermissionNames[\"REMOVE\"] = \"remove\";\n})(TypePermissionNames || (TypePermissionNames = {}));\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:TypePermissionsRestService\n *\n * @description\n * Rest Service to retrieve the type permissions.\n */\nvar TypePermissionsRestService = /** @class */ (function () {\n    function TypePermissionsRestService($log, $q, sessionService, restServiceFactory) {\n        this.$log = $log;\n        this.$q = $q;\n        this.sessionService = sessionService;\n        this.URI = \"/permissionswebservices/v1/permissions/principals/:user/types\";\n        this.resource = restServiceFactory.get(this.URI);\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasCreatePermissionForTypes\n     * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has CREATE access to the given types.\n     *\n     * @param {String[]} types The codes of all types.\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and\n     * value (true if the user has CREATE access to the type or false otherwise).\n     */\n    TypePermissionsRestService.prototype.hasCreatePermissionForTypes = function (types) {\n        return this._getPermissionsForTypesAndName(types, TypePermissionNames.CREATE);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasReadPermissionForTypes\n     * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has READ access to the given types.\n     *\n     * @param {String[]} types The codes of all types.\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and\n     * value (true if the user has READ access to the type or false otherwise).\n     */\n    TypePermissionsRestService.prototype.hasReadPermissionForTypes = function (types) {\n        return this._getPermissionsForTypesAndName(types, TypePermissionNames.READ);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasUpdatePermissionForTypes\n     * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has CHANGE access to the given types.\n     *\n     * @param {String[]} types The codes of all types.\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and\n     * value (true if the user has CHANGE access to the type or false otherwise).\n     */\n    TypePermissionsRestService.prototype.hasUpdatePermissionForTypes = function (types) {\n        return this._getPermissionsForTypesAndName(types, TypePermissionNames.CHANGE);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasDeletePermissionForTypes\n     * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has REMOVE access to the given types.\n     *\n     * @param {String[]} types The codes of all types.\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and\n     * value (true if the user has REMOVE access to the type or false otherwise).\n     */\n    TypePermissionsRestService.prototype.hasDeletePermissionForTypes = function (types) {\n        return this._getPermissionsForTypesAndName(types, TypePermissionNames.REMOVE);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasAllPermissionsForTypes\n     * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\n     *\n     * @description\n     * Determines if the current user has READ, CREATE, CHANGE, REMOVE access to the given types.\n     *\n     * @param {String[]} types The codes of all types.\n     * @returns {angular.IPromise<TypedMap<TypedMap<boolean>>>} A promise that resolves to a TypedMap of TypedMap object with key (the code) and\n     * value (true if the user has corresponding access to the type or false otherwise).\n     * {\n     *  \"typeA\": {\"read\": true, \"change\": false, \"create\": true, \"remove\": true},\n     *  \"typeB\": {\"read\": true, \"change\": false, \"create\": true, \"remove\": false}\n     * }\n     */\n    TypePermissionsRestService.prototype.hasAllPermissionsForTypes = function (types) {\n        var _this = this;\n        var initialMap = {};\n        return this._getAllPermissionsForTypes(types).then(function (response) {\n            return response.reduce(function (map, permissionsResult) {\n                if (permissionsResult.permissions) {\n                    map[permissionsResult.id] = {};\n                    map[permissionsResult.id][TypePermissionNames.READ] = _this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.READ);\n                    map[permissionsResult.id][TypePermissionNames.CHANGE] = _this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.CHANGE);\n                    map[permissionsResult.id][TypePermissionNames.CREATE] = _this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.CREATE);\n                    map[permissionsResult.id][TypePermissionNames.REMOVE] = _this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.REMOVE);\n                }\n                return map;\n            }, initialMap);\n        });\n    };\n    TypePermissionsRestService.prototype._getPermissionByNameAndResult = function (permissionsResult, permissionName) {\n        return JSON.parse(permissionsResult.permissions.find(function (permission) { return permission.key === permissionName; }).value);\n    };\n    TypePermissionsRestService.prototype._getPermissionsForTypesAndName = function (types, permissionName) {\n        var _this = this;\n        return this._getAllPermissionsForTypes(types).then(function (response) {\n            return response.reduce(function (map, permissionsResult) {\n                if (permissionsResult.permissions) {\n                    map[permissionsResult.id] = _this._getPermissionByNameAndResult(permissionsResult, permissionName);\n                }\n                return map;\n            }, {});\n        });\n    };\n    TypePermissionsRestService.prototype._getAllPermissionsForTypes = function (types) {\n        var _this = this;\n        if (types.length <= 0) {\n            return this.$q.when([]);\n        }\n        return this.sessionService.getCurrentUsername().then(function (user) {\n            if (!user) {\n                return [];\n            }\n            return _this.resource.get({\n                user: user,\n                types: types.join(','),\n                permissionNames: TypePermissionNames.CREATE + ',' + TypePermissionNames.CHANGE + ',' + TypePermissionNames.READ + ',' + TypePermissionNames.REMOVE\n            }).then(function (response) {\n                return response.permissionsList || [];\n            }, function (error) {\n                if (error) {\n                    _this.$log.error(\"TypePermissionsRestService - no composed types \" + types + \" exist\");\n                }\n                return _this.$q.reject(error);\n            });\n        });\n    };\n    var _a, _b, _c, _d, _e;\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"authorizationEvictionTag\"]] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Array]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_a = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _a : Object)\n    ], TypePermissionsRestService.prototype, \"_getAllPermissionsForTypes\", null);\n    TypePermissionsRestService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_b = typeof angular !== \"undefined\" && angular.ILogService) === \"function\" ? _b : Object, typeof (_c = typeof angular !== \"undefined\" && angular.IQService) === \"function\" ? _c : Object, typeof (_d = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"ISessionService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"ISessionService\"]) === \"function\" ? _d : Object, typeof (_e = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"]) === \"function\" ? _e : Object])\n    ], /* @ngInject */ TypePermissionsRestService);\n    return TypePermissionsRestService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/cache/tags/index.ts\":\n/*!***********************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/cache/tags/index.ts ***!\n  \\***********************************************************************/\n/*! exports provided: workflowCompletedEvictionTag, workflowTasksMenuOpenedEvictionTag, slotEvictionTag */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _workflowEvictionTags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./workflowEvictionTags */ \"./jsTarget/web/features/cmscommons/services/cache/tags/workflowEvictionTags.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"workflowCompletedEvictionTag\", function() { return _workflowEvictionTags__WEBPACK_IMPORTED_MODULE_0__[\"workflowCompletedEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"workflowTasksMenuOpenedEvictionTag\", function() { return _workflowEvictionTags__WEBPACK_IMPORTED_MODULE_0__[\"workflowTasksMenuOpenedEvictionTag\"]; });\n\n/* harmony import */ var _slotEvictionTags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slotEvictionTags */ \"./jsTarget/web/features/cmscommons/services/cache/tags/slotEvictionTags.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"slotEvictionTag\", function() { return _slotEvictionTags__WEBPACK_IMPORTED_MODULE_1__[\"slotEvictionTag\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/cache/tags/slotEvictionTags.ts\":\n/*!**********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/cache/tags/slotEvictionTags.ts ***!\n  \\**********************************************************************************/\n/*! exports provided: slotEvictionTag */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"slotEvictionTag\", function() { return slotEvictionTag; });\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nvar slotEvictionTag = new smarteditcommons__WEBPACK_IMPORTED_MODULE_0__[\"EvictionTag\"]({ event: \"SLOT_UPDATE_EVENT\" });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/cache/tags/workflowEvictionTags.ts\":\n/*!**************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/cache/tags/workflowEvictionTags.ts ***!\n  \\**************************************************************************************/\n/*! exports provided: workflowCompletedEvictionTag, workflowTasksMenuOpenedEvictionTag */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"workflowCompletedEvictionTag\", function() { return workflowCompletedEvictionTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"workflowTasksMenuOpenedEvictionTag\", function() { return workflowTasksMenuOpenedEvictionTag; });\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nvar workflowCompletedEvictionTag = new smarteditcommons__WEBPACK_IMPORTED_MODULE_0__[\"EvictionTag\"]({ event: \"WORKFLOW_FINISHED_EVENT\" });\nvar workflowTasksMenuOpenedEvictionTag = new smarteditcommons__WEBPACK_IMPORTED_MODULE_0__[\"EvictionTag\"]({ event: \"WORKFLOW_TASKS_MENU_OPENED_EVENT\" });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/componentService.js\":\n/*!***********************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/componentService.js ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('componentServiceModule', [\n        'smarteditServicesModule',\n        'cmsSmarteditServicesModule',\n        'resourceLocationsModule',\n        'slotRestrictionsServiceModule'\n    ])\n\n    /**\n     * @ngdoc service\n     * @name componentMenuModule.ComponentService\n     *\n     * @description\n     * Service which manages component types and items\n     */\n    .service('ComponentService', function(\n        $q,\n        restServiceFactory,\n        TYPES_RESOURCE_URI,\n        PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI,\n        CONTEXT_CATALOG,\n        CONTEXT_CATALOG_VERSION,\n        cmsitemsRestService,\n        catalogService,\n        slotRestrictionsService,\n        pageInfoService,\n        pageContentSlotsComponentsRestService,\n        typePermissionsRestService) {\n\n        var restServiceForTypes = restServiceFactory.get(TYPES_RESOURCE_URI);\n        var restServiceForItems = cmsitemsRestService;\n        var restServiceForAddExistingComponent = restServiceFactory.get(PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI);\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#createNewComponent\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description given a component info and the component payload, a new componentItem is created and added to a slot\n         *\n         * @param {Object} componentInfo The basic information of the ComponentType to be created and added to the slot.\n         * @param {String} componentInfo.componenCode componenCode of the ComponentType to be created and added to the slot.\n         * @param {String} componentInfo.name name of the new component to be created.\n         * @param {String} componentInfo.pageId pageId used to identify the current page template.\n         * @param {String} componentInfo.slotId slotId used to identify the slot in the current template.\n         * @param {String} componentInfo.position position used to identify the position in the slot in the current template.\n         * @param {String} componentInfo.type type of the component being created.\n         * @param {Object} componentPayload payload of the new component to be created.\n         */\n        this.createNewComponent = function(componentInfo, componentPayload) {\n\n            //FIXME fix naming of slotId\n            var _payload = {};\n            _payload.name = componentInfo.name;\n            _payload.slotId = componentInfo.targetSlotId;\n            _payload.pageId = componentInfo.pageId;\n            _payload.position = componentInfo.position;\n            _payload.typeCode = componentInfo.componentType;\n            _payload.itemtype = componentInfo.componentType;\n            _payload.catalogVersion = componentInfo.catalogVersionUuid;\n\n            if (typeof componentPayload === \"object\") {\n                for (var property in componentPayload) {\n                    if (componentPayload.hasOwnProperty(property)) {\n                        _payload[property] = componentPayload[property];\n                    }\n                }\n            } else if (componentPayload) {\n                throw \"ComponentService.createNewComponent() - Illegal componentPayload - [\" + componentPayload + \"]\";\n            }\n\n            return restServiceForItems.create(_payload);\n\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#updateComponent\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description Given a component info and the payload related to an existing component, the latter will be updated with the new supplied values.\n         *\n         * @param {Object} componentPayload of the new component to be created, including the info.\n         * @param {String} componentPayload.componenCode of the ComponentType to be created and added to the slot.\n         * @param {String} componentPayload.name of the new component to be created.\n         * @param {String} componentPayload.pageId used to identify the current page template.\n         * @param {String} componentPayload.slotId used to identify the slot in the current template.\n         * @param {String} componentPayload.position used to identify the position in the slot in the current template.\n         * @param {String} componentPayload.type of the component being created.\n         */\n        this.updateComponent = function(componentPayload) {\n            return restServiceForItems.update(componentPayload);\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#addExistingComponent\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description add an existing component item to a slot\n         *\n         * @param {String} pageId used to identify the page containing the slot in the current template.\n         * @param {String} componentId used to identify the existing component which will be added to the slot.\n         * @param {String} slotId used to identify the slot in the current template.\n         * @param {String} position used to identify the position in the slot in the current template.\n         */\n        this.addExistingComponent = function(pageId, componentId, slotId, position) {\n\n            var _payload = {};\n            _payload.pageId = pageId;\n            _payload.slotId = slotId;\n            _payload.componentId = componentId;\n            _payload.position = position;\n\n            return restServiceForAddExistingComponent.save(_payload);\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadComponentTypes\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description all component types are retrieved\n         */\n        this.loadComponentTypes = function() {\n            return restServiceForTypes.get({\n                category: 'COMPONENT'\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#getSupportedComponentTypesForCurrentPage\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description Fetches all component types supported by the system, then filters this list\n         * using the restricted component types for all the slots on the current page.\n         *\n         * @returns {Array} A promise resolving to the component types that can be added to the current page\n         */\n        this.getSupportedComponentTypesForCurrentPage = function() {\n\n            return $q.all([\n                this.loadComponentTypes(),\n                slotRestrictionsService.getAllComponentTypesSupportedOnPage()\n            ]).then(function(values) {\n                var supportedComponentTypes = values[1];\n                var componentTypes = values[0].componentTypes.filter(function(componentType) {\n                    return supportedComponentTypes.indexOf(componentType.code) > -1;\n                });\n\n                var componentTypeCodes = componentTypes.map(function(componentType) {\n                    return componentType.code;\n                });\n\n                return typePermissionsRestService.hasCreatePermissionForTypes(componentTypeCodes).then(function(permissionResult) {\n                    return componentTypes.filter(function(componentType) {\n                        return permissionResult[componentType.code];\n                    });\n                });\n            }.bind(this));\n        }.bind(this);\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadComponentItem\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description load a component identified by its id\n         */\n        this.loadComponentItem = function(id) {\n            return restServiceForItems.getById(id);\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadPagedComponentItems\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description all existing component items for the current catalog are retrieved in the form of pages\n         * used for pagination especially when the result set is very large.\n         * \n         * @param {String} mask the search string to filter the results.\n         * @param {String} pageSize the number of elements that a page can contain.\n         * @param {String} page the current page number.\n         */\n        this.loadPagedComponentItems = function(mask, pageSize, page) {\n\n            return catalogService.retrieveUriContext().then(function(uriContext) {\n                var requestParams = {\n                    pageSize: pageSize,\n                    currentPage: page,\n                    mask: mask,\n                    sort: 'name',\n                    typeCode: 'AbstractCMSComponent',\n                    catalogId: uriContext[CONTEXT_CATALOG],\n                    catalogVersion: uriContext[CONTEXT_CATALOG_VERSION]\n                };\n\n                return restServiceForItems.get(requestParams);\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadPagedComponentItemsByCatalogVersion\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description all existing component items for the provided content catalog are retrieved in the form of pages\n         * used for pagination especially when the result set is very large.\n         * \n         * @param {Object} payload The payload that contains the information of the page of components to load\n         * @param {String} payload.catalogId the id of the catalog for which to retrieve the component items. \n         * @param {String} payload.catalogVersion the id of the catalog version for which to retrieve the component items. \n         * @param {String} payload.mask the search string to filter the results.\n         * @param {String} payload.pageSize the number of elements that a page can contain.\n         * @param {String} payload.page the current page number.\n         * \n         * @returns {Promise} A promise resolving to a page of component items retrieved from the provided catalog version. \n         */\n        this.loadPagedComponentItemsByCatalogVersion = function(payload) {\n            var requestParams = {\n                pageSize: payload.pageSize,\n                currentPage: payload.page,\n                mask: payload.mask,\n                sort: 'name',\n                typeCode: 'AbstractCMSComponent',\n                catalogId: payload.catalogId,\n                catalogVersion: payload.catalogVersion\n            };\n\n            return restServiceForItems.get(requestParams);\n        };\n\n        this.getSlotsForComponent = function(componentUuid) {\n            var slotIds = [];\n            return this._getContentSlotsForComponents().then(function(allSlotsToComponents) {\n                Object.keys(allSlotsToComponents).forEach(function(slotId) {\n                    if (allSlotsToComponents[slotId].find(function(component) {\n                            return component.uuid === componentUuid;\n                        })) {\n                        slotIds.push(slotId);\n                    }\n                });\n                return slotIds;\n            }.bind(this));\n        };\n\n        this._getContentSlotsForComponents = function() {\n            return pageInfoService.getPageUID().then(function(pageId) {\n                return pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageId);\n            });\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/componentService.ts\":\n/*!***********************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/componentService.ts ***!\n  \\***********************************************************************/\n/*! exports provided: ComponentService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentService\", function() { return ComponentService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dao/cmswebservices/sites/CmsitemsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts\");\n/* harmony import */ var _dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dao/cmswebservices/IPageContentSlotsComponentsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService.ts\");\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n/**\n * @ngdoc service\n * @name componentMenuModule.ComponentService\n *\n * @description\n * Service which manages component types and items\n */\nvar ComponentService = /** @class */ (function () {\n    function ComponentService(restServiceFactory, cmsitemsRestService, catalogService, pageInfoService, pageContentSlotsComponentsRestService, CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI) {\n        this.restServiceFactory = restServiceFactory;\n        this.cmsitemsRestService = cmsitemsRestService;\n        this.catalogService = catalogService;\n        this.pageInfoService = pageInfoService;\n        this.pageContentSlotsComponentsRestService = pageContentSlotsComponentsRestService;\n        this.CONTEXT_CATALOG = CONTEXT_CATALOG;\n        this.CONTEXT_CATALOG_VERSION = CONTEXT_CATALOG_VERSION;\n        this.PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI = PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI;\n        var pageComponentTypesRestServiceURI = '/cmssmarteditwebservices/v1/catalogs/:catalogId/versions/:catalogVersion/pages/:pageId/types';\n        this.pageComponentTypesRestService = this.restServiceFactory.get(pageComponentTypesRestServiceURI);\n        this.restServiceForAddExistingComponent = this.restServiceFactory.get(this.PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI);\n    }\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#createNewComponent\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description given a component info and the component payload, a new componentItem is created and added to a slot\n     *\n     * @param {Object} componentInfo The basic information of the ComponentType to be created and added to the slot.\n     * @param {String} componentInfo.componenCode componenCode of the ComponentType to be created and added to the slot.\n     * @param {String} componentInfo.name name of the new component to be created.\n     * @param {String} componentInfo.pageId pageId used to identify the current page template.\n     * @param {String} componentInfo.slotId slotId used to identify the slot in the current template.\n     * @param {String} componentInfo.position position used to identify the position in the slot in the current template.\n     * @param {String} componentInfo.type type of the component being created.\n     * @param {Object} componentPayload payload of the new component to be created.\n     */\n    ComponentService.prototype.createNewComponent = function (componentInfo, componentPayload) {\n        var _payload = {\n            name: componentInfo.name,\n            slotId: componentInfo.targetSlotId,\n            pageId: componentInfo.pageId,\n            position: componentInfo.position,\n            typeCode: componentInfo.componentType,\n            itemtype: componentInfo.componentType,\n            catalogVersion: componentInfo.catalogVersionUuid,\n            uid: '',\n            uuid: ''\n        };\n        if (typeof componentPayload === 'object') {\n            for (var property in componentPayload) {\n                if (componentPayload.hasOwnProperty(property)) {\n                    _payload[property] = componentPayload[property];\n                }\n            }\n        }\n        else if (componentPayload) {\n            throw new Error(\"ComponentService.createNewComponent() - Illegal componentPayload - [\" + componentPayload + \"]\");\n        }\n        return this.cmsitemsRestService.create(_payload);\n    };\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#updateComponent\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description Given a component info and the payload related to an existing component, the latter will be updated with the new supplied values.\n     *\n     * @param {Object} componentPayload of the new component to be created, including the info.\n     * @param {String} componentPayload.componenCode of the ComponentType to be created and added to the slot.\n     * @param {String} componentPayload.name of the new component to be created.\n     * @param {String} componentPayload.pageId used to identify the current page template.\n     * @param {String} componentPayload.slotId used to identify the slot in the current template.\n     * @param {String} componentPayload.position used to identify the position in the slot in the current template.\n     * @param {String} componentPayload.type of the component being created.\n     */\n    ComponentService.prototype.updateComponent = function (componentPayload) {\n        return this.cmsitemsRestService.update(componentPayload);\n    };\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#addExistingComponent\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description add an existing component item to a slot\n     *\n     * @param {String} pageId used to identify the page containing the slot in the current template.\n     * @param {String} componentId used to identify the existing component which will be added to the slot.\n     * @param {String} slotId used to identify the slot in the current template.\n     * @param {String} position used to identify the position in the slot in the current template.\n     */\n    ComponentService.prototype.addExistingComponent = function (pageId, componentId, slotId, position) {\n        return this.restServiceForAddExistingComponent.save({\n            pageId: pageId,\n            slotId: slotId,\n            componentId: componentId,\n            position: position\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#getSupportedComponentTypesForCurrentPage\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description Fetches all component types that are applicable to the current page.\n     *\n     * @param {Object} payload The payload that contains the information of the component types to load\n     * @returns {Promise} A promise resolving to a page of component types applicable to the current page.\n     */\n    ComponentService.prototype.getSupportedComponentTypesForCurrentPage = function (payload) {\n        return this.pageComponentTypesRestService.get(payload).then(function (response) {\n            response.results = response.componentTypes || [];\n            return response;\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#loadComponentItem\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description load a component identified by its id\n     */\n    ComponentService.prototype.loadComponentItem = function (id) {\n        return this.cmsitemsRestService.getById(id);\n    };\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#loadPagedComponentItems\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description all existing component items for the current catalog are retrieved in the form of pages\n     * used for pagination especially when the result set is very large.\n     *\n     * @param {String} mask the search string to filter the results.\n     * @param {String} pageSize the number of elements that a page can contain.\n     * @param {String} page the current page number.\n     */\n    ComponentService.prototype.loadPagedComponentItems = function (mask, pageSize, page) {\n        var _this = this;\n        return this.catalogService.retrieveUriContext().then(function (uriContext) {\n            var requestParams = {\n                pageSize: pageSize,\n                currentPage: page,\n                mask: mask,\n                sort: 'name',\n                typeCode: 'AbstractCMSComponent',\n                catalogId: uriContext[_this.CONTEXT_CATALOG],\n                catalogVersion: uriContext[_this.CONTEXT_CATALOG_VERSION],\n                itemSearchParams: ''\n            };\n            return _this.cmsitemsRestService.get(requestParams);\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name componentMenuModule.ComponentService#loadPagedComponentItemsByCatalogVersion\n     * @methodOf componentMenuModule.ComponentService\n     *\n     * @description all existing component items for the provided content catalog are retrieved in the form of pages\n     * used for pagination especially when the result set is very large.\n     *\n     * @param {Object} payload The payload that contains the information of the page of components to load\n     * @param {String} payload.catalogId the id of the catalog for which to retrieve the component items.\n     * @param {String} payload.catalogVersion the id of the catalog version for which to retrieve the component items.\n     * @param {String} payload.mask the search string to filter the results.\n     * @param {String} payload.pageSize the number of elements that a page can contain.\n     * @param {String} payload.page the current page number.\n     *\n     * @returns {Promise} A promise resolving to a page of component items retrieved from the provided catalog version.\n     */\n    ComponentService.prototype.loadPagedComponentItemsByCatalogVersion = function (payload) {\n        var requestParams = {\n            pageSize: payload.pageSize,\n            currentPage: payload.page,\n            mask: payload.mask,\n            sort: 'name',\n            typeCode: 'AbstractCMSComponent',\n            catalogId: payload.catalogId,\n            catalogVersion: payload.catalogVersion,\n            itemSearchParams: ''\n        };\n        return this.cmsitemsRestService.get(requestParams);\n    };\n    ComponentService.prototype.getSlotsForComponent = function (componentUuid) {\n        var slotIds = [];\n        return this._getContentSlotsForComponents().then(function (allSlotsToComponents) {\n            var keys = Object.keys(allSlotsToComponents);\n            keys.forEach(function (slotId) {\n                if (allSlotsToComponents[slotId].find(function (component) {\n                    return component.uuid === componentUuid;\n                })) {\n                    slotIds.push(slotId);\n                }\n            });\n            return slotIds;\n        }.bind(this));\n    };\n    ComponentService.prototype._getContentSlotsForComponents = function () {\n        var _this = this;\n        return this.pageInfoService.getPageUID().then(function (pageId) {\n            return _this.pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageId);\n        });\n    };\n    var _a, _b, _c, _d, _e, _f;\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"rarelyChangingContent\"]], tags: [smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"pageChangeEvictionTag\"]] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Object]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_a = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _a : Object)\n    ], ComponentService.prototype, \"getSupportedComponentTypesForCurrentPage\", null);\n    ComponentService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"]) === \"function\" ? _b : Object, typeof (_c = typeof _dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_2__[\"CmsitemsRestService\"] !== \"undefined\" && _dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_2__[\"CmsitemsRestService\"]) === \"function\" ? _c : Object, typeof (_d = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"ICatalogService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"ICatalogService\"]) === \"function\" ? _d : Object, typeof (_e = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IPageInfoService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IPageInfoService\"]) === \"function\" ? _e : Object, typeof (_f = typeof _dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_3__[\"IPageContentSlotsComponentsRestService\"] !== \"undefined\" && _dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_3__[\"IPageContentSlotsComponentsRestService\"]) === \"function\" ? _f : Object, String, String, String])\n    ], /* @ngInject */ ComponentService);\n    return ComponentService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/componentVisibilityAlertServiceInterface.js\":\n/*!***********************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/componentVisibilityAlertServiceInterface.js ***!\n  \\***********************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name componentVisibilityAlertServiceInterfaceModule\n *\n * @description\n * This module defines the componentVisibilityAlertServiceInterfaceModule Angular component\n * and its associated service. It uses the cmsContextualAlertModule to display\n * a contextual alert whenever a component get either hidden or restricted.\n */\nangular.module(\"componentVisibilityAlertServiceInterfaceModule\", [])\n\n    /**\n     * @ngdoc service\n     * @name componentVisibilityAlertServiceInterfaceModule.service:componentVisibilityAlertServiceInterface\n     *\n     * @description\n     * The componentVisibilityAlertServiceInterface is used by external modules to check\n     * on a component visibility and trigger the display of a contextual alert when\n     * the component is either hidden or restricted.\n     */\n    .factory('ComponentVisibilityAlertServiceInterface', function() {\n\n        var ComponentVisibilityAlertServiceInterface = function() {};\n\n        /**\n         * @ngdoc method\n         * @name componentVisibilityAlertServiceInterfaceModule.service:componentVisibilityAlertServiceInterface#checkAndAlertOnComponentVisibility\n         * @methodOf componentVisibilityAlertServiceInterfaceModule.service:componentVisibilityAlertServiceInterface\n         *\n         * @description\n         * Method checks on a component visibility and triggering the display of a\n         * contextual alert when the component is either hidden or restricted. This\n         * method defines a custom Angular controller which will get passed to and\n         * consumed by the contextual alert.\n         *\n         * @param {Object} component A JSON object containing the specific configuration to be applied on the actionableAlert.\n         * @param {String} component.componentId Uuid of the cmsItem\n         * @param {String} component.componentType Type of the cmsItem\n         * @param {String} component.catalogVersion CatalogVersion uuid of the cmsItem\n         * @param {String} component.restricted Boolean stating whether a restriction is applied to the cmsItem.\n         * @param {String} component.slotId Id of the slot where the cmsItem was added or modified.\n         * @param {String} component.visibility Boolean stating whether the cmsItem is rendered.\n         */\n        ComponentVisibilityAlertServiceInterface.prototype.checkAndAlertOnComponentVisibility = function() {};\n\n        return ComponentVisibilityAlertServiceInterface;\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/components/IComponentSharedService.ts\":\n/*!*****************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/components/IComponentSharedService.ts ***!\n  \\*****************************************************************************************/\n/*! exports provided: IComponentSharedService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IComponentSharedService\", function() { return IComponentSharedService; });\n/**\n * @internal\n * @name cmsSmarteditServicesModule.service:componentSharedService\n *\n * @description\n * Service used to determine if a component is shared.\n */\nvar IComponentSharedService = /** @class */ (function () {\n    function IComponentSharedService() {\n    }\n    /**\n     * @internal\n     * @name cmsSmarteditServicesModule.service:componentSharedService#isComponentShared\n     * @methodOf cmsSmarteditServicesModule.service:componentSharedService\n     *\n     * @description\n     * This method is used to determine if a component is shared.\n     * A component is considered shared if it is used in two or more content slots.\n     *\n     * @param {String|ICMSComponent} component The component for which to check if it is shared or not.\n     *\n     * @returns {angular.IPromise<boolean>} A promise that resolves to a boolean value. True if the component is shared. False, otherwise.\n     */\n    IComponentSharedService.prototype.isComponentShared = function (component) {\n        'proxyFunction';\n        return null;\n    };\n    return IComponentSharedService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/index.ts\":\n/*!************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/index.ts ***!\n  \\************************************************************/\n/*! exports provided: IPageService, IContextAwareEditableItemService, ComponentService, workflowCompletedEvictionTag, workflowTasksMenuOpenedEvictionTag, slotEvictionTag */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pages */ \"./jsTarget/web/features/cmscommons/services/pages/index.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IPageService\", function() { return _pages__WEBPACK_IMPORTED_MODULE_0__[\"IPageService\"]; });\n\n/* harmony import */ var _cache_tags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache/tags */ \"./jsTarget/web/features/cmscommons/services/cache/tags/index.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"workflowCompletedEvictionTag\", function() { return _cache_tags__WEBPACK_IMPORTED_MODULE_1__[\"workflowCompletedEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"workflowTasksMenuOpenedEvictionTag\", function() { return _cache_tags__WEBPACK_IMPORTED_MODULE_1__[\"workflowTasksMenuOpenedEvictionTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"slotEvictionTag\", function() { return _cache_tags__WEBPACK_IMPORTED_MODULE_1__[\"slotEvictionTag\"]; });\n\n/* harmony import */ var _IContextAwareEditableItemService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IContextAwareEditableItemService */ \"./jsTarget/web/features/cmscommons/services/IContextAwareEditableItemService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IContextAwareEditableItemService\", function() { return _IContextAwareEditableItemService__WEBPACK_IMPORTED_MODULE_2__[\"IContextAwareEditableItemService\"]; });\n\n/* harmony import */ var _componentService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./componentService */ \"./jsTarget/web/features/cmscommons/services/componentService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ComponentService\", function() { return _componentService__WEBPACK_IMPORTED_MODULE_3__[\"ComponentService\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptor.ts\":\n/*!*****************************************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptor.ts ***!\n  \\*****************************************************************************************************************************/\n/*! exports provided: VersionExperienceInterceptor */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VersionExperienceInterceptor\", function() { return VersionExperienceInterceptor; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n/** @internal */\nvar VersionExperienceInterceptor = /** @class */ (function () {\n    function VersionExperienceInterceptor(TYPES_RESOURCE_URI, interceptorHelper, sharedDataService) {\n        this.TYPES_RESOURCE_URI = TYPES_RESOURCE_URI;\n        this.interceptorHelper = interceptorHelper;\n        this.sharedDataService = sharedDataService;\n        this.request = this.request.bind(this);\n    }\n    VersionExperienceInterceptor_1 = VersionExperienceInterceptor;\n    VersionExperienceInterceptor.prototype.request = function (config) {\n        var _this = this;\n        if (this.isGET(config) && this.isPreviewDataTypeResourceEndpoint(config.url)) {\n            return this.interceptorHelper.handleRequest(config, function () {\n                return _this.sharedDataService.get('experience').then(function (experience) {\n                    if (experience.versionId) {\n                        config.url = config.url.replace(VersionExperienceInterceptor_1.MODE_DEFAULT, VersionExperienceInterceptor_1.MODE_PREVIEW_VERSION);\n                    }\n                    return config;\n                });\n            });\n        }\n        return config;\n    };\n    VersionExperienceInterceptor.prototype.isGET = function (config) {\n        return config.method === \"GET\";\n    };\n    VersionExperienceInterceptor.prototype.isPreviewDataTypeResourceEndpoint = function (url) {\n        return url.indexOf(this.TYPES_RESOURCE_URI) > -1 && url.indexOf(VersionExperienceInterceptor_1.PREVIEW_DATA_TYPE) > -1;\n    };\n    var VersionExperienceInterceptor_1, _a;\n    VersionExperienceInterceptor.MODE_DEFAULT = 'DEFAULT';\n    VersionExperienceInterceptor.MODE_PREVIEW_VERSION = 'PREVIEWVERSION';\n    VersionExperienceInterceptor.PREVIEW_DATA_TYPE = 'PreviewData';\n    VersionExperienceInterceptor = VersionExperienceInterceptor_1 = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [String, Object, typeof (_a = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"ISharedDataService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"ISharedDataService\"]) === \"function\" ? _a : Object])\n    ], /* @ngInject */ VersionExperienceInterceptor);\n    return VersionExperienceInterceptor;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptorModule.ts\":\n/*!***********************************************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptorModule.ts ***!\n  \\***********************************************************************************************************************************/\n/*! exports provided: VersionExperienceInterceptorModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VersionExperienceInterceptorModule\", function() { return VersionExperienceInterceptorModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _VersionExperienceInterceptor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./VersionExperienceInterceptor */ \"./jsTarget/web/features/cmscommons/services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptor.ts\");\n\n\n\nvar VersionExperienceInterceptorModule = /** @class */ (function () {\n    function VersionExperienceInterceptorModule() {\n    }\n    VersionExperienceInterceptorModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeModule\"])({\n            imports: [\n                'interceptorHelperModule'\n            ],\n            providers: [_VersionExperienceInterceptor__WEBPACK_IMPORTED_MODULE_2__[\"VersionExperienceInterceptor\"]],\n            config: function ($httpProvider) {\n                'ngInject';\n                $httpProvider.interceptors.push(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"diNameUtils\"].buildServiceName(_VersionExperienceInterceptor__WEBPACK_IMPORTED_MODULE_2__[\"VersionExperienceInterceptor\"]));\n            }\n        })\n    ], /* @ngInject */ VersionExperienceInterceptorModule);\n    return VersionExperienceInterceptorModule;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/modes/CMSModesService.ts\":\n/*!****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/modes/CMSModesService.ts ***!\n  \\****************************************************************************/\n/*! exports provided: CMSModesService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CMSModesService\", function() { return CMSModesService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:CMSModesService\n *\n * @description\n * General methods for cms modes.\n */\nvar CMSModesService = /** @class */ (function () {\n    function CMSModesService(perspectiveService) {\n        this.perspectiveService = perspectiveService;\n    }\n    CMSModesService_1 = CMSModesService;\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:CMSModesService#isVersioningPerspectiveActive\n     * @methodOf cmsSmarteditServicesModule.service:CMSModesService\n     *\n     * @description\n     * Returns a promise that resolves to a boolean which is true if the current perspective loaded is versioning, false otherwise.\n     *\n     * @returns {Promise<boolean>} the promise that resolves to a boolean\n     */\n    CMSModesService.prototype.isVersioningPerspectiveActive = function () {\n        return this.perspectiveService.getActivePerspectiveKey().then(function (activePerspectiveKey) {\n            return activePerspectiveKey === CMSModesService_1.VERSIONING_PERSPECTIVE_KEY;\n        });\n    };\n    var CMSModesService_1;\n    CMSModesService.BASIC_PERSPECTIVE_KEY = 'se.cms.perspective.basic';\n    CMSModesService.ADVANCED_PERSPECTIVE_KEY = 'se.cms.perspective.advanced';\n    CMSModesService.VERSIONING_PERSPECTIVE_KEY = 'se.cms.perspective.versioning';\n    CMSModesService = CMSModesService_1 = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Object])\n    ], /* @ngInject */ CMSModesService);\n    return CMSModesService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/pages/IPageService.ts\":\n/*!*************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/pages/IPageService.ts ***!\n  \\*************************************************************************/\n/*! exports provided: IPageService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IPageService\", function() { return IPageService; });\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:PageService\n *\n * @description\n * The pageServiceModule provides services for dealing with CMS page objects\n *\n */\nvar IPageService = /** @class */ (function () {\n    function IPageService() {\n    }\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getPageById\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Retrieves the page corresponding to the given page UID in the current contextual\n     * site + catalog + catalog version.\n     *\n     * @param {String} pageUid The identifier of the page\n     *\n     * @returns {Promise<ICMSPage>} A promise that resolves to the page corresponding to this uid.\n     */\n    IPageService.prototype.getPageById = function (pageUid) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getCurrentPageInfo\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Retrieves the page information of the page identified by the given uuid.\n     *\n     * @param {String} uuid The unique identifier of the page\n     *\n     * @returns {Promise<ICMSPage>} A promise that resolves to the page corresponding to the given uuid.\n     *\n     */\n    IPageService.prototype.getPageByUuid = function (uuid) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getCurrentPageInfo\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Retrieves the page information of the page that is currently loaded.\n     *\n     * @returns {Promise<ICMSPage>} A promise that resolves to a CMS Item object containing\n     * information related to the current page\n     */\n    IPageService.prototype.getCurrentPageInfo = function () {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getCurrentPageInfoByVersion\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Retrieves a version, as identified by the provided version id, of the page information that is currently loaded.\n     *\n     * @param {String} versionId The ID of the page version to load.\n     *\n     * @returns {Promise<ICMSPage>} A promise that resolves to a CMS Item object containing\n     * information related to the version selected of the current page\n     */\n    IPageService.prototype.getCurrentPageInfoByVersion = function (versionId) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#isPagePrimary\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Determines if a page belonging to the current contextual site+catalog+catalogversion is primary.\n     *\n     * @param {String} pageUid The UID of the page.\n     *\n     * @returns {Promise<boolean>} A promise that resolves to true if the page is primary, false otherwise.\n     */\n    IPageService.prototype.isPagePrimary = function (pageUid) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#isPagePrimaryWithContext\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Determines if a page belonging to the provided contextual site+catalog+catalogversion is primary.\n     *\n     * @param {String} pageUid The UID of the page.\n     * @param {IUriContext} uriContext The uriContext for the pageId\n     *\n     * @returns {Promise<boolean>} A promise that resolves to true if the page is primary, false otherwise.\n     */\n    IPageService.prototype.isPagePrimaryWithContext = function (pageUid, uriContext) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getPrimaryPage\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Retrieves the primary page of the given variation page in the current site+catalog+catalogversion.\n     *\n     * @param {String} variationPageId The UID of the variation page for which to find its primary page.\n     *\n     * @returns {Promise<ICMSPage>} A promise that resolves to the page object or undefined if no primary page was found.\n     */\n    IPageService.prototype.getPrimaryPage = function (variationPageUid) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getPrimaryPagesForPageType\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Fetches a list of pages for for a given site+catalog+catalogversion\n     *\n     * @param {String} pageTypeCode A page type code to filter pages by\n     * @param {Object} uriParams A {@link resourceLocationsModule.object:UriContext UriContext}\n     *\n     * @returns {Promise<ICMSPage[]>} A promise that resolves to an array of pages or a an empty array\n     */\n    IPageService.prototype.getPrimaryPagesForPageType = function (pageTypeCode, uriParams) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#primaryPageForPageTypeExists\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Returns true if primary page exists for a given page type\n     *\n     * @param {String} pageTypeCode A page type code to filter pages by\n     * @param {Object} uriParams An optional {@link resourceLocationsModule.object:UriContext UriContext}\n     *\n     * @returns {Promise<boolean>} A promise that resolves to true if the page exists, false otherwise.\n     */\n    IPageService.prototype.primaryPageForPageTypeExists = function (pageTypeCode, uriParams) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getPaginatedPrimaryPagesForPageType\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Fetches a pagination page for list of pages for a given site+catalog+catalogversion and page\n     *\n     * @param {String} pageTypeCode A page type code to filter pages by\n     * @param {Object} [uriParams] An optional {@link resourceLocationsModule.object:UriContext UriContext}\n     * @param {Object} [fetchPageParams] An optional Fetch Page strategy parameters. If not provided it will return results for the first page only.\n     * @param {Object} [fetchPageParams.currentPage=0]\n     * @param {Object} [fetchPageParams.pageSize=10]\n     *\n     * @returns {Promise<Page<ICMSPage>>} A promise that resolves to pagination with array of pages\n     */\n    IPageService.prototype.getPaginatedPrimaryPagesForPageType = function (pageTypeCode, uriParams, fetchPageParams) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#getVariationPages\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Retrieves the variation pages of the given primary page in the current site+catalog+catalogversion.\n     *\n     * @param {String} primaryPageId The UID of the primary page.\n     *\n     * @returns {Promise<ICMSPage[]>} A promise that resolves an array of variation pages or an empty list if none are found.\n     */\n    IPageService.prototype.getVariationPages = function (primaryPageUid) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#updatePageById\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Updates the page corresponding to the given page UID with the payload provided for the current site+catalog+catalogversion.\n     *\n     * @param {String} pageUid The UID of the page\n     * @param {ICMSPage} payload The information to update the page with.\n     *\n     * @returns {Promise<ICMSPage>} A promise that resolves to the JSON page object as it now exists in the backend\n     */\n    IPageService.prototype.updatePageById = function (pageUid, payload) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#forcePageApprovalStatus\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * This method will forcefully update the page approval status (as long as the current user has the right permissions) of the page loaded\n     * in the current context to the given status.\n     *\n     * @returns {Promise<ICMSPage>} If request is successful, it returns a promise that resolves with the updated CMS Item object. If the\n     * request fails, it resolves with errors from the backend.\n     */\n    IPageService.prototype.forcePageApprovalStatus = function (newPageStatus) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#isPageApproved\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * This method is used to determine whether the given page is approved (and can be synched).\n     *\n     * @param {string|ICMSPage} pageParam The page to check.\n     *\n     * @returns {Promise<boolean>} A promise that resolves to a boolean. If the page is already approved it will return true.\n     * False, otherwise.\n     */\n    IPageService.prototype.isPageApproved = function (pageParam) {\n        'proxyFunction';\n        return null;\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:PageService#buildUriContextForCurrentPage\n     * @methodOf cmsSmarteditServicesModule.service:PageService\n     *\n     * @description\n     * Returns the uriContext populated with the siteId, catalogId and catalogVersion taken from $routeParams and fallback to the currentExperience\n     * Note: From the page list, $routeParams are defined. From the storefront, $routeParams are undefined.\n     *\n     * @return {angular.IPromise<IUriContext>} promise resolve to the uri context\n     */\n    IPageService.prototype.buildUriContextForCurrentPage = function () {\n        'proxyFunction';\n        return null;\n    };\n    return IPageService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/pages/index.ts\":\n/*!******************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/pages/index.ts ***!\n  \\******************************************************************/\n/*! exports provided: IPageService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _IPageService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IPageService */ \"./jsTarget/web/features/cmscommons/services/pages/IPageService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IPageService\", function() { return _IPageService__WEBPACK_IMPORTED_MODULE_0__[\"IPageService\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/removeComponentServiceInterface.js\":\n/*!**************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/removeComponentServiceInterface.js ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name removeComponentServiceInterfaceModule\n * @description\n * # The removeComponentServiceInterfaceModule\n *\n * Provides a service with the ability to remove a component from a slot.\n */\nangular.module('removeComponentServiceInterfaceModule', [])\n    /**\n     * @ngdoc service\n     * @name removeComponentServiceInterfaceModule.service:RemoveComponentServiceInterface\n     * @description\n     * Service interface specifying the contract used to remove a component from a slot.\n     *\n     * This class serves as an interface and should be extended, not instantiated.\n     */\n    .factory('RemoveComponentServiceInterface', function() {\n        function RemoveComponentServiceInterface() {}\n\n        /**\n         * @ngdoc method\n         * @name removeComponentServiceInterfaceModule.service:RemoveComponentServiceInterface#removeComponent\n         * @methodOf removeComponentServiceInterfaceModule.service:RemoveComponentServiceInterface\n         *\n         * @description\n         * Removes the component specified by the given ID from the component specified by the given ID.\n         *\n         * @param {String} slotId The ID of the slot from which to remove the component.\n         * @param {String} componentId The ID of the component to remove from the slot.\n         */\n        RemoveComponentServiceInterface.prototype.removeComponent = function() {};\n\n        return RemoveComponentServiceInterface;\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/services/synchronizationService.js\":\n/*!*****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/services/synchronizationService.js ***!\n  \\*****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name synchronizationServiceModule\n * @description\n *\n * The synchronization module contains the service necessary to perform catalog synchronization.\n *\n * The {@link synchronizationServiceModule.service:synchronizationService synchronizationService} \n * calls backend API in order to get synchronization status or trigger a catalog synchronization between two catalog versions.\n *\n */\nangular.module('synchronizationServiceModule', ['smarteditServicesModule', 'resourceLocationsModule', 'alertServiceModule', 'timerModule', 'legacySmarteditCommonsModule', 'cmsConstantsModule'])\n    /**\n     * @ngdoc object\n     * @name synchronizationServiceModule.object:CATALOG_SYNC_INTERVAL_IN_MILLISECONDS\n     * @description\n     * This object defines an injectable Angular constant that determines the frequency to update catalog synchronization information. \n     * Value given in milliseconds. \n     */\n    .constant('CATALOG_SYNC_INTERVAL_IN_MILLISECONDS', 5000)\n    /**\n     * @ngdoc service\n     * @name synchronizationServiceModule.service:synchronizationService\n     * @description\n     *\n     * The synchronization service manages RESTful calls to the synchronization service's backend API.\n     * \n     */\n    .service('synchronizationService', function(restServiceFactory, timerService, $q, $translate, alertService, authenticationService, operationContextService, crossFrameEventService, OPERATION_CONTEXT, CATALOG_SYNC_INTERVAL_IN_MILLISECONDS, SYNCHRONIZATION_EVENT) {\n\n        // Constants\n        var BASE_URL = \"/cmswebservices\";\n        var SYNC_JOB_INFO_BY_TARGET_URI = '/cmswebservices/v1/catalogs/:catalog/synchronizations/targetversions/:target';\n        var SYNC_JOB_INFO_BY_SOURCE_AND_TARGET_URI = '/cmswebservices/v1/catalogs/:catalog/versions/:source/synchronizations/versions/:target';\n\n        // Variables\n        var intervalHandle = {};\n        var syncRequested = [];\n        var syncJobInfoByTargetRestService = restServiceFactory.get(SYNC_JOB_INFO_BY_TARGET_URI);\n        var syncJobInfoBySourceAndTargetRestService = restServiceFactory.get(SYNC_JOB_INFO_BY_SOURCE_AND_TARGET_URI, 'catalog');\n\n        operationContextService.register(SYNC_JOB_INFO_BY_TARGET_URI, OPERATION_CONTEXT.CMS);\n        operationContextService.register(SYNC_JOB_INFO_BY_SOURCE_AND_TARGET_URI, OPERATION_CONTEXT.CMS);\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#updateCatalogSync\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to synchronize a catalog between two catalog versions.\n         * It sends the {@link SYNCHRONIZATION_EVENT.CATALOG_SYNCHRONIZED} event if successful.\n         *\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.updateCatalogSync = function(catalog) {\n            var jobKey = this._getJobKey(catalog.catalogId, catalog.sourceCatalogVersion, catalog.targetCatalogVersion);\n            this.addCatalogSyncRequest(jobKey);\n\n            return syncJobInfoBySourceAndTargetRestService.update({\n                'catalog': catalog.catalogId,\n                'source': catalog.sourceCatalogVersion,\n                'target': catalog.targetCatalogVersion\n            }).then(function(response) {\n                return response;\n            }.bind(this), function(reason) {\n                var translationErrorMsg = $translate.instant('sync.running.error.msg', {\n                    catalogName: catalog.name\n                });\n                if (reason.statusText === 'Conflict') {\n                    alertService.showDanger({\n                        message: translationErrorMsg\n                    });\n                }\n                return false;\n            }.bind(this));\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#getCatalogSyncStatus\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to get the status of the last synchronization job between two catalog versions. \n         * \n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.getCatalogSyncStatus = function(catalog) {\n            if (catalog.sourceCatalogVersion) {\n                return this.getSyncJobInfoBySourceAndTarget(catalog);\n            } else {\n                return this.getLastSyncJobInfoByTarget(catalog);\n            }\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#getCatalogSyncStatus\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to get the status of the last synchronization job between two catalog versions. \n         * \n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.getSyncJobInfoBySourceAndTarget = function(catalog) {\n            return syncJobInfoBySourceAndTargetRestService.get({\n                'catalog': catalog.catalogId,\n                'source': catalog.sourceCatalogVersion,\n                'target': catalog.targetCatalogVersion\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#getCatalogSyncStatus\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to get the status of the last synchronization job. \n         * \n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.getLastSyncJobInfoByTarget = function(catalog) {\n            return syncJobInfoByTargetRestService.get({\n                'catalog': catalog.catalogId,\n                'target': catalog.targetCatalogVersion\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#stopAutoGetSyncData\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method starts the auto synchronization status update in a catalog between two given catalog versions.\n         *\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.startAutoGetSyncData = function(catalog, callback) {\n            var catalogId = catalog.catalogId;\n            var sourceCatalogVersion = catalog.sourceCatalogVersion;\n            var targetCatalogVersion = catalog.targetCatalogVersion;\n\n            var jobKey = this._getJobKey(catalogId, sourceCatalogVersion, targetCatalogVersion);\n\n            var syncJobTimer = timerService.createTimer(this._autoSyncCallback.bind(this, catalog, callback, jobKey), CATALOG_SYNC_INTERVAL_IN_MILLISECONDS);\n            syncJobTimer.start();\n\n            intervalHandle[jobKey] = syncJobTimer;\n        };\n\n        this._autoSyncCallback = function(catalog, callback, jobKey) {\n            authenticationService.isAuthenticated(BASE_URL).then(function(response) {\n                if (!response) {\n                    this.stopAutoGetSyncData(catalog);\n                }\n                this.getCatalogSyncStatus(catalog)\n                    .then(this.syncRequestedCallback(catalog))\n                    .then(callback)\n                    .then(function() {\n                        if (!intervalHandle[jobKey]) {\n                            this.startAutoGetSyncData(catalog, callback);\n                        }\n                    }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * Method sends {@link SYNCHRONIZATION_EVENT.CATALOG_SYNCHRONIZED} event when synchronization process is finished.\n         * It also stops polling if the job is not needed anymore (i.e. was marked with discardWhenNextSynced = true).\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         */\n        this.syncRequestedCallback = function(catalog) {\n            var jobKey = this._getJobKey(catalog.catalogId, catalog.sourceCatalogVersion, catalog.targetCatalogVersion);\n            return function(response) {\n                if (this.catalogSyncInProgress(jobKey)) {\n                    if (this.catalogSyncFinished(response)) {\n                        this.removeCatalogSyncRequest(jobKey);\n                        crossFrameEventService.publish(SYNCHRONIZATION_EVENT.CATALOG_SYNCHRONIZED, catalog);\n                    }\n\n                    if ((intervalHandle[jobKey].discardWhenNextSynced && this.catalogSyncFinished(response)) || this.catalogSyncAborted(response)) {\n                        intervalHandle[jobKey].stop();\n                        intervalHandle[jobKey] = undefined;\n                        this.removeCatalogSyncRequest(jobKey);\n                    }\n                }\n                return response;\n            }.bind(this);\n        };\n\n        this.catalogSyncInProgress = function(jobKey) {\n            return syncRequested.indexOf(jobKey) > -1;\n        };\n\n        this.catalogSyncFinished = function(response) {\n            return response.syncStatus === \"FINISHED\";\n        };\n\n        this.catalogSyncAborted = function(response) {\n            return response.syncStatus === \"ABORTED\";\n        };\n\n        this.removeCatalogSyncRequest = function(jobKey) {\n            var index = syncRequested.indexOf(jobKey);\n            if (index > -1) {\n                syncRequested.splice(index, 1);\n            }\n        };\n\n        this.addCatalogSyncRequest = function(jobKey) {\n            if (syncRequested.indexOf(jobKey) === -1) {\n                syncRequested.push(jobKey);\n            }\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#stopAutoGetSyncData\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method stops the auto synchronization status update in a catalog between two given catalog versions\n         * or it marks the job with discardWhenNextSynced = true if there is a syncrhonization in progress. If the job is\n         * marked with discardWhenNextSynced = true then it will be discarded when the synchronization process is finished or aborted.\n         *\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.stopAutoGetSyncData = function(catalog) {\n            var jobKey = this._getJobKey(catalog.catalogId, catalog.sourceCatalogVersion, catalog.targetCatalogVersion);\n            if (intervalHandle[jobKey]) {\n                if (syncRequested.indexOf(jobKey) > -1) {\n                    intervalHandle[jobKey].discardWhenNextSynced = true;\n                } else {\n                    intervalHandle[jobKey].stop();\n                    intervalHandle[jobKey] = undefined;\n                }\n            }\n        };\n\n        this._getJobKey = function(catalogId, sourceCatalogVersion, targetCatalogVersion) {\n            return catalogId + \"_\" + sourceCatalogVersion + \"_\" + targetCatalogVersion;\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmscommons/templates.js\":\n/*!*******************************************************!*\\\n  !*** ./jsTarget/web/features/cmscommons/templates.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nangular.module('cmscommonsTemplates', []).run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('web/features/cmscommons/components/synchronize/synchronizationPanelTemplate.html',\n    \"<div class=\\\"se-sync-panel\\\">\\n\" +\n    \"    <div class=\\\"se-sync-panel__sync-status\\\"\\n\" +\n    \"        data-ng-if=\\\"sync.headerTemplateUrl\\\"\\n\" +\n    \"        data-ng-include=\\\"sync.headerTemplateUrl\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <y-message data-ng-if=\\\"sync.message\\\"\\n\" +\n    \"        data-type=\\\"{{sync.message.type}}\\\"\\n\" +\n    \"        data-message-id=\\\"sync-panel-message-{{$index}}\\\">\\n\" +\n    \"        <message-description>\\n\" +\n    \"            {{sync.message.description}}\\n\" +\n    \"        </message-description>\\n\" +\n    \"    </y-message>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"se-sync-panel__sync-info\\\"\\n\" +\n    \"        data-ng-show=\\\"sync.showItemList\\\">\\n\" +\n    \"        <div data-ng-if=\\\"sync.isLoading\\\">\\n\" +\n    \"            <div class=\\\"spinner-sm spinner-light\\\">Loading...</div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div data-ng-if=\\\"!sync.isLoading\\\"\\n\" +\n    \"            data-ng-repeat=\\\"dependency in sync.getRows()\\\"\\n\" +\n    \"            data-ng-class=\\\"{active: $index==0, 'se-sync-panel--item__external': dependency.isExternal}\\\"\\n\" +\n    \"            class=\\\"se-sync-panel__sync-info__row\\\">\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"se-sync-panel__info-checkbox fd-form__item\\\">\\n\" +\n    \"                <input type=\\\"checkbox\\\"\\n\" +\n    \"                    class=\\\"fd-form__control\\\"\\n\" +\n    \"                    data-ng-if=\\\"!dependency.isExternal\\\"\\n\" +\n    \"                    data-ng-model=\\\"dependency.selected\\\"\\n\" +\n    \"                    data-ng-disabled=\\\"sync.isDisabled(dependency)\\\"\\n\" +\n    \"                    data-ng-change=\\\"sync.selectionChange($index)\\\"\\n\" +\n    \"                    id=\\\"sync-info__checkbox_{{$index}}\\\">\\n\" +\n    \"                <label data-ng-if=\\\"$index===0\\\"\\n\" +\n    \"                    for=\\\"sync-info__checkbox_{{$index}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__info-checkbox-label se-sync-panel__info-checkbox-label--select-all fd-form__label\\\"\\n\" +\n    \"                    title=\\\"{{::dependency.selectAll | translate}}\\\">\\n\" +\n    \"                    {{::dependency.selectAll | translate}}</label>\\n\" +\n    \"\\n\" +\n    \"                <label data-ng-if=\\\"$index!==0 && !dependency.isExternal\\\"\\n\" +\n    \"                    for=\\\"sync-info__checkbox_{{$index}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__info-checkbox-label fd-form__label\\\"\\n\" +\n    \"                    title=\\\"{{::dependency.name | translate}}\\\">\\n\" +\n    \"                    {{::dependency.name | translate}}</label>\\n\" +\n    \"\\n\" +\n    \"                <label data-ng-if=\\\"$index!==0 && dependency.isExternal\\\"\\n\" +\n    \"                    data-y-popover\\n\" +\n    \"                    data-trigger=\\\"'hover'\\\"\\n\" +\n    \"                    data-template=\\\"sync.getTemplateInfoForExternalComponent()\\\"\\n\" +\n    \"                    for=\\\"sync-info__checkbox_{{$index}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__info-checkbox-label fd-form__label\\\">\\n\" +\n    \"                    {{::dependency.name | translate}}\\n\" +\n    \"                </label>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <span data-ng-if=\\\"sync.buildInfoTemplate(dependency)\\\"\\n\" +\n    \"                data-y-popover\\n\" +\n    \"                data-trigger=\\\"'hover'\\\"\\n\" +\n    \"                data-title=\\\"sync.getInfoTitle(dependency)\\\"\\n\" +\n    \"                data-template=\\\"sync.buildInfoTemplate(dependency)\\\"\\n\" +\n    \"                class=\\\"pull-right se-sync-panel__sync-info__right-icon\\\"\\n\" +\n    \"                data-ng-class=\\\"{'se-sync-panel--icon-globe': dependency.isExternal} \\\">\\n\" +\n    \"                <span data-status=\\\"{{dependency.status}}\\\"\\n\" +\n    \"                    data-ng-if=\\\"!dependency.isExternal\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__sync-info-icon\\\"\\n\" +\n    \"                    data-ng-class=\\\"{\\n\" +\n    \"                        'sap-icon--accept':sync.isInSync(dependency), \\n\" +\n    \"                        'sap-icon--message-warning':!sync.isInSync(dependency)}\\\"></span>\\n\" +\n    \"                <span data-ng-if=\\\"dependency.isExternal\\\"\\n\" +\n    \"                    class=\\\"sap-icon--globe\\\"></span>\\n\" +\n    \"            </span>\\n\" +\n    \"\\n\" +\n    \"            <span data-ng-if=\\\"!sync.buildInfoTemplate(dependency)\\\"\\n\" +\n    \"                class=\\\"pull-right se-sync-panel__sync-info__right-icon\\\">\\n\" +\n    \"                <span data-status=\\\"{{dependency.status}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__sync-info-icon\\\"\\n\" +\n    \"                    data-ng-class=\\\"{\\n\" +\n    \"                        'sap-icon--accept':sync.isInSync(dependency), \\n\" +\n    \"                        'sap-icon--message-warning':!sync.isInSync(dependency)}\\\"></span>\\n\" +\n    \"            </span>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"se-sync-panel__footer\\\"\\n\" +\n    \"        data-ng-if=\\\"sync.showSyncButton\\\">\\n\" +\n    \"        <button class=\\\"fd-button--emphasized se-sync-panel__footer__btn se-sync-panel__sync-btn\\\"\\n\" +\n    \"            data-ng-disabled=\\\"sync.isSyncButtonDisabled()\\\"\\n\" +\n    \"            data-ng-click=\\\"sync.syncItems()\\\"\\n\" +\n    \"            data-translate=\\\"se.cms.actionitem.page.sync\\\"></button>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n}]);\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit sync recursive \\\\.js$\":\n/*!*******************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit sync \\.js$ ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./components/externalComponent/externalComponentButton.js\": \"./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentButton.js\",\n\t\"./components/externalComponent/externalComponentDecorator.js\": \"./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentDecorator.js\",\n\t\"./components/slotShared/slotSharedButton.js\": \"./jsTarget/web/features/cmssmartedit/components/slotShared/slotSharedButton.js\",\n\t\"./components/slotSharedDisabled/externalSlotDisabledDecorator.js\": \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecorator.js\",\n\t\"./components/slotSharedDisabled/sharedSlotDisabledDecorator.js\": \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecorator.js\",\n\t\"./components/slotSharedDisabled/slotDisabledComponent.js\": \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledComponent.js\",\n\t\"./components/slotUnshared/slotUnsharedButton.js\": \"./jsTarget/web/features/cmssmartedit/components/slotUnshared/slotUnsharedButton.js\",\n\t\"./components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js\": \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js\",\n\t\"./components/slotVisibility/slotVisibilityButton.js\": \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityButton.js\",\n\t\"./components/slotVisibility/slotVisibilityComponent.js\": \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponent.js\",\n\t\"./components/synchronize/slots/slotSyncButton.js\": \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/slotSyncButton.js\",\n\t\"./services/componentInfoService.js\": \"./jsTarget/web/features/cmssmartedit/services/componentInfoService.js\",\n\t\"./services/componentVisibilityAlertService.js\": \"./jsTarget/web/features/cmssmartedit/services/componentVisibilityAlertService.js\",\n\t\"./services/contextualMenuDropdownService.js\": \"./jsTarget/web/features/cmssmartedit/services/contextualMenuDropdownService.js\",\n\t\"./services/dragAndDrop/cmsDragAndDropService.js\": \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/cmsDragAndDropService.js\",\n\t\"./services/dragAndDrop/componentEditingFacadeService.js\": \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/componentEditingFacadeService.js\",\n\t\"./services/dragAndDrop/slotRestrictionsService.js\": \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/slotRestrictionsService.js\",\n\t\"./services/editorEnablerService.js\": \"./jsTarget/web/features/cmssmartedit/services/editorEnablerService.js\",\n\t\"./services/pageContentSlotsService.js\": \"./jsTarget/web/features/cmssmartedit/services/pageContentSlotsService.js\",\n\t\"./services/removeComponentService.js\": \"./jsTarget/web/features/cmssmartedit/services/removeComponentService.js\",\n\t\"./services/slotSharedService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotSharedService.js\",\n\t\"./services/slotSynchronizationService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotSynchronizationService.js\",\n\t\"./services/slotUnsharedService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotUnsharedService.js\",\n\t\"./services/slotVisibilityService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotVisibilityService.js\",\n\t\"./templates.js\": \"./jsTarget/web/features/cmssmartedit/templates.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./jsTarget/web/features/cmssmartedit sync recursive \\\\.js$\";\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/cmssmartedit.ts\":\n/*!************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/cmssmartedit.ts ***!\n  \\************************************************************/\n/*! exports provided: CmssmarteditModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmssmarteditModule\", function() { return CmssmarteditModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/platform-browser/fesm5/platform-browser.js\");\n/* harmony import */ var _angular_upgrade_static__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/upgrade/static */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/upgrade/fesm5/static.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js\");\n/* harmony import */ var cmssmartedit_components_synchronize_slots_SyncIndicatorDecorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cmssmartedit/components/synchronize/slots/SyncIndicatorDecorator */ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecorator.ts\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_contextualSlotDropdown_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/contextualSlotDropdown.scss */ \"./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss\");\n/* harmony import */ var _components_contextualSlotDropdown_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_components_contextualSlotDropdown_scss__WEBPACK_IMPORTED_MODULE_6__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n\n\nvar CmssmarteditModule = /** @class */ (function () {\n    function CmssmarteditModule() {\n    }\n    CmssmarteditModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"SeEntryModule\"])('cmssmartedit'),\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__[\"NgModule\"])({\n            imports: [\n                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__[\"BrowserModule\"],\n                _angular_upgrade_static__WEBPACK_IMPORTED_MODULE_2__[\"UpgradeModule\"]\n            ],\n            declarations: [\n                cmssmartedit_components_synchronize_slots_SyncIndicatorDecorator__WEBPACK_IMPORTED_MODULE_4__[\"SyncIndicatorDecorator\"]\n            ],\n            entryComponents: [\n                cmssmartedit_components_synchronize_slots_SyncIndicatorDecorator__WEBPACK_IMPORTED_MODULE_4__[\"SyncIndicatorDecorator\"]\n            ],\n            providers: [\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('$q'),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('catalogService'),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('slotSynchronizationService'),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('crossFrameEventService'),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('pageInfoService'),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('SYNCHRONIZATION_STATUSES'),\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_5__[\"diBridgeUtils\"].upgradeProvider('SYNCHRONIZATION_POLLING')\n            ]\n        })\n    ], CmssmarteditModule);\n    return CmssmarteditModule;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/cmsComponentsModule.ts\":\n/*!******************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/cmsComponentsModule.ts ***!\n  \\******************************************************************************/\n/*! exports provided: CmsComponentsModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmsComponentsModule\", function() { return CmsComponentsModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _synchronize_slots_SlotSynchronizationPanel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./synchronize/slots/SlotSynchronizationPanel */ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SlotSynchronizationPanel.ts\");\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services */ \"./jsTarget/web/features/cmssmartedit/services/index.ts\");\n/* harmony import */ var _sharedComponent_sharedComponentButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sharedComponent/sharedComponentButton */ \"./jsTarget/web/features/cmssmartedit/components/sharedComponent/sharedComponentButton.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\nvar CmsComponentsModule = /** @class */ (function () {\n    function CmsComponentsModule() {\n    }\n    CmsComponentsModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeModule\"])({\n            imports: [\n                'synchronizationPanelModule',\n                'slotSynchronizationServiceModule',\n                'pageContentSlotsServiceModule',\n                _services__WEBPACK_IMPORTED_MODULE_3__[\"CmsSmarteditServicesModule\"],\n            ],\n            declarations: [_synchronize_slots_SlotSynchronizationPanel__WEBPACK_IMPORTED_MODULE_2__[\"SlotSynchronizationPanel\"], _sharedComponent_sharedComponentButton__WEBPACK_IMPORTED_MODULE_4__[\"SharedComponentButton\"]]\n        })\n    ], /* @ngInject */ CmsComponentsModule);\n    return CmsComponentsModule;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss\":\n/*!***********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss ***!\n  \\***********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(/*! !../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true,\"url\":true}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src?{\"config\":{\"path\":\"./smartedit-build/config/\"}}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib?{\"data\":\"@import /\"se-variables/\";\",\"includePaths\":[\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\"]}!./contextualSlotDropdown.scss */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./jsTarget/web/features/cmssmartedit/components/contextualSlotDropdown.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentButton.js\":\n/*!****************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentButton.js ***!\n  \\****************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('externalComponentButtonModule', ['l10nModule', 'smarteditServicesModule'])\n    .controller('externalComponentButtonController', function(l10nFilter, catalogService) {\n\n        this.$onInit = function() {\n            this.isReady = false;\n\n            return catalogService.getCatalogVersionByUuid(this.catalogVersionUuid).then(function(catalogVersion) {\n                this.catalogVersion = l10nFilter(catalogVersion.catalogName) + ' (' + catalogVersion.version + ')';\n                this.isReady = true;\n            }.bind(this));\n\n        };\n\n    })\n    .component('externalComponentButton', {\n        templateUrl: 'externalComponentButtonTemplate.html',\n        controller: 'externalComponentButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            catalogVersionUuid: '<'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentDecorator.js\":\n/*!*******************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentDecorator.js ***!\n  \\*******************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('externalComponentDecoratorModule', ['functionsModule', 'cmsSmarteditServicesModule', 'yPopoverModule'])\n    .controller('externalComponentDecoratorController', function($element, $translate, $log, l10nFilter, CONTENT_SLOT_TYPE, componentHandlerService, catalogService, cMSModesService) {\n\n        this.$onInit = function() {\n\n            var parentSlotIdForComponent = componentHandlerService.getParentSlotForComponent($element);\n            this.isExtenalSlot = componentHandlerService.isExternalComponent(parentSlotIdForComponent, CONTENT_SLOT_TYPE);\n            this.isReady = false;\n\n            cMSModesService.isVersioningPerspectiveActive().then(function(isActive) {\n                this.isVersioningPerspective = isActive;\n                catalogService.getCatalogVersionByUuid(this.componentAttributes.smarteditCatalogVersionUuid).then(function(catalogVersion) {\n                    this.catalogVersionText = l10nFilter(catalogVersion.catalogName) + ' (' + catalogVersion.version + ')';\n                    this.isReady = true;\n                }.bind(this), function() {\n                    $log.error('externalComponentDecorator - cannot find catalog version for uuid', this.componentAttributes.smarteditCatalogVersionUuid);\n                }.bind(this));\n            }.bind(this));\n\n        };\n\n        this.getTooltipTemplate = function() {\n            return \"<div class='external-component-decorator__tooltip'>\" + $translate.instant('se.cms.from.external.catalog.version', {\n                catalogVersion: this.catalogVersionText\n            }) + \"</div>\";\n        };\n    })\n    .directive('externalComponentDecorator', function() {\n        return {\n            templateUrl: 'externalComponentDecoratorTemplate.html',\n            restrict: 'C',\n            transclude: true,\n            replace: false,\n            controller: 'externalComponentDecoratorController',\n            controllerAs: 'ctrl',\n            scope: {},\n            bindToController: {\n                active: '=',\n                componentAttributes: '<'\n            }\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/index.ts\":\n/*!****************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/index.ts ***!\n  \\****************************************************************/\n/*! exports provided: CmsComponentsModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cmsComponentsModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cmsComponentsModule */ \"./jsTarget/web/features/cmssmartedit/components/cmsComponentsModule.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmsComponentsModule\", function() { return _cmsComponentsModule__WEBPACK_IMPORTED_MODULE_0__[\"CmsComponentsModule\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/sharedComponent/sharedComponentButton.ts\":\n/*!************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/sharedComponent/sharedComponentButton.ts ***!\n  \\************************************************************************************************/\n/*! exports provided: SharedComponentButton */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharedComponentButton\", function() { return SharedComponentButton; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons/services */ \"./jsTarget/web/features/cmscommons/services/index.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nwindow.__smartedit__.addDecoratorPayload('SeComponent', 'SharedComponentButton', {\n    templateUrl: 'sharedComponentButtonTemplate.html',\n    inputs: ['smarteditComponentId']\n});\nvar SharedComponentButton = /** @class */ (function () {\n    function SharedComponentButton(contextAwareEditableItemService) {\n        this.contextAwareEditableItemService = contextAwareEditableItemService;\n        this.isReady = false;\n    }\n    SharedComponentButton.prototype.$onInit = function () {\n        var _this = this;\n        this.contextAwareEditableItemService.isItemEditable(this.smarteditComponentId).then(function (isEditable) {\n            _this.isReady = true;\n            _this.message = \"se.cms.contextmenu.shared.component.info.msg\" + (isEditable ? '.editable' : '');\n        });\n    };\n    var _a;\n    SharedComponentButton = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeComponent\"])({\n            templateUrl: 'sharedComponentButtonTemplate.html',\n            inputs: ['smarteditComponentId']\n        }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_a = typeof cmscommons_services__WEBPACK_IMPORTED_MODULE_2__[\"IContextAwareEditableItemService\"] !== \"undefined\" && cmscommons_services__WEBPACK_IMPORTED_MODULE_2__[\"IContextAwareEditableItemService\"]) === \"function\" ? _a : Object])\n    ], /* @ngInject */ SharedComponentButton);\n    return SharedComponentButton;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotShared/slotSharedButton.js\":\n/*!**************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotShared/slotSharedButton.js ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotSharedButtonModule', ['slotSharedServiceModule', 'translationServiceModule', 'smarteditServicesModule', 'seConstantsModule', 'hasOperationPermissionModule'])\n    .controller('slotSharedButtonController', function(slotSharedService, $window, crossFrameEventService, EVENT_OUTER_FRAME_CLICKED) {\n        this.slotSharedFlag = false;\n        this.buttonName = 'slotSharedButton';\n        this.isPopupOpened = false;\n        this.isPopupOpenedPreviousValue = false;\n\n        this.$onInit = function() {\n\n            this.slotAttributes = {\n                smarteditComponentId: this.componentAttributes.smarteditComponentId,\n                contentSlotUuid: this.componentAttributes.smarteditComponentUuid,\n                componentType: this.componentAttributes.smarteditComponentType,\n                catalogVersionUuid: this.componentAttributes.smarteditCatalogVersionUuid\n            };\n\n            slotSharedService.isSlotShared(this.slotId).then(function(result) {\n                this.slotSharedFlag = result;\n            }.bind(this));\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isPopupOpened = false;\n            }.bind(this));\n        };\n\n        this.$doCheck = function() {\n            if (this.isPopupOpenedPreviousValue !== this.isPopupOpened) {\n                this.setRemainOpen({\n                    button: this.buttonName,\n                    remainOpen: this.isPopupOpened\n                });\n                this.isPopupOpenedPreviousValue = this.isPopupOpened;\n            }\n        };\n\n        this.convertToNonSharedSlotAndCloneComponents = function() {\n            slotSharedService.convertSharedSlotToNonSharedSlot(this.slotAttributes, true).then(function() {\n                this.isPopupOpened = false;\n                $window.location.reload();\n            }.bind(this));\n        };\n\n        this.convertToNonSharedSlotAndRemoveComponents = function() {\n            slotSharedService.convertSharedSlotToNonSharedSlot(this.slotAttributes, false).then(function() {\n                this.isPopupOpened = false;\n                $window.location.reload();\n            }.bind(this));\n        };\n\n        this.$onDestroy = function() {\n            this.unregFn();\n        };\n    })\n    .component('slotSharedButton', {\n        templateUrl: 'slotSharedButtonTemplate.html',\n        controller: 'slotSharedButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotId: '@',\n            componentAttributes: '<'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecorator.js\":\n/*!***********************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecorator.js ***!\n  \\***********************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('externalSlotDisabledDecoratorModule', ['slotDisabledDecoratorModule'])\n    .directive('externalSlotDisabledDecorator', function() {\n        return {\n            templateUrl: 'externalSlotDisabledDecoratorTemplate.html',\n            transclude: true,\n            restrict: 'C',\n            controllerAs: 'ctrl',\n            controller: function() {},\n            scope: {},\n            bindToController: {\n                active: '=',\n                componentAttributes: '<'\n            }\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss\":\n/*!****************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss ***!\n  \\****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(/*! !../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\"sourceMap\":true,\"url\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src?{\"config\":{\"path\":\"./smartedit-build/config/\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib?{\"data\":\"@import /\"se-variables/\";\",\"includePaths\":[\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\"]}!./popovers.scss */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecorator.js\":\n/*!*********************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecorator.js ***!\n  \\*********************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('sharedSlotDisabledDecoratorModule', ['slotDisabledDecoratorModule'])\n    .directive('sharedSlotDisabledDecorator', function() {\n        return {\n            templateUrl: 'sharedSlotDisabledDecoratorTemplate.html',\n            transclude: true,\n            restrict: 'C',\n            controllerAs: 'ctrl',\n            controller: function() {},\n            scope: {},\n            bindToController: {\n                active: '=',\n                componentAttributes: '<'\n            }\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledComponent.js\":\n/*!***************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledComponent.js ***!\n  \\***************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotDisabledDecoratorModule', ['yPopoverModule', 'l10nModule', 'cmsSmarteditServicesModule'])\n    .controller('slotDisabledComponentController', function($translate, pageInfoService, catalogService, l10nFilter, cMSModesService) {\n\n        var DEFAULT_DECORATOR_MSG = \"se.cms.sharedslot.decorator.label\";\n        var EXTERNAL_SLOT_DECORATOR_MSG = \"se.cms.externalsharedslot.decorator.label\";\n\n        var DEFAULT_DECORATOR_MSG_VERSIONING_MODE = \"se.cms.versioning.shared.slot.from.label\";\n        var EXTERNAL_SLOT_DECORATOR_MSG_VERSIONING_MODE = \"se.cms.versioning.global.shared.slot.from.label\";\n\n        var ICONS_CLASSES = {\n            GLOBE: 'hyicon-globe',\n            LOCK: 'hyicon-lock',\n            HOVERED: 'hyicon-linked'\n        };\n\n        this.$onInit = function() {\n\n            this.isReady = false;\n            this._checkIfSlotIsInherited();\n            this._getSourceCatalogName();\n            this._isVersioningPerspectiveActive();\n        };\n\n        this._checkIfSlotIsInherited = function() {\n            var componentCatalogVersion = this.componentAttributes.smarteditCatalogVersionUuid;\n            pageInfoService.getCatalogVersionUUIDFromPage().then(function(uuid) {\n                this.isExternalSlot = componentCatalogVersion !== uuid;\n            }.bind(this));\n        };\n\n        this._getSourceCatalogName = function() {\n            var catalogVersionUUID = this.componentAttributes.smarteditCatalogVersionUuid;\n            catalogService.getCatalogVersionByUuid(catalogVersionUUID).then(function(catalogVersion) {\n                this.catalogName = catalogVersion.catalogName;\n            }.bind(this));\n        };\n\n        this._isVersioningPerspectiveActive = function() {\n            cMSModesService.isVersioningPerspectiveActive().then(function(isActive) {\n                this.isVersioningPerspective = isActive;\n                this.isReady = true;\n            }.bind(this));\n        };\n\n        this.getPopoverMessage = function() {\n\n            var msgToLocalize;\n            if (this.isVersioningPerspective) {\n                msgToLocalize = (this.isExternalSlot) ? EXTERNAL_SLOT_DECORATOR_MSG_VERSIONING_MODE : DEFAULT_DECORATOR_MSG_VERSIONING_MODE;\n            } else {\n                msgToLocalize = (this.isExternalSlot) ? EXTERNAL_SLOT_DECORATOR_MSG : DEFAULT_DECORATOR_MSG;\n            }\n\n            var msgParams = {\n                catalogName: l10nFilter(this.catalogName),\n                slotId: this.componentAttributes.smarteditComponentId\n            };\n\n            return $translate.instant(msgToLocalize, msgParams);\n        };\n\n        this.getSlotIconClass = function() {\n            var iconClass = \"\";\n            if (this.active) {\n                iconClass = (this.isExternalSlot) ? ICONS_CLASSES.GLOBE : ICONS_CLASSES.HOVERED;\n            } else if (this.isExternalSlot !== undefined) {\n                iconClass = (this.isExternalSlot) ? ICONS_CLASSES.GLOBE : ICONS_CLASSES.HOVERED;\n            }\n\n            return iconClass;\n        };\n\n        this.getOuterSlotClass = function() {\n            return this.getSlotIconClass() === ICONS_CLASSES.GLOBE ? 'disabled-shared-slot__icon--outer-globe' : '';\n        }.bind(this);\n    })\n    .component('slotDisabledComponent', {\n        templateUrl: 'slotDisabledTemplate.html',\n        controller: 'slotDisabledComponentController',\n        controllerAs: 'ctrl',\n        bindings: {\n            active: '=',\n            componentAttributes: '<'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotUnshared/slotUnsharedButton.js\":\n/*!******************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotUnshared/slotUnsharedButton.js ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotUnsharedButtonModule', ['slotUnsharedServiceModule', 'translationServiceModule', 'confirmationModalServiceModule', 'smarteditServicesModule', 'seConstantsModule', 'hasOperationPermissionModule'])\n    .controller('slotUnsharedButtonController', function($scope, $window, EVENT_OUTER_FRAME_CLICKED, slotUnsharedService, confirmationModalService, crossFrameEventService) {\n\n        this.revertToSharedSlot = function() {\n\n            var message = {\n                title: 'se.cms.slot.unshared.revert.to.shared.title',\n                templateUrl: 'revertToSharedSlotConfirmationTemplate.html'\n            };\n\n            confirmationModalService.confirm(message).then(function() {\n                slotUnsharedService.revertToSharedSlot(this.slotUuid).then(function() {\n                    this.isPopupOpened = false;\n                    $window.location.reload();\n                }.bind(this));\n            }.bind(this));\n\n        };\n\n        this.$onInit = function() {\n\n            this.slotUnsharedFlag = false;\n            this.buttonName = 'slotUnsharedButton';\n            this.isPopupOpened = false;\n            this.isPopupOpenedOldValue = this.isPopupOpened;\n\n            slotUnsharedService.isSlotUnshared(this.slotUid).then(function(result) {\n                this.slotUnsharedFlag = result;\n            }.bind(this));\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isPopupOpened = false;\n            }.bind(this));\n        };\n\n        this.$doCheck = function() {\n\n            if (this.isPopupOpenedOldValue !== this.isPopupOpened) {\n                this.isPopupOpenedOldValue = this.isPopupOpened;\n                this.setRemainOpen({\n                    button: this.buttonName,\n                    remainOpen: this.isPopupOpened\n                });\n            }\n\n        };\n\n        this.$onDestroy = function() {\n            this.unregFn();\n        };\n\n    })\n    .component('slotUnsharedButton', {\n        templateUrl: 'slotUnsharedButtonTemplate.html',\n        controller: 'slotUnsharedButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotUuid: '@',\n            slotUid: '@'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js\":\n/*!*****************************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js ***!\n  \\*****************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name hiddenComponentMenuModule\n * @description\n *\n * This module contains the component used to display a menu for hidden components. \n */\nangular.module('hiddenComponentMenuModule', ['yPopupOverlayModule', 'yLoDashModule'])\n    /**\n     * @ngdoc object\n     * @name hiddenComponentMenuModule.HIDDEN_COMPONENT_OPENED_EVENT\n     *\n     * @description\n     * The name of the event triggered whenever a menu is opened on a hidden component. \n     */\n    .constant('HIDDEN_COMPONENT_OPENED_EVENT', 'HIDDEN_COMPONENT_OPENED_EVENT')\n    .controller('hiddenComponentMenuController', function(lodash, hiddenComponentMenuService, systemEventService, componentHandlerService, HIDDEN_COMPONENT_OPENED_EVENT, CONTENT_SLOT_TYPE) {\n\n        // --------------------------------------------------------------------------------------\n        // Lifecycle methods\n        // --------------------------------------------------------------------------------------\n        this.$onInit = function() {\n\n            var slot = componentHandlerService.getOriginalComponent(this.slotId, CONTENT_SLOT_TYPE);\n            this.slotUuid = componentHandlerService.getUuid(slot);\n\n            this.isMenuOpen = false;\n\n            hiddenComponentMenuService.getItemsForHiddenComponent(this.component, this.slotId).then(function(hiddenComponentMenu) {\n                this.configuration = lodash.cloneDeep(hiddenComponentMenu.configuration);\n                this.configuration.slotUuid = this.slotUuid;\n                this.menuItems = lodash.cloneDeep(hiddenComponentMenu.buttons);\n            }.bind(this));\n\n            this.unRegRemoveComponentOpenedEvent = systemEventService.subscribe(HIDDEN_COMPONENT_OPENED_EVENT, this.onOtherMenuOpening);\n        };\n\n        this.$onDestroy = function() {\n            this.unRegRemoveComponentOpenedEvent();\n        };\n\n        this.popupConfig = {\n            templateUrl: 'hiddenComponentMenuItemsTemplate.html',\n            halign: 'left',\n            valign: 'bottom'\n        };\n\n        // --------------------------------------------------------------------------------------\n        // Event Handlers\n        // --------------------------------------------------------------------------------------\n        this.onButtonClick = function($event) {\n            $event.stopPropagation();\n\n            this.isMenuOpen = !this.isMenuOpen;\n            if (this.isMenuOpen) {\n                systemEventService.publishAsync(HIDDEN_COMPONENT_OPENED_EVENT, {\n                    componentId: this.component.uid,\n                    slotId: this.slotId\n                });\n            }\n        }.bind(this);\n\n        this.onMenuHide = function() {\n            this.isMenuOpen = false;\n        }.bind(this);\n\n        this.onOtherMenuOpening = function(eventId, eventData) {\n            var isSameComponent = this.component.uid === eventData.componentId;\n            var isSameSlot = this.slotId === eventData.slotId;\n\n            if (!isSameComponent || !isSameSlot) {\n                this.isMenuOpen = false;\n            }\n        }.bind(this);\n\n        this.executeItemCallback = function(item, $event) {\n            if (item.action) {\n                item.action.callback(this.configuration, $event);\n                this.isMenuOpen = false;\n            }\n        };\n    })\n    /**\n     * @ngdoc directive\n     * @name hiddenComponentMenuModule.directive:hiddenComponentMenu\n     *\n     * @description\n     * The hidden component menu is a component used by the slot contextual menu to display a menu on hidden components.\n     */\n    .component('hiddenComponentMenu', {\n        templateUrl: 'hiddenComponentMenuTemplate.html',\n        transclude: false,\n        controller: 'hiddenComponentMenuController',\n        controllerAs: 'ctrl',\n        bindings: {\n            component: '<',\n            slotId: '<'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityButton.js\":\n/*!**********************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityButton.js ***!\n  \\**********************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotVisibilityButtonModule\n * @description\n *\n * The slot visibility button module provides a directive and controller to manage the button within the slot contextual menu \n * and the hidden component list, which is also part of the dropdown menu associated with the directive's template.     \n */\nangular.module('slotVisibilityButtonModule', ['cmssmarteditTemplates', 'slotVisibilityServiceModule', 'slotVisibilityComponentModule', 'seConstantsModule'])\n\n    /**\n     * @ngdoc controller\n     * @name slotVisibilityButtonModule.controller:slotVisibilityButtonController\n     *\n     * @description\n     * The slot visibility button controller is responsible for enabling and disabling the hidden components button, \n     * as well as displaying the hidden components list. It also provides functions to open and close the hidden component list.\n     *\n     * @param {Object} slotVisibilityService slot visibility service instance\n     * @param {Object} $scope current scope instance\n     */\n    .controller('slotVisibilityButtonController', function(\n        slotVisibilityService,\n        $scope,\n        sharedDataService,\n        $translate,\n        crossFrameEventService,\n        EVENT_OUTER_FRAME_CLICKED\n    ) {\n        this.buttonName = 'slotVisibilityButton';\n        this.eyeOnImageClass = 'sap-icon--show';\n        this.eyeOffImageClass = 'sap-icon--hide';\n        this.eyeImageClass = this.eyeOffImageClass;\n        this.buttonVisible = false;\n        this.hiddenComponents = [];\n        this.isComponentListOpened = false;\n\n        $scope.$watch('ctrl.isComponentListOpened', function(newValue, oldValue) {\n            this.eyeImageClass = newValue ? this.eyeOnImageClass : this.eyeOffImageClass;\n\n            if (newValue !== oldValue) {\n                this.setRemainOpen({\n                    button: this.buttonName,\n                    remainOpen: this.isComponentListOpened\n                });\n            }\n        }.bind(this));\n\n        this.markExternalComponents = function(experience, hiddenComponents) {\n            hiddenComponents.forEach(function(hiddenComponent) {\n                hiddenComponent.isExternal = hiddenComponent.catalogVersion !== experience.pageContext.catalogVersionUuid;\n            });\n        };\n\n        this.getTemplateInfoForExternalComponent = function() {\n            return \"<div>\" + $translate.instant('se.cms.slotvisibility.external.component') + \"</div>\";\n        };\n\n        this.onInsideClick = function($event) {\n            $event.stopPropagation();\n        };\n\n        this.$onInit = function() {\n            slotVisibilityService.getHiddenComponents(this.slotId).then(function(hiddenComponents) {\n                sharedDataService.get('experience').then(function(experience) {\n                    this.hiddenComponents = hiddenComponents;\n                    this.markExternalComponents(experience, this.hiddenComponents);\n                    this.hiddenComponentCount = hiddenComponents.length;\n                    if (this.hiddenComponentCount > 0) {\n                        this.buttonVisible = true;\n                    }\n                }.bind(this));\n            }.bind(this));\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isComponentListOpened = false;\n            }.bind(this));\n        };\n\n        this.$onDestroy = function() {\n            this.unregFn();\n        };\n\n    })\n    /**\n     * @ngdoc directive\n     * @name slotVisibilityButtonModule.directive:slotVisibilityButton\n     *\n     * @description\n     * The slot visibility button component is used inside the slot contextual menu and provides a button \n     * image that displays the number of hidden components, as well as a dropdown menu of hidden component.\n     *\n     * The directive expects that the parent, the slot contextual menu, has a setRemainOpen function and a \n     * slotId value on the parent's scope. setRemainOpen is used to send a command to the parent to leave \n     * the slot contextual menu open.\n     */\n    .component('slotVisibilityButton', {\n        templateUrl: 'slotVisibilityButtonTemplate.html',\n        transclude: true,\n        controller: 'slotVisibilityButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotId: '@',\n            initButton: '@'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponent.js\":\n/*!*************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponent.js ***!\n  \\*************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotVisibilityComponentModule\n *\n * @description\n * The slot visibility component module provides a directive and controller to display the hidden components of a specified content slot.\n *\n * @requires componentVisibilityAlertServiceModule\n * @requires editorModalServiceModule\n */\nangular.module('slotVisibilityComponentModule', [\n        \"componentVisibilityAlertServiceModule\",\n        \"cmsSmarteditServicesModule\",\n        \"catalogVersionPermissionModule\",\n        \"hiddenComponentMenuModule\"\n    ])\n\n    .controller('slotVisibilityComponentController', function(\n        $injector,\n        componentVisibilityAlertService,\n        editorModalService,\n        catalogService,\n        catalogVersionPermissionService,\n        componentSharedService,\n        domain\n    ) {\n        this.openEditorModal = function() {\n            editorModalService.openAndRerenderSlot(\n                this.component.typeCode,\n                this.component.uuid,\n                \"visible\"\n            ).then(function(item) {\n                componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                    itemId: item.uuid,\n                    itemType: item.itemtype,\n                    catalogVersion: item.catalogVersion,\n                    restricted: item.restricted,\n                    slotId: this.slotId,\n                    visible: item.visible\n                });\n            }.bind(this));\n        };\n\n        this.$onInit = function() {\n            this.isReady = false;\n            this.imageRoot = domain + '/cmssmartedit/images';\n            componentSharedService.isComponentShared(this.component).then(function(isShared) {\n                this.isSharedComponent = isShared;\n            }.bind(this));\n\n            catalogService.getCatalogVersionByUuid(this.component.catalogVersion).then(function(catalogVersionObj) {\n                catalogVersionPermissionService.hasWritePermission(catalogVersionObj.catalogId, catalogVersionObj.version).then(function(isWritable) {\n\n                    this.readOnly = !isWritable || this.component.isExternal;\n                    this.componentVisibilitySwitch = this.component.visible ? 'se.cms.component.visibility.status.on' : 'se.cms.component.visibility.status.off';\n                    this.componentRestrictionsCount = '(' + (this.component.restrictions ? this.component.restrictions.length : 0) + ')';\n                    this.isReady = true;\n\n                }.bind(this));\n            }.bind(this));\n        };\n    })\n\n    /**\n     * @ngdoc directive\n     * @name slotVisibilityComponentModule.directive:slotVisibilityComponent\n     *\n     * @description\n     * The slot visibility component directive is used to display information about a specified hidden component.\n     * It receives the component on its scope and it binds it to its own controller.\n     */\n    .component('slotVisibilityComponent', {\n        templateUrl: 'slotVisibilityComponentTemplate.html',\n        transclude: false,\n        controller: 'slotVisibilityComponentController',\n        controllerAs: 'ctrl',\n        bindings: {\n            component: '=',\n            slotId: '@',\n            componentId: '@'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SlotSynchronizationPanel.ts\":\n/*!*****************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SlotSynchronizationPanel.ts ***!\n  \\*****************************************************************************************************/\n/*! exports provided: SlotSynchronizationPanel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotSynchronizationPanel\", function() { return SlotSynchronizationPanel; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons */ \"./jsTarget/web/features/cmscommons/index.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nwindow.__smartedit__.addDecoratorPayload('SeComponent', 'SlotSynchronizationPanel', {\n    templateUrl: 'slotSynchronizationPanelTemplate.html',\n    inputs: ['slotId']\n});\nvar SlotSynchronizationPanel = /** @class */ (function () {\n    function SlotSynchronizationPanel(pageService, pageInfoService, slotSynchronizationService, pageContentSlotsService, $translate) {\n        var _this = this;\n        this.pageService = pageService;\n        this.pageInfoService = pageInfoService;\n        this.slotSynchronizationService = slotSynchronizationService;\n        this.pageContentSlotsService = pageContentSlotsService;\n        this.$translate = $translate;\n        this.getSyncStatus = function () {\n            return _this.pageInfoService.getPageUID().then(function (pageId) {\n                return _this.slotSynchronizationService.getSyncStatus(pageId, _this.slotId).then(function (syncStatus) {\n                    return _this.isSyncDisallowed().then(function (isDisallowed) {\n                        if (isDisallowed) {\n                            _this.disableSync();\n                        }\n                        return syncStatus;\n                    });\n                });\n            });\n        };\n        this.performSync = function (itemsToSync) {\n            return _this.slotSynchronizationService.performSync(itemsToSync);\n        };\n    }\n    SlotSynchronizationPanel.prototype.getApi = function ($api) {\n        this.synchronizationPanelApi = $api;\n    };\n    SlotSynchronizationPanel.prototype.isSyncDisallowed = function () {\n        var _this = this;\n        return this.isPageSlot().then(function (isPageSlot) {\n            return _this.isPageApproved().then(function (isPageApproved) {\n                return isPageSlot && !isPageApproved;\n            });\n        });\n    };\n    SlotSynchronizationPanel.prototype.isPageSlot = function () {\n        return this.pageContentSlotsService.getSlotStatus(this.slotId).then(function (slotStatus) {\n            return slotStatus === cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"SlotStatus\"].PAGE || slotStatus === cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"SlotStatus\"].OVERRIDE;\n        });\n    };\n    SlotSynchronizationPanel.prototype.isPageApproved = function () {\n        var _this = this;\n        return this.pageInfoService.getPageUUID().then(function (pageUuid) {\n            return _this.pageService.isPageApproved(pageUuid);\n        });\n    };\n    SlotSynchronizationPanel.prototype.disableSync = function () {\n        this.synchronizationPanelApi.setMessage({\n            type: smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IAlertServiceType\"].WARNING,\n            description: this.$translate.instant('se.cms.synchronization.slot.disabled.msg')\n        });\n        this.synchronizationPanelApi.disableItemList(true);\n    };\n    var _a, _b, _c, _d;\n    SlotSynchronizationPanel = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeComponent\"])({\n            templateUrl: 'slotSynchronizationPanelTemplate.html',\n            inputs: ['slotId']\n        }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_a = typeof cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"IPageService\"] !== \"undefined\" && cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"IPageService\"]) === \"function\" ? _a : Object, typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IPageInfoService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IPageInfoService\"]) === \"function\" ? _b : Object, Object, Object, typeof (_d = typeof angular !== \"undefined\" && (_c = angular.translate) !== void 0 && _c.ITranslateService) === \"function\" ? _d : Object])\n    ], /* @ngInject */ SlotSynchronizationPanel);\n    return SlotSynchronizationPanel;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecorator.ts\":\n/*!***************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecorator.ts ***!\n  \\***************************************************************************************************/\n/*! exports provided: SyncIndicatorDecorator */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SyncIndicatorDecorator\", function() { return SyncIndicatorDecorator; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nwindow.__smartedit__.addDecoratorPayload('Component', 'SyncIndicatorDecorator', {\n    selector: 'sync-indicator',\n    template: __webpack_require__(/*! ./SyncIndicatorDecoratorTemplate.html */ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html\"),\n});\nvar SyncIndicatorDecorator = /** @class */ (function (_super) {\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](/* @ngInject */ SyncIndicatorDecorator, _super);\n    function SyncIndicatorDecorator($q, catalogService, slotSynchronizationService, crossFrameEventService, pageInfoService, SYNCHRONIZATION_STATUSES, SYNCHRONIZATION_POLLING) {\n        var _this = _super.call(this) || this;\n        _this.$q = $q;\n        _this.catalogService = catalogService;\n        _this.slotSynchronizationService = slotSynchronizationService;\n        _this.crossFrameEventService = crossFrameEventService;\n        _this.pageInfoService = pageInfoService;\n        _this.SYNCHRONIZATION_STATUSES = SYNCHRONIZATION_STATUSES;\n        _this.SYNCHRONIZATION_POLLING = SYNCHRONIZATION_POLLING;\n        _this.isVersionNonActive = false;\n        return _this;\n    }\n    SyncIndicatorDecorator.prototype.ngOnInit = function () {\n        var _this = this;\n        // initial sync status is set to unavailable until the first fetch\n        this.syncStatus = {\n            status: this.SYNCHRONIZATION_STATUSES.UNAVAILABLE\n        };\n        this.pageInfoService.getPageUUID().then(function (pageUUID) {\n            _this.pageUUID = pageUUID;\n            _this.unRegisterSyncPolling = _this.crossFrameEventService.subscribe(_this.SYNCHRONIZATION_POLLING.FAST_FETCH, _this.fetchSyncStatus.bind(_this));\n            _this.catalogService.isContentCatalogVersionNonActive().then(function (isNonActive) {\n                _this.isVersionNonActive = isNonActive;\n                if (_this.isVersionNonActive) {\n                    _this.fetchSyncStatus();\n                }\n            });\n        });\n    };\n    SyncIndicatorDecorator.prototype.ngOnDestroy = function () {\n        if (this.unRegisterSyncPolling) {\n            this.unRegisterSyncPolling();\n        }\n    };\n    SyncIndicatorDecorator.prototype.fetchSyncStatus = function () {\n        var _this = this;\n        return this.isVersionNonActive ? this.slotSynchronizationService.getSyncStatus(this.pageUUID, this.componentAttributes.smarteditComponentId).then(function (response) {\n            _this.syncStatus = response;\n        }, function () {\n            _this.syncStatus.status = _this.SYNCHRONIZATION_STATUSES.UNAVAILABLE;\n        }) : this.$q.when();\n    };\n    var _a, _b, _c, _d, _e, _f;\n    SyncIndicatorDecorator = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"SeDecorator\"])(),\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n            selector: 'sync-indicator',\n            template: __webpack_require__(/*! ./SyncIndicatorDecoratorTemplate.html */ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html\"),\n        }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"$q\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"catalogService\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"slotSynchronizationService\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"crossFrameEventService\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"pageInfoService\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"SYNCHRONIZATION_STATUSES\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(\"SYNCHRONIZATION_POLLING\")),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_a = typeof angular !== \"undefined\" && angular.IQService) === \"function\" ? _a : Object, typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"ICatalogService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"ICatalogService\"]) === \"function\" ? _b : Object, Object, typeof (_c = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"CrossFrameEventService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"CrossFrameEventService\"]) === \"function\" ? _c : Object, typeof (_d = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"IPageInfoService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"IPageInfoService\"]) === \"function\" ? _d : Object, typeof (_e = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"TypedMap\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"TypedMap\"]) === \"function\" ? _e : Object, typeof (_f = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"TypedMap\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"TypedMap\"]) === \"function\" ? _f : Object])\n    ], /* @ngInject */ SyncIndicatorDecorator);\n    return SyncIndicatorDecorator;\n}(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"AbstractDecorator\"]));\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html\":\n/*!*************************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html ***!\n  \\*************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"sync-indicator-decorator\\\"\\n    [ngClass]=\\\"syncStatus.status\\\"\\n    [attr.sync-status]=\\\"syncStatus.status\\\">\\n    <ng-content class=\\\"se-wrapper-data\\\"></ng-content>\\n</div>\"\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/slotSyncButton.js\":\n/*!*******************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/components/synchronize/slots/slotSyncButton.js ***!\n  \\*******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotSyncButtonModule', ['slotSynchronizationServiceModule', 'seConstantsModule', 'cmsComponentsModule'])\n    .controller('slotSyncButtonController', function($scope, $translate, SYNCHRONIZATION_POLLING, SYNCHRONIZATION_STATUSES, EVENT_OUTER_FRAME_CLICKED, catalogService, slotSynchronizationService, pageInfoService, crossFrameEventService) {\n\n        $scope.$watch('ctrl.isPopupOpened', function() {\n            this.setRemainOpen({\n                button: this.buttonName,\n                remainOpen: this.isPopupOpened\n            });\n        }.bind(this));\n\n        this.statusIsInSync = function(syncStatus) {\n            return syncStatus.status && syncStatus.status === SYNCHRONIZATION_STATUSES.IN_SYNC;\n        };\n\n        this.getSyncStatus = function() {\n            pageInfoService.getPageUUID().then(function(pageUUID) {\n                slotSynchronizationService.getSyncStatus(pageUUID, this.slotId).then(function(syncStatus) {\n                    this.isSlotInSync = this.statusIsInSync(syncStatus);\n                    this.newPageIsNotSynchronized = !syncStatus.lastSyncStatus;\n                    this.ready = true;\n                }.bind(this));\n            }.bind(this));\n        }.bind(this);\n\n        this.updateStatus = function(evenId, syncStatus) {\n            var slotSyncStatus = (syncStatus.selectedDependencies || []).concat(syncStatus.sharedDependencies || []).find(function(slot) {\n                return slot.itemId === this.slotId;\n            }.bind(this)) || {};\n            this.isSlotInSync = this.statusIsInSync(slotSyncStatus);\n        };\n\n        var updateStatusCallback = this.getSyncStatus;\n\n        this.$onInit = function() {\n\n            this.buttonName = 'slotSyncButton';\n            this.isPopupOpened = false;\n            this.newPageIsNotSynchronized = false;\n            this.ready = false;\n\n            this.isSlotInSync = true;\n            this.getSyncStatus();\n            this.unRegisterSyncPolling = crossFrameEventService.subscribe(SYNCHRONIZATION_POLLING.FAST_FETCH, updateStatusCallback);\n            this.newPageIsNotSynchronizedTemplate = \"<div class='se-popover--inner-content'>\" + $translate.instant(\"se.cms.slot.sync.from.page.level\") + \"</div>\";\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isPopupOpened = false;\n            }.bind(this));\n        };\n\n        this.$onDestroy = function() {\n            this.unRegisterSyncPolling();\n            this.unregFn();\n        };\n\n    })\n    .component('slotSyncButton', {\n        templateUrl: 'slotSyncButtonTemplate.html',\n        controller: 'slotSyncButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotId: '@'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/dao/PageContentSlotsComponentsRestServiceInner.ts\":\n/*!**********************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/dao/PageContentSlotsComponentsRestServiceInner.ts ***!\n  \\**********************************************************************************************/\n/*! exports provided: PageContentSlotsComponentsRestService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageContentSlotsComponentsRestService\", function() { return PageContentSlotsComponentsRestService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons_dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService.ts\");\n/* harmony import */ var cmscommons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cmscommons */ \"./jsTarget/web/features/cmscommons/index.ts\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var cmscommons_dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cmscommons/dao/cmswebservices/sites/CmsitemsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n\nvar PageContentSlotsComponentsRestService = /** @class */ (function (_super) {\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](/* @ngInject */ PageContentSlotsComponentsRestService, _super);\n    function PageContentSlotsComponentsRestService(restServiceFactory, pageInfoService, cmsitemsRestService, lodash, PAGE_CONTEXT_SITE_ID, PAGE_CONTEXT_CATALOG, PAGE_CONTEXT_CATALOG_VERSION) {\n        var _this = _super.call(this) || this;\n        _this.pageInfoService = pageInfoService;\n        _this.cmsitemsRestService = cmsitemsRestService;\n        _this.lodash = lodash;\n        var contentSlotContainerResourceURI = \"/cmswebservices/v1/sites/\" + PAGE_CONTEXT_SITE_ID + \"/catalogs/\" + PAGE_CONTEXT_CATALOG + \"/versions/\" + PAGE_CONTEXT_CATALOG_VERSION + \"/pagescontentslotscomponents?pageId=:pageId\";\n        _this.pagesContentSlotsComponentsRestService = restServiceFactory.get(contentSlotContainerResourceURI);\n        return _this;\n    }\n    PageContentSlotsComponentsRestService.prototype.clearCache = function () {\n        return;\n    };\n    PageContentSlotsComponentsRestService.prototype.getComponentsForSlot = function (slotUuid) {\n        var _this = this;\n        return this.pageInfoService.getPageUID().then(function (pageUID) {\n            return _this.getSlotsToComponentsMapForPageUid(pageUID).then(function (slotsToComponentsMap) {\n                return slotsToComponentsMap[slotUuid] || [];\n            });\n        });\n    };\n    /**\n     * @description\n     * Returns a list of pageContentSlotsComponents associated to a page.\n     *\n     * @param {string} pageUid The uid of the page to retrieve the content slots to components map.\n     * @return {Promise} A promise that resolves to the pagesContentSlotsComponents for the page in context.\n     */\n    PageContentSlotsComponentsRestService.prototype.getSlotsToComponentsMapForPageUid = function (pageUid) {\n        var _this = this;\n        return this.getCachedSlotsToComponentsMapForPageUid(pageUid).then(function (response) {\n            return _this.lodash.cloneDeep(response);\n        });\n    };\n    PageContentSlotsComponentsRestService.prototype.getCachedSlotsToComponentsMapForPageUid = function (pageUid) {\n        var _this = this;\n        return this.pagesContentSlotsComponentsRestService.get({\n            pageId: pageUid\n        }).then(function (_a) {\n            var pageContentSlotComponentList = _a.pageContentSlotComponentList;\n            var componentUuids = pageContentSlotComponentList.map(function (pageContentSlotComponent) { return pageContentSlotComponent.componentUuid; });\n            componentUuids = Array.from(new Set(componentUuids));\n            return _this.cmsitemsRestService.getByIds(componentUuids).then(function (components) {\n                // load all components as ComponentUuid-Component map\n                var allComponentsMap = (components.response || []).reduce(function (map, component) {\n                    map[component.uuid] = component;\n                    return map;\n                }, {});\n                // load all components as SlotUuid-Component[] map\n                var allSlotsToComponentsMap = pageContentSlotComponentList.reduce(function (map, pageContentSlotComponent) {\n                    map[pageContentSlotComponent.slotId] = map[pageContentSlotComponent.slotId] || [];\n                    if (allComponentsMap[pageContentSlotComponent.componentUuid]) {\n                        map[pageContentSlotComponent.slotId].push(allComponentsMap[pageContentSlotComponent.componentUuid]);\n                    }\n                    return map;\n                }, {});\n                return allSlotsToComponentsMap;\n            });\n        });\n    };\n    var _a, _b, _c, _d;\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"InvalidateCache\"])(cmscommons__WEBPACK_IMPORTED_MODULE_3__[\"slotEvictionTag\"]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", []),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", void 0)\n    ], PageContentSlotsComponentsRestService.prototype, \"clearCache\", null);\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"Cached\"])({ actions: [smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"rarelyChangingContent\"]], tags: [cmscommons_dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_5__[\"cmsitemsEvictionTag\"], smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"pageChangeEvictionTag\"], cmscommons__WEBPACK_IMPORTED_MODULE_3__[\"slotEvictionTag\"]] }),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", Function),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [String]),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:returntype\", typeof (_a = typeof angular !== \"undefined\" && angular.IPromise) === \"function\" ? _a : Object)\n    ], PageContentSlotsComponentsRestService.prototype, \"getCachedSlotsToComponentsMapForPageUid\", null);\n    PageContentSlotsComponentsRestService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"GatewayProxied\"])('clearCache', 'getSlotsToComponentsMapForPageUid'),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"]) === \"function\" ? _b : Object, typeof (_c = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IPageInfoService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IPageInfoService\"]) === \"function\" ? _c : Object, Object, typeof (_d = typeof lodash__WEBPACK_IMPORTED_MODULE_4__ !== \"undefined\" && lodash__WEBPACK_IMPORTED_MODULE_4__[\"LoDashStatic\"]) === \"function\" ? _d : Object, String, String, String])\n    ], /* @ngInject */ PageContentSlotsComponentsRestService);\n    return PageContentSlotsComponentsRestService;\n}(cmscommons_dao_cmswebservices_IPageContentSlotsComponentsRestService__WEBPACK_IMPORTED_MODULE_2__[\"IPageContentSlotsComponentsRestService\"]));\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/forcedImports.ts\":\n/*!*************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/forcedImports.ts ***!\n  \\*************************************************************/\n/*! exports provided: doImport */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"doImport\", function() { return doImport; });\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nfunction importAll(requireContext) {\n    requireContext\n        .keys()\n        .forEach(function (key) {\n        requireContext(key);\n    });\n}\nfunction doImport() {\n    importAll(__webpack_require__(\"./jsTarget/web/features/cmssmartedit sync recursive \\\\.js$\"));\n    importAll(__webpack_require__(\"./jsTarget/web/features/cmscommons sync recursive \\\\.js$\"));\n}\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/index.ts\":\n/*!*****************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/index.ts ***!\n  \\*****************************************************/\n/*! exports provided: Cmssmartedit, CmssmarteditModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _legacyCmssmartedit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legacyCmssmartedit */ \"./jsTarget/web/features/cmssmartedit/legacyCmssmartedit.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cmssmartedit\", function() { return _legacyCmssmartedit__WEBPACK_IMPORTED_MODULE_0__[\"Cmssmartedit\"]; });\n\n/* harmony import */ var _cmssmartedit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cmssmartedit */ \"./jsTarget/web/features/cmssmartedit/cmssmartedit.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmssmarteditModule\", function() { return _cmssmartedit__WEBPACK_IMPORTED_MODULE_1__[\"CmssmarteditModule\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/legacyCmssmartedit.ts\":\n/*!******************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/legacyCmssmartedit.ts ***!\n  \\******************************************************************/\n/*! exports provided: Cmssmartedit */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cmssmartedit\", function() { return Cmssmartedit; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _forcedImports__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./forcedImports */ \"./jsTarget/web/features/cmssmartedit/forcedImports.ts\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var cmssmartedit_services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cmssmartedit/services */ \"./jsTarget/web/features/cmssmartedit/services/index.ts\");\n/* harmony import */ var cmssmartedit_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cmssmartedit/components */ \"./jsTarget/web/features/cmssmartedit/components/index.ts\");\n/* harmony import */ var _components_slotSharedDisabled_popovers_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/slotSharedDisabled/popovers.scss */ \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/popovers.scss\");\n/* harmony import */ var _components_slotSharedDisabled_popovers_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_slotSharedDisabled_popovers_scss__WEBPACK_IMPORTED_MODULE_5__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nObject(_forcedImports__WEBPACK_IMPORTED_MODULE_1__[\"doImport\"])();\n\n\n\n\nvar Cmssmartedit = /** @class */ (function () {\n    function Cmssmartedit() {\n    }\n    Cmssmartedit = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"SeModule\"])({\n            imports: [\n                cmssmartedit_services__WEBPACK_IMPORTED_MODULE_3__[\"CmsSmarteditServicesModule\"],\n                cmssmartedit_components__WEBPACK_IMPORTED_MODULE_4__[\"CmsComponentsModule\"],\n                'cmsResourceLocationsModule',\n                'resourceLocationsModule',\n                'decoratorServiceModule',\n                'removeComponentServiceModule',\n                'experienceInterceptorModule',\n                'editorEnablerServiceModule',\n                'alertServiceModule',\n                'translationServiceModule',\n                'slotVisibilityButtonModule',\n                'slotVisibilityServiceModule',\n                'cmssmarteditTemplates',\n                'cmscommonsTemplates',\n                'smarteditServicesModule',\n                'slotSharedButtonModule',\n                'cmsDragAndDropServiceModule',\n                'slotSyncButtonModule',\n                'confirmationModalServiceModule',\n                'sharedSlotDisabledDecoratorModule',\n                'externalSlotDisabledDecoratorModule',\n                'slotRestrictionsServiceModule',\n                'slotSharedServiceModule',\n                'contextualMenuDropdownServiceModule',\n                'externalComponentDecoratorModule',\n                'externalComponentButtonModule',\n                'componentEditingFacadeModule',\n                'slotUnsharedButtonModule',\n                'componentInfoServiceModule'\n            ],\n            initialize: function ($rootScope, $q, $translate, alertService, assetsService, cmsDragAndDropService, componentHandlerService, pageInfoService, confirmationModalService, contextualMenuService, decoratorService, editorEnablerService, featureService, removeComponentService, slotRestrictionsService, slotSharedService, slotVisibilityService, componentEditingFacade, cmsitemsRestService, componentInfoService, componentSharedService, crossFrameEventService, EVENT_SMARTEDIT_COMPONENT_UPDATED, typePermissionsRestService) {\n                'ngInject';\n                editorEnablerService.enableForComponents(['^((?!Slot).)*$']);\n                decoratorService.addMappings({\n                    '^((?!Slot).)*$': ['se.contextualMenu', 'externalComponentDecorator'],\n                    '^.*Slot$': ['se.slotContextualMenu', 'se.basicSlotContextualMenu', 'syncIndicator', 'sharedSlotDisabledDecorator', 'externalSlotDisabledDecorator']\n                });\n                featureService.addContextualMenuButton({\n                    key: 'externalcomponentbutton',\n                    priority: 100,\n                    nameI18nKey: 'se.cms.contextmenu.title.externalcomponent',\n                    i18nKey: 'se.cms.contextmenu.title.externalcomponentbutton',\n                    regexpKeys: ['^((?!Slot).)*$'],\n                    condition: function (configuration) {\n                        var slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\n                        return slotRestrictionsService.isSlotEditable(slotId).then(function (isSlotEditable) {\n                            if (!isSlotEditable) {\n                                return false;\n                            }\n                            var smarteditCatalogVersionUuid = configuration.componentAttributes && configuration.componentAttributes.smarteditCatalogVersionUuid;\n                            if (smarteditCatalogVersionUuid) {\n                                return pageInfoService.getCatalogVersionUUIDFromPage().then(function (uuid) {\n                                    return smarteditCatalogVersionUuid !== uuid;\n                                });\n                            }\n                            return componentHandlerService.isExternalComponent(configuration.componentId, configuration.componentType);\n                        });\n                    },\n                    action: {\n                        template: '<external-component-button data-catalog-version-uuid=\"ctrl.componentAttributes.smarteditCatalogVersionUuid\"></external-component-button>'\n                    },\n                    displayClass: 'externalcomponentbutton',\n                    displayIconClass: 'hyicon hyicon-globe',\n                    displaySmallIconClass: 'hyicon hyicon-globe'\n                });\n                featureService.addContextualMenuButton({\n                    key: 'se.cms.dragandropbutton',\n                    priority: 200,\n                    nameI18nKey: 'se.cms.contextmenu.title.dragndrop',\n                    i18nKey: 'se.cms.contextmenu.title.dragndrop',\n                    regexpKeys: ['^((?!Slot).)*$'],\n                    condition: function (configuration) {\n                        var slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\n                        return slotRestrictionsService.isSlotEditable(slotId).then(function (slotEditable) {\n                            if (slotEditable) {\n                                return typePermissionsRestService.hasUpdatePermissionForTypes([configuration.componentType]).then(function (hasUpdatePermission) {\n                                    return hasUpdatePermission[configuration.componentType];\n                                });\n                            }\n                            return false;\n                        });\n                    },\n                    action: {\n                        callbacks: {\n                            mousedown: function () {\n                                cmsDragAndDropService.update();\n                            }\n                        }\n                    },\n                    displayClass: 'movebutton',\n                    displayIconClass: 'sap-icon--move',\n                    displaySmallIconClass: 'sap-icon--move',\n                    permissions: ['se.context.menu.drag.and.drop.component']\n                });\n                featureService.register({\n                    key: 'se.cms.html5DragAndDrop',\n                    nameI18nKey: 'se.cms.dragAndDrop.name',\n                    descriptionI18nKey: 'se.cms.dragAndDrop.description',\n                    enablingCallback: function () {\n                        cmsDragAndDropService.register();\n                        cmsDragAndDropService.apply();\n                    },\n                    disablingCallback: function () {\n                        cmsDragAndDropService.unregister();\n                    }\n                });\n                featureService.addContextualMenuButton({\n                    key: 'se.cms.sharedcomponentbutton',\n                    priority: 300,\n                    nameI18nKey: 'se.cms.contextmenu.title.shared.component',\n                    i18nKey: 'se.cms.contextmenu.title.shared.component',\n                    regexpKeys: ['^((?!Slot).)*$'],\n                    condition: function (configuration) {\n                        var slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\n                        return slotRestrictionsService.isSlotEditable(slotId).then(function (slotEditable) {\n                            if (!slotEditable) {\n                                return false;\n                            }\n                            return componentSharedService.isComponentShared(configuration.componentAttributes.smarteditComponentUuid);\n                        });\n                    },\n                    action: {\n                        template: \"<shared-component-button data-smartedit-component-id=\\\"ctrl.componentAttributes.smarteditComponentId\\\"></shared-component-button>\"\n                    },\n                    displayClass: 'shared-component-button',\n                    displayIconClass: 'sap-icon--chain-link',\n                    displaySmallIconClass: 'sap-icon--chain-link',\n                    permissions: []\n                });\n                featureService.addContextualMenuButton({\n                    key: 'se.cms.remove',\n                    priority: 500,\n                    customCss: 'se-contextual-more-menu__item--delete',\n                    i18nKey: 'se.cms.contextmenu.title.remove',\n                    nameI18nKey: 'se.cms.contextmenu.title.remove',\n                    regexpKeys: ['^((?!Slot).)*$'],\n                    condition: function (configuration) {\n                        if (!configuration.isComponentHidden) {\n                            var slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\n                            return slotRestrictionsService.isSlotEditable(slotId).then(function (slotEditable) {\n                                if (slotEditable) {\n                                    return typePermissionsRestService.hasDeletePermissionForTypes([configuration.componentType]).then(function (hasDeletePermission) {\n                                        return hasDeletePermission[configuration.componentType];\n                                    });\n                                }\n                                return false;\n                            });\n                        }\n                        return typePermissionsRestService.hasDeletePermissionForTypes([configuration.componentType]).then(function (hasDeletePermission) {\n                            return hasDeletePermission[configuration.componentType];\n                        });\n                    },\n                    action: {\n                        callback: function (configuration, $event) {\n                            var slotOperationRelatedId;\n                            var slotOperationRelatedType;\n                            if (configuration.element) {\n                                slotOperationRelatedId = componentHandlerService.getSlotOperationRelatedId(configuration.element);\n                                slotOperationRelatedType = componentHandlerService.getSlotOperationRelatedType(configuration.element);\n                            }\n                            else {\n                                slotOperationRelatedId = (configuration.containerId) ? configuration.containerId : configuration.componentId;\n                                slotOperationRelatedType = (configuration.containerId && configuration.containerType) ? configuration.containerType : configuration.componentType;\n                            }\n                            var message = {};\n                            message.description = \"se.cms.contextmenu.removecomponent.confirmation.message\";\n                            message.title = \"se.cms.contextmenu.removecomponent.confirmation.title\";\n                            confirmationModalService.confirm(message).then(function () {\n                                removeComponentService.removeComponent({\n                                    slotId: configuration.slotId,\n                                    slotUuid: configuration.slotUuid,\n                                    componentId: configuration.componentId,\n                                    componentType: configuration.componentType,\n                                    componentUuid: configuration.componentAttributes.smarteditComponentUuid,\n                                    slotOperationRelatedId: slotOperationRelatedId,\n                                    slotOperationRelatedType: slotOperationRelatedType\n                                }).then(function () {\n                                    slotVisibilityService.reloadSlotsInfo();\n                                    // This is necessary in case the component was used more than once in the page. If so, those instances need to be updated. \n                                    crossFrameEventService.publish(EVENT_SMARTEDIT_COMPONENT_UPDATED, {\n                                        componentId: configuration.componentId,\n                                        componentType: configuration.componentType,\n                                        requiresReplayingDecorators: true\n                                    });\n                                    $translate('se.cms.alert.component.removed.from.slot', {\n                                        componentID: slotOperationRelatedId,\n                                        slotID: configuration.slotId\n                                    }).then(function (translation) {\n                                        alertService.showSuccess({\n                                            message: translation\n                                        });\n                                        $event.preventDefault();\n                                        $event.stopPropagation();\n                                    });\n                                });\n                            });\n                        }\n                    },\n                    displayClass: 'removebutton',\n                    displayIconClass: 'sap-icon--decline',\n                    displaySmallIconClass: 'sap-icon--decline',\n                    permissions: ['se.context.menu.remove.component']\n                });\n                featureService.addContextualMenuButton({\n                    key: 'se.slotContextualMenuVisibility',\n                    nameI18nKey: 'slotcontextmenu.title.visibility',\n                    regexpKeys: ['^.*ContentSlot$'],\n                    action: { templateUrl: 'slotVisibilityWidgetTemplate.html' },\n                    permissions: ['se.slot.context.menu.visibility']\n                });\n                featureService.addContextualMenuButton({\n                    key: 'se.slotSharedButton',\n                    nameI18nKey: 'slotcontextmenu.title.shared.button',\n                    regexpKeys: ['^.*Slot$'],\n                    action: { templateUrl: 'slotSharedTemplate.html' },\n                    permissions: ['se.slot.context.menu.shared.icon']\n                });\n                featureService.addContextualMenuButton({\n                    key: 'slotUnsharedButton',\n                    nameI18nKey: 'slotcontextmenu.title.unshared.button',\n                    regexpKeys: ['^.*Slot$'],\n                    action: { templateUrl: 'slotUnsharedButtonWrapperTemplate.html' },\n                    permissions: ['se.slot.context.menu.unshared.icon']\n                });\n                featureService.addContextualMenuButton({\n                    key: 'se.slotSyncButton',\n                    nameI18nKey: 'slotcontextmenu.title.sync.button',\n                    regexpKeys: ['^.*Slot$'],\n                    action: { templateUrl: 'slotSyncTemplate.html' },\n                    permissions: ['se.sync.slot.context.menu']\n                });\n                featureService.addDecorator({\n                    key: 'syncIndicator',\n                    nameI18nKey: 'syncIndicator',\n                    permissions: ['se.sync.slot.indicator']\n                });\n                featureService.register({\n                    key: 'disableSharedSlotEditing',\n                    nameI18nKey: 'se.cms.disableSharedSlotEditing',\n                    descriptionI18nKey: 'se.cms.disableSharedSlotEditing.description',\n                    enablingCallback: function () {\n                        slotSharedService.setSharedSlotEnablementStatus(true);\n                    },\n                    disablingCallback: function () {\n                        slotSharedService.setSharedSlotEnablementStatus(false);\n                    }\n                });\n                featureService.addDecorator({\n                    key: 'sharedSlotDisabledDecorator',\n                    nameI18nKey: 'se.cms.shared.slot.disabled.decorator',\n                    // only show that the slot is shared if it is not already external\n                    displayCondition: function (componentType, componentId) {\n                        return Promise.all([slotRestrictionsService.isSlotEditable(componentId), componentHandlerService.isExternalComponent(componentId, componentType), slotSharedService.isSlotShared(componentId)]).then(function (response) {\n                            return !response[0] && !response[1] && response[2];\n                        });\n                    }\n                });\n                featureService.addDecorator({\n                    key: 'externalSlotDisabledDecorator',\n                    nameI18nKey: 'se.cms.external.slot.disabled.decorator',\n                    displayCondition: function (componentType, componentId) {\n                        return Promise.resolve(componentHandlerService.isExternalComponent(componentId, componentType));\n                    }\n                });\n                featureService.addDecorator({\n                    key: 'externalComponentDecorator',\n                    nameI18nKey: 'se.cms.external.component.decorator',\n                    displayCondition: function (componentType, componentId) {\n                        return Promise.resolve(componentHandlerService.isExternalComponent(componentId, componentType));\n                    }\n                });\n                featureService.addContextualMenuButton({\n                    key: 'clonecomponentbutton',\n                    priority: 600,\n                    nameI18nKey: 'se.cms.contextmenu.title.clone.component',\n                    i18nKey: 'se.cms.contextmenu.title.clone.component',\n                    regexpKeys: ['^((?!Slot).)*$'],\n                    condition: function (configuration) {\n                        var componentUuid = configuration.componentAttributes.smarteditComponentUuid;\n                        if (!configuration.isComponentHidden) {\n                            var slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\n                            return slotRestrictionsService.isSlotEditable(slotId).then(function (slotEditable) {\n                                if (slotEditable) {\n                                    return typePermissionsRestService.hasCreatePermissionForTypes([configuration.componentType]).then(function (hasCreatePermission) {\n                                        if (hasCreatePermission[configuration.componentType]) {\n                                            return componentInfoService.getById(componentUuid).then(function (component) {\n                                                return component.cloneable;\n                                            });\n                                        }\n                                        else {\n                                            return $q.when(false);\n                                        }\n                                    });\n                                }\n                                return false;\n                            });\n                        }\n                        return cmsitemsRestService.getById(componentUuid).then(function (component) {\n                            return component.cloneable;\n                        });\n                    },\n                    action: {\n                        callback: function (configuration) {\n                            var sourcePosition = componentHandlerService.getComponentPositionInSlot(configuration.slotId, configuration.componentAttributes.smarteditComponentId);\n                            componentEditingFacade.cloneExistingComponentToSlot({\n                                targetSlotId: configuration.slotId,\n                                dragInfo: {\n                                    componentId: configuration.componentAttributes.smarteditComponentId,\n                                    componentType: configuration.componentType,\n                                    componentUuid: configuration.componentAttributes.smarteditComponentUuid\n                                },\n                                position: sourcePosition + 1\n                            });\n                        }\n                    },\n                    displayClass: 'clonebutton',\n                    displayIconClass: 'sap-icon--duplicate',\n                    displaySmallIconClass: 'sap-icon--duplicate',\n                    permissions: ['se.clone.component']\n                });\n            }\n        })\n    ], /* @ngInject */ Cmssmartedit);\n    return Cmssmartedit;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/ComponentSharedServiceInner.ts\":\n/*!************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/ComponentSharedServiceInner.ts ***!\n  \\************************************************************************************/\n/*! exports provided: ComponentSharedService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentSharedService\", function() { return ComponentSharedService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons */ \"./jsTarget/web/features/cmscommons/index.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nvar ComponentSharedService = /** @class */ (function (_super) {\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](/* @ngInject */ ComponentSharedService, _super);\n    function ComponentSharedService(componentInfoService, $q) {\n        var _this = _super.call(this) || this;\n        _this.componentInfoService = componentInfoService;\n        _this.$q = $q;\n        return _this;\n    }\n    ComponentSharedService.prototype.isComponentShared = function (componentParam) {\n        var _this = this;\n        var componentPromise;\n        if (typeof componentParam === 'string') {\n            componentPromise = this.componentInfoService.getById(componentParam);\n        }\n        else {\n            componentPromise = this.$q.when(componentParam);\n        }\n        return componentPromise.then(function (component) {\n            if (!component.slots) {\n                return _this.$q.reject(\"ComponentSharedService::isComponentShared - Component must have slots property.\");\n            }\n            return component.slots.length > 1;\n        });\n    };\n    var _a;\n    ComponentSharedService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"GatewayProxied\"])(),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Object, typeof (_a = typeof angular !== \"undefined\" && angular.IQService) === \"function\" ? _a : Object])\n    ], /* @ngInject */ ComponentSharedService);\n    return ComponentSharedService;\n}(cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"IComponentSharedService\"]));\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/EditorModalServiceInner.ts\":\n/*!********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/EditorModalServiceInner.ts ***!\n  \\********************************************************************************/\n/*! exports provided: EditorModalService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EditorModalService\", function() { return EditorModalService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons_services_IEditorModalService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons/services/IEditorModalService */ \"./jsTarget/web/features/cmscommons/services/IEditorModalService.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nvar EditorModalService = /** @class */ (function (_super) {\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](/* @ngInject */ EditorModalService, _super);\n    function EditorModalService() {\n        return _super.call(this) || this;\n    }\n    EditorModalService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"GatewayProxied\"])('open', 'openAndRerenderSlot'),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [])\n    ], /* @ngInject */ EditorModalService);\n    return EditorModalService;\n}(cmscommons_services_IEditorModalService__WEBPACK_IMPORTED_MODULE_2__[\"IEditorModalService\"]));\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/HiddenComponentMenuService.ts\":\n/*!***********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/HiddenComponentMenuService.ts ***!\n  \\***********************************************************************************/\n/*! exports provided: HiddenComponentMenuService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HiddenComponentMenuService\", function() { return HiddenComponentMenuService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var angular__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! angular */ \"angular\");\n/* harmony import */ var angular__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(angular__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var cmssmartedit_services_slotContainerService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cmssmartedit/services/slotContainerService */ \"./jsTarget/web/features/cmssmartedit/services/slotContainerService.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n// import {ContextualMenuService} from 'smartedit';\n\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService\n *\n * @description\n * This service is used to retrieve menu items that are available to be used with hidden components.\n */\nvar HiddenComponentMenuService = /** @class */ (function () {\n    // --------------------------------------------------------------------------------------\n    // Constructor\n    // --------------------------------------------------------------------------------------\n    function HiddenComponentMenuService($q, contextualMenuService, slotContainerService) {\n        this.$q = $q;\n        this.contextualMenuService = contextualMenuService;\n        this.slotContainerService = slotContainerService;\n        // --------------------------------------------------------------------------------------\n        // Constants\n        // --------------------------------------------------------------------------------------\n        this.MENU_ITEM_EXTERNAL = 'externalcomponentbutton';\n        this.MENU_ITEM_CLONE = 'clonecomponentbutton';\n        this.MENU_ITEM_REMOVE = 'se.cms.remove';\n        // --------------------------------------------------------------------------------------\n        // Variables\n        // --------------------------------------------------------------------------------------\n        this.allowedItems = {};\n        this._setDefaultItemsAllowed();\n    }\n    // --------------------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------------------\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#allowItemsInHiddenComponentMenu\n     * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\n     *\n     * @description\n     * This method is used to set the list of items that can be used with hidden components.\n     *\n     * @param {String[]} itemsToAllow The ID of the menu items that can be used with hidden components.\n     *\n     */\n    HiddenComponentMenuService.prototype.allowItemsInHiddenComponentMenu = function (itemsToAllow) {\n        var _this = this;\n        itemsToAllow.forEach(function (item) {\n            _this.allowedItems[item] = true;\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#removeAllowedItemsInHiddenComponentMenu\n     * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\n     *\n     * @description\n     * This method removes a provided set of allowed menu items if previously allowed.\n     *\n     * @param {String[]} itemsToAllow An array containing the ID's of the menu items that cannot be used any longer with hidden components.\n     *\n     */\n    HiddenComponentMenuService.prototype.removeAllowedItemsInHiddenComponentMenu = function (itemsToDisallow) {\n        var _this = this;\n        itemsToDisallow.forEach(function (item) {\n            delete _this.allowedItems[item];\n        });\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#removeAllowedItemsInHiddenComponentMenu\n     * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\n     *\n     * @description\n     * This method retrieves the list of IDs of the menu items that can be used with hidden components.\n     *\n     * @returns {String[]} The list of IDs of the menu items that can be used with hidden components.\n     *\n     */\n    HiddenComponentMenuService.prototype.getAllowedItemsInHiddenComponentMenu = function () {\n        return Object.keys(this.allowedItems);\n    };\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#getItemsForHiddenComponent\n     * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\n     *\n     * @description\n     * This method is used to retrieve the menu items available to be used in the provided component. To do so,\n     * this method retrieves contextual menu items available for the provided component and filters out the ones that cannot\n     * be used in hidden components. For example, assuming that a visible component has 'drag and drop' and 'remove'\n     * contextual menu items, if the component is hidden it should only have the remove button available, since the\n     * drag and drop operation is meaningless if the component is hidden. Hence, this service will retrieve only\n     * the remove item.\n     *\n     * @param {Object} component The hidden component for which to retrieve its menu items.\n     * @param {String} slotId The SmartEdit id of the slot where the component is located.\n     *\n     * @returns {Promise<ContextualMenuItem[]>} Promise that resolves to an array of contextual menu items available for the component\n     * provided.\n     */\n    HiddenComponentMenuService.prototype.getItemsForHiddenComponent = function (component, slotId) {\n        var _this = this;\n        this._validateComponent(component);\n        return this._buildComponentInfo(slotId, component).then(function (configuration) {\n            return _this._getAllowedItemsForComponent(component, configuration);\n        });\n    };\n    // --------------------------------------------------------------------------------------\n    // Helper Methods\n    // --------------------------------------------------------------------------------------\n    HiddenComponentMenuService.prototype._validateComponent = function (component) {\n        if (!component) {\n            throw new Error('HiddenComponentMenuService - Component cannot be null.');\n        }\n        if (!component.uid) {\n            throw new Error('HiddenComponentMenuService - Component needs a uid.');\n        }\n        if (!component.typeCode) {\n            throw new Error('HiddenComponentMenuService - Component needs a type code.');\n        }\n        if (!component.uuid) {\n            throw new Error('HiddenComponentMenuService - Component needs a uuid.');\n        }\n    };\n    HiddenComponentMenuService.prototype._setDefaultItemsAllowed = function () {\n        this.allowItemsInHiddenComponentMenu([this.MENU_ITEM_EXTERNAL, this.MENU_ITEM_CLONE, this.MENU_ITEM_REMOVE]);\n    };\n    HiddenComponentMenuService.prototype._buildComponentInfo = function (slotId, component) {\n        return this.slotContainerService.getComponentContainer(slotId, component.uuid)\n            .then(function (componentContainer) {\n            return {\n                componentType: component.typeCode,\n                componentId: component.uid,\n                componentAttributes: {\n                    smarteditCatalogVersionUuid: component.catalogVersion,\n                    smarteditComponentId: component.uid,\n                    smarteditComponentType: component.componentType,\n                    smarteditComponentUuid: component.uuid,\n                    smarteditElementUuid: null\n                },\n                containerType: componentContainer ? componentContainer.containerType : null,\n                containerId: componentContainer ? componentContainer.containerId : null,\n                element: null,\n                isComponentHidden: true,\n                slotId: slotId,\n                iLeftBtns: 0\n            };\n        });\n    };\n    HiddenComponentMenuService.prototype._getAllowedItemsForComponent = function (component, configuration) {\n        var _this = this;\n        var buttons = [];\n        var promisesToResolve = [];\n        var menuItems = this.contextualMenuService.getContextualMenuByType(component.typeCode);\n        menuItems = angular__WEBPACK_IMPORTED_MODULE_1__[\"copy\"](menuItems);\n        // Get items allowed in all hidden components\n        menuItems.filter(function (item) {\n            return _this.allowedItems[item.key];\n        }).forEach(function (item) {\n            // Get items enabled for the current hidden component. \n            var deferred = _this.$q.defer();\n            promisesToResolve.push(deferred.promise);\n            _this.$q.when(item.condition ? item.condition(configuration) : true).then(function (isEnabled) {\n                if (isEnabled) {\n                    buttons.push(item);\n                }\n                deferred.resolve();\n            });\n        });\n        return this.$q.all(promisesToResolve).then(function () {\n            return { buttons: buttons, configuration: configuration };\n        });\n    };\n    var _a, _b;\n    HiddenComponentMenuService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_2__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_a = typeof angular__WEBPACK_IMPORTED_MODULE_1__ !== \"undefined\" && angular__WEBPACK_IMPORTED_MODULE_1__[\"IQService\"]) === \"function\" ? _a : Object, Object, typeof (_b = typeof cmssmartedit_services_slotContainerService__WEBPACK_IMPORTED_MODULE_3__[\"SlotContainerService\"] !== \"undefined\" && cmssmartedit_services_slotContainerService__WEBPACK_IMPORTED_MODULE_3__[\"SlotContainerService\"]) === \"function\" ? _b : Object])\n    ], /* @ngInject */ HiddenComponentMenuService);\n    return HiddenComponentMenuService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/IHiddenComponentMenu.ts\":\n/*!*****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/IHiddenComponentMenu.ts ***!\n  \\*****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/SyncPollingServiceInner.ts\":\n/*!********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/SyncPollingServiceInner.ts ***!\n  \\********************************************************************************/\n/*! exports provided: SyncPollingService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SyncPollingService\", function() { return SyncPollingService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nvar SyncPollingService = /** @class */ (function () {\n    function SyncPollingService(systemEventService, SYNCHRONIZATION_POLLING) {\n        this.systemEventService = systemEventService;\n        this.SYNCHRONIZATION_POLLING = SYNCHRONIZATION_POLLING;\n        this.registerSyncPollingEvents();\n    }\n    SyncPollingService.prototype.registerSyncPollingEvents = function () {\n        this.systemEventService.subscribe(this.SYNCHRONIZATION_POLLING.SPEED_UP, this.changePollingSpeed.bind(this));\n        this.systemEventService.subscribe(this.SYNCHRONIZATION_POLLING.SLOW_DOWN, this.changePollingSpeed.bind(this));\n    };\n    SyncPollingService.prototype.changePollingSpeed = function (eventId, itemId) {\n        'proxyFunction';\n        return null;\n    };\n    SyncPollingService.prototype._fetchSyncStatus = function (_pageUUID, uriContext) {\n        'proxyFunction';\n        return null;\n    };\n    SyncPollingService.prototype.getSyncStatus = function (pageUUID, uriContext) {\n        'proxyFunction';\n        return null;\n    };\n    SyncPollingService.prototype.performSync = function (array, uriContext) {\n        'proxyFunction';\n        return null;\n    };\n    var _a, _b;\n    SyncPollingService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"GatewayProxied\"])('getSyncStatus', '_fetchSyncStatus', 'changePollingSpeed', 'registerSyncPollingEvents', 'performSync'),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_a = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SystemEventService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SystemEventService\"]) === \"function\" ? _a : Object, typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"TypedMap\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"TypedMap\"]) === \"function\" ? _b : Object])\n    ], /* @ngInject */ SyncPollingService);\n    return SyncPollingService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/cmsSmarteditServicesModule.ts\":\n/*!***********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/cmsSmarteditServicesModule.ts ***!\n  \\***********************************************************************************/\n/*! exports provided: CmsSmarteditServicesModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmsSmarteditServicesModule\", function() { return CmsSmarteditServicesModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _HiddenComponentMenuService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HiddenComponentMenuService */ \"./jsTarget/web/features/cmssmartedit/services/HiddenComponentMenuService.ts\");\n/* harmony import */ var _slotContainerService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./slotContainerService */ \"./jsTarget/web/features/cmssmartedit/services/slotContainerService.ts\");\n/* harmony import */ var _SyncPollingServiceInner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SyncPollingServiceInner */ \"./jsTarget/web/features/cmssmartedit/services/SyncPollingServiceInner.ts\");\n/* harmony import */ var cmscommons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cmscommons */ \"./jsTarget/web/features/cmscommons/index.ts\");\n/* harmony import */ var cmssmartedit_dao_PageContentSlotsComponentsRestServiceInner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cmssmartedit/dao/PageContentSlotsComponentsRestServiceInner */ \"./jsTarget/web/features/cmssmartedit/dao/PageContentSlotsComponentsRestServiceInner.ts\");\n/* harmony import */ var _EditorModalServiceInner__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EditorModalServiceInner */ \"./jsTarget/web/features/cmssmartedit/services/EditorModalServiceInner.ts\");\n/* harmony import */ var _ComponentSharedServiceInner__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ComponentSharedServiceInner */ \"./jsTarget/web/features/cmssmartedit/services/ComponentSharedServiceInner.ts\");\n/* harmony import */ var _pages__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pages */ \"./jsTarget/web/features/cmssmartedit/services/pages/index.ts\");\n/* harmony import */ var _contextAwareEditableItem_ContextAwareEditableItemServiceInner__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contextAwareEditableItem/ContextAwareEditableItemServiceInner */ \"./jsTarget/web/features/cmssmartedit/services/contextAwareEditableItem/ContextAwareEditableItemServiceInner.ts\");\n/* harmony import */ var cmscommons_dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! cmscommons/dao/cmswebservices/sites/CmsitemsRestService */ \"./jsTarget/web/features/cmscommons/dao/cmswebservices/sites/CmsitemsRestService.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @ngdoc overview\n * @name cmsSmarteditServicesModule\n *\n * @description\n * Module containing all the services shared within the CmsSmartEdit application.\n */\nvar CmsSmarteditServicesModule = /** @class */ (function () {\n    function CmsSmarteditServicesModule() {\n    }\n    CmsSmarteditServicesModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeModule\"])({\n            imports: [\n                'yLoDashModule',\n                'smarteditServicesModule',\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"CmsConstantsModule\"]\n            ],\n            providers: [\n                smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"diNameUtils\"].makeValueProvider({ cmsitemsUri: cmscommons_dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_11__[\"cmsitemsUri\"] }),\n                cmscommons_dao_cmswebservices_sites_CmsitemsRestService__WEBPACK_IMPORTED_MODULE_11__[\"CmsitemsRestService\"],\n                _EditorModalServiceInner__WEBPACK_IMPORTED_MODULE_7__[\"EditorModalService\"],\n                _SyncPollingServiceInner__WEBPACK_IMPORTED_MODULE_4__[\"SyncPollingService\"],\n                _slotContainerService__WEBPACK_IMPORTED_MODULE_3__[\"SlotContainerService\"],\n                _ComponentSharedServiceInner__WEBPACK_IMPORTED_MODULE_8__[\"ComponentSharedService\"],\n                _HiddenComponentMenuService__WEBPACK_IMPORTED_MODULE_2__[\"HiddenComponentMenuService\"],\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"AssetsService\"],\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"CMSModesService\"],\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"CMSTimeService\"],\n                cmssmartedit_dao_PageContentSlotsComponentsRestServiceInner__WEBPACK_IMPORTED_MODULE_6__[\"PageContentSlotsComponentsRestService\"],\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"AttributePermissionsRestService\"],\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"TypePermissionsRestService\"],\n                _pages__WEBPACK_IMPORTED_MODULE_9__[\"PageService\"],\n                _contextAwareEditableItem_ContextAwareEditableItemServiceInner__WEBPACK_IMPORTED_MODULE_10__[\"ContextAwareEditableItemService\"],\n                cmscommons__WEBPACK_IMPORTED_MODULE_5__[\"ComponentService\"]\n            ],\n        })\n    ], /* @ngInject */ CmsSmarteditServicesModule);\n    return CmsSmarteditServicesModule;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/componentInfoService.js\":\n/*!*****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/componentInfoService.js ***!\n  \\*****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('componentInfoServiceModule', [\n        'yjqueryModule',\n        'yLoDashModule',\n        'cmsSmarteditServicesModule',\n        'renderServiceInterfaceModule'\n    ])\n    /**\n     * This service is used to fetch and cache components information. \n     * This service keeps track of components added, edited and removed. It also automatically fetches and caches components when they are visible \n     * in the viewport (and invalidates them). \n     *\n     * This service is intended to be used to improve the performance of the application by reducing the number of xhr calls to the cmsitems api.\n     * Example: \n     * - a component in the overlay that is doing a fetch to the cmsitems api should use this service instead of using cmsitemsRestService.\n     *   When a lot of components are rendered in the overlay we want to avoid one xhr call per component, but instead use this service that is listening\n     *   to the 'OVERLAY_RERENDERED_EVENT' and fetch components information in batch (POST to cmsitems endpoint with an Array of uuids).\n     */\n    .service('componentInfoService', function($log, $q, yjQuery, lodash, crossFrameEventService, cmsitemsRestService, UUID_ATTRIBUTE, EVENTS, OVERLAY_RERENDERED_EVENT, COMPONENT_CREATED_EVENT, COMPONENT_UPDATED_EVENT, COMPONENT_REMOVED_EVENT) {\n        var cachedComponents = {};\n        var deferredMap = {};\n\n        // returns a Promise that will be resolved only if the component was added previously in the overlay and if not will resolve only when the component is added to the overlay.\n        /**\n         * @internal\n         * Returns a Promise that will be resolved with the component identified by the given uuid. \n         * When called this method works like this: \n         * - If the component is in the cache, the promise resolves right away. \n         * - If the component is not in the cache, and the forceRetrieval flag is not set, this method won't call the cmsItem backend API right away. \n         *   Instead, it waits until the component is cached (e.g., it is added to the overlay). \n         * - If the forceRetrieval flag is set, then the method will call the cmsItem backend API right away. \n         * \n         * @param uuid The uuid of the item to retrieve\n         * @param forceRetrieval Boolean flag. It specifies whether to retrieve the cmsItem right away. \n         * \n         */\n        this.getById = function(uuid, forceRetrieval) {\n            if (!forceRetrieval && !cachedComponents[uuid] && !document.querySelectorAll('[' + UUID_ATTRIBUTE + '=\\'' + uuid + '\\']').length) {\n                // For hidden components that are not present in the DOM\n                forceRetrieval = true;\n            }\n            if (cachedComponents[uuid]) {\n                return $q.when(cachedComponents[uuid]);\n            } else if (forceRetrieval) {\n                return cmsitemsRestService.getById(uuid).then(function(data) {\n                    this._resolvePromises(data);\n                    return cachedComponents[uuid];\n                }.bind(this), function(error) {\n                    this._rejectPromises([uuid], error);\n                    throw error;\n                }.bind(this));\n            } else {\n                var deferred = deferredMap[uuid] || $q.defer();\n                if (!deferredMap[uuid]) {\n                    deferredMap[uuid] = deferred;\n                }\n                return deferred.promise;\n            }\n        };\n\n        this._resolvePromises = function(data) {\n            (data.response ? data.response : [data]).forEach(function(component) {\n                cachedComponents[component.uuid] = component;\n                if (deferredMap[component.uuid]) {\n                    deferredMap[component.uuid].resolve(component);\n                    delete deferredMap[component.uuid];\n                }\n            });\n        };\n\n        this._rejectPromises = function(uuids, error) {\n            $log.error('componentInfoService:: getById error:', error.message);\n            uuids.forEach(function(uuid) {\n                if (deferredMap[uuid]) {\n                    deferredMap[uuid].reject(error);\n                    delete deferredMap[uuid];\n                }\n            });\n        };\n\n        this._getComponentsDataByUUIDs = function(uuids) {\n            cmsitemsRestService.getByIds(uuids).then(this._resolvePromises, function(e) {\n                this._rejectPromises(uuids, e);\n            }.bind(this));\n        };\n\n        this._onComponentsAddedToOverlay = function(addedComponentsDomElements) {\n            var uuids = lodash.map(addedComponentsDomElements, function(component) {\n                return yjQuery(component).attr(UUID_ATTRIBUTE);\n            }).filter(function(uuid) {\n                return !lodash.includes(Object.keys(cachedComponents), uuid);\n            });\n            if (uuids.length) {\n                this._getComponentsDataByUUIDs(uuids);\n            }\n        };\n\n        // delete from the cache the components that were removed from the DOM\n        // note: components that are still in the DOM were only removed from the overlay\n        this._onComponentsRemovedFromOverlay = function(removedComponentsDomElements) {\n            removedComponentsDomElements.filter(function(component) {\n                return !yjQuery.find('[' + UUID_ATTRIBUTE + '=\\'' + yjQuery(component).attr(UUID_ATTRIBUTE) + '\\']').length;\n            }).filter(function(component) {\n                return lodash.includes(Object.keys(cachedComponents), yjQuery(component).attr(UUID_ATTRIBUTE));\n            }).map(function(component) {\n                return yjQuery(component).attr(UUID_ATTRIBUTE);\n            }).forEach(function(uuid) {\n                delete cachedComponents[uuid];\n            });\n        };\n\n        this._forceAddComponent = function(cmsComponentToAdd) {\n            this._resolvePromises({\n                response: [\n                    cmsComponentToAdd\n                ]\n            });\n        };\n\n        this._forceRemoveComponent = function(componentToRemove) {\n            delete cachedComponents[componentToRemove.uuid];\n        };\n\n        this._isComponentCached = function(componentUuid) {\n            return !!cachedComponents[componentUuid];\n        };\n\n        this._clearCache = function() {\n            cachedComponents = {};\n            deferredMap = {};\n        };\n\n        // components added & removed from overlay\n        crossFrameEventService.subscribe(OVERLAY_RERENDERED_EVENT, function(evtId, data) {\n            if (data) {\n                if (data.addedComponents && data.addedComponents.length) {\n                    this._onComponentsAddedToOverlay(data.addedComponents);\n                }\n                if (data.removedComponents && data.removedComponents.length) {\n                    this._onComponentsRemovedFromOverlay(data.removedComponents);\n                }\n            }\n        }.bind(this));\n\n        // Components added & removed from storefront page. \n        this._onComponentAdded = function(eventId, data) {\n            this._forceAddComponent(data);\n        };\n\n        this._onComponentRemoved = function(eventId, data) {\n            this._forceRemoveComponent(data);\n        };\n        crossFrameEventService.subscribe(COMPONENT_CREATED_EVENT, this._onComponentAdded.bind(this));\n        crossFrameEventService.subscribe(COMPONENT_UPDATED_EVENT, this._onComponentAdded.bind(this));\n        crossFrameEventService.subscribe(COMPONENT_REMOVED_EVENT, this._onComponentRemoved.bind(this));\n\n        // clear cache\n        crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, this._clearCache.bind(this));\n        crossFrameEventService.subscribe(EVENTS.USER_HAS_CHANGED, this._clearCache.bind(this));\n\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/componentVisibilityAlertService.js\":\n/*!****************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/componentVisibilityAlertService.js ***!\n  \\****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module(\"componentVisibilityAlertServiceModule\", [\n        \"componentVisibilityAlertServiceInterfaceModule\"\n    ])\n\n    .factory('componentVisibilityAlertService', function(\n        ComponentVisibilityAlertServiceInterface,\n        extend,\n        gatewayProxy\n    ) {\n\n        var ComponentVisibilityAlertService = function() {\n            this.gatewayId = 'ComponentVisibilityAlertService';\n            gatewayProxy.initForService(this, [\"checkAndAlertOnComponentVisibility\"]);\n        };\n\n        ComponentVisibilityAlertService = extend(ComponentVisibilityAlertServiceInterface, ComponentVisibilityAlertService);\n\n        return new ComponentVisibilityAlertService();\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/contextAwareEditableItem/ContextAwareEditableItemServiceInner.ts\":\n/*!**********************************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/contextAwareEditableItem/ContextAwareEditableItemServiceInner.ts ***!\n  \\**********************************************************************************************************************/\n/*! exports provided: ContextAwareEditableItemService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContextAwareEditableItemService\", function() { return ContextAwareEditableItemService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons */ \"./jsTarget/web/features/cmscommons/index.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nvar ContextAwareEditableItemService = /** @class */ (function (_super) {\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](/* @ngInject */ ContextAwareEditableItemService, _super);\n    function ContextAwareEditableItemService() {\n        return _super.call(this) || this;\n    }\n    ContextAwareEditableItemService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"GatewayProxied\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [])\n    ], /* @ngInject */ ContextAwareEditableItemService);\n    return ContextAwareEditableItemService;\n}(cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"IContextAwareEditableItemService\"]));\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/contextualMenuDropdownService.js\":\n/*!**************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/contextualMenuDropdownService.js ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name contextualMenuDropdownServiceModule.contextualMenuDropdownService\n * @description\n * contextualMenuDropdownService is an internal service that provides methods for interaction between\n * Drag and Drop Service and the Contextual Menu.\n */\n\nangular.module('contextualMenuDropdownServiceModule', ['contextualMenuDecoratorModule', 'smarteditServicesModule'])\n    .run(function(contextualMenuDropdownService) {\n        contextualMenuDropdownService._registerIsOpenEvent();\n    })\n\n    /**\n     *  Note: The contextualMenuDropdownService functions as a glue between the Drag and Drop Service and the Contextual Menu.\n     *  The service was created to solve the issue of closing any contextual menu that is open whenever a drag operation is started.\n     *  It does so while keeping the DnD and Contextual Menu services decoupled.\n     */\n    .service('contextualMenuDropdownService', function(systemEventService, CTX_MENU_DROPDOWN_IS_OPEN, CLOSE_CTX_MENU, DRAG_AND_DROP_EVENTS) {\n\n        var unsubscribeFn;\n\n        this._registerIsOpenEvent = function() {\n            systemEventService.subscribe(CTX_MENU_DROPDOWN_IS_OPEN, function() {\n                this._registerDragStarted();\n            }.bind(this));\n        };\n\n        this._registerDragStarted = function() {\n            unsubscribeFn = systemEventService.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, this._triggerCloseOperation);\n        };\n\n        this._triggerCloseOperation = function() {\n            systemEventService.publishAsync(CLOSE_CTX_MENU);\n            if (unsubscribeFn) {\n                unsubscribeFn();\n            }\n        }.bind(this);\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/cmsDragAndDropService.js\":\n/*!******************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/dragAndDrop/cmsDragAndDropService.js ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n(function() {\n\n    /**\n     * @ngdoc overview\n     * @name cmsDragAndDropServiceModule\n     * @description\n     * # The cmsDragAndDropServiceModule\n     *\n     * The cmsDragAndDropServiceModule contains a service that provides a rich drag and drop experience tailored for CMS operations.\n     *\n     */\n    angular.module('cmsDragAndDropServiceModule', ['yjqueryModule', 'dragAndDropServiceModule', 'yLoDashModule', 'legacySmarteditCommonsModule', 'slotRestrictionsServiceModule', 'componentEditingFacadeModule', 'translationServiceModule', 'removeComponentServiceModule',\n            'cmsSmarteditServicesModule', 'browserServiceModule', 'seConstantsModule'\n        ])\n        /**\n         * @ngdoc object\n         * @name cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n         *\n         * @description\n         * Injectable angular constant<br/>\n         * Constants identifying CMS drag and drop events.\n         *\n         */\n        .constant('DRAG_AND_DROP_EVENTS', {\n            /**\n             * @ngdoc property\n             * @name DRAG_STARTED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when a drag and drop event starts.\n             **/\n            DRAG_STARTED: 'CMS_DRAG_STARTED',\n            /**\n             * @ngdoc property\n             * @name DRAG_STOPPED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when a drag and drop event stops.\n             **/\n            DRAG_STOPPED: 'CMS_DRAG_STOPPED',\n            /**\n             * @ngdoc property\n             * @name DRAG_STOPPED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when onDragOver is triggered.\n             **/\n            DRAG_OVER: 'CMS_DRAG_OVER',\n            /**\n             * @ngdoc property\n             * @name DRAG_STOPPED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when onDragLeave is triggered.\n             **/\n            DRAG_LEAVE: 'CMS_DRAG_LEAVE'\n        })\n        /**\n         * @ngdoc service\n         * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService\n         *\n         * @description\n         * This service provides a rich drag and drop experience tailored for CMS operations.\n         */\n        .service('cmsDragAndDropService', function(\n            $q,\n            $window,\n            $translate,\n            $timeout,\n            yjQuery,\n            lodash,\n            dragAndDropService,\n            componentHandlerService,\n            systemEventService,\n            gatewayFactory,\n            slotRestrictionsService,\n            alertService,\n            assetsService,\n            browserService,\n            componentEditingFacade,\n            waitDialogService,\n            pageContentSlotsComponentsRestService,\n            DRAG_AND_DROP_EVENTS,\n            COMPONENT_REMOVED_EVENT,\n            CONTENT_SLOT_TYPE,\n            OVERLAY_RERENDERED_EVENT,\n            CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS,\n            SMARTEDIT_COMPONENT_PROCESS_STATUS,\n            CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS,\n            COMPONENT_IN_SLOT_STATUS,\n            domain\n        ) {\n            // Constants\n            var CMS_DRAG_AND_DROP_ID = 'se.cms.dragAndDrop';\n\n            var TARGET_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\n            var SOURCE_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type!='ContentSlot'] .movebutton\";\n            var MORE_MENU_SOURCE_SELECTOR = \".movebutton\";\n\n            var SLOT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\n            var COMPONENT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type!='ContentSlot']\";\n            var HINT_SELECTOR = '.overlayDropzone';\n\n            var CSS_CLASSES = {\n                UI_HELPER_OVERLAY: 'overlayDnd',\n                DROPZONE: 'overlayDropzone',\n                DROPZONE_FULL: 'overlayDropzone--full',\n                DROPZONE_TOP: 'overlayDropzone--top',\n                DROPZONE_BOTTOM: 'overlayDropzone--bottom',\n                DROPZONE_LEFT: 'overlayDropzone--left',\n                DROPZONE_RIGHT: 'overlayDropzone--right',\n                DROPZONE_HOVERED: 'overlayDropzone--hovered',\n                DROPZONE_MAY_BE_ALLOWED: 'overlayDropzone--mayBeAllowed',\n                OVERLAY_IN_DRAG_DROP: 'smarteditoverlay_dndRendering',\n                COMPONENT_DRAGGED: 'component_dragged',\n                COMPONENT_DRAGGED_HOVERED: 'component_dragged_hovered',\n                SLOTS_MARKED: 'slot-marked',\n                SLOT_ALLOWED: 'over-slot-enabled',\n                SLOT_NOT_ALLOWED: 'over-slot-disabled',\n                SLOT_MAY_BE_ALLOWED: 'over-slot-maybeenabled'\n            };\n\n            var DEFAULT_DRAG_IMG = '/images/contextualmenu_move_on.png';\n\n            // Variables\n            this._cachedSlots = {};\n            this._highlightedSlot = null;\n            this._highlightedComponent = null;\n            this._highlightedHint = null;\n            this._dragInfo = null;\n\n            this._overlayRenderedUnSubscribeFn = null;\n            this._componentRemovedUnSubscribeFn = null;\n\n            this._gateway = gatewayFactory.createGateway(\"cmsDragAndDrop\");\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#register\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method registers this drag and drop instance in SmartEdit.\n             */\n            this.register = function() {\n                dragAndDropService.register({\n                    id: CMS_DRAG_AND_DROP_ID,\n                    sourceSelector: [SOURCE_SELECTOR, MORE_MENU_SOURCE_SELECTOR], //the source selectors are DnD menus located both inside and outside the more options of the overlay\n                    targetSelector: TARGET_SELECTOR,\n                    startCallback: this.onStart,\n                    dragEnterCallback: this.onDragEnter,\n                    dragOverCallback: this.onDragOver,\n                    dropCallback: this.onDrop,\n                    outCallback: this.onDragLeave,\n                    stopCallback: this.onStop,\n                    enableScrolling: true,\n                    helper: this._getDragImageSrc\n                });\n            };\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#unregister\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method unregisters this drag and drop instance from SmartEdit.\n             */\n            this.unregister = function() {\n                dragAndDropService.unregister([CMS_DRAG_AND_DROP_ID]);\n\n                if (this._overlayRenderedUnSubscribeFn) {\n                    this._overlayRenderedUnSubscribeFn();\n                }\n                if (this._componentRemovedUnSubscribeFn) {\n                    this._componentRemovedUnSubscribeFn();\n                }\n            };\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#apply\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method applies this drag and drop instance in the current page. After this method is executed,\n             * the user can start a drag and drop operation.\n             */\n            this.apply = function() {\n                dragAndDropService.apply(CMS_DRAG_AND_DROP_ID);\n                this._addUIHelpers();\n\n                // Register a listener for every time the overlay is updated.\n                this._overlayRenderedUnSubscribeFn = systemEventService.subscribe(OVERLAY_RERENDERED_EVENT, this._onOverlayUpdate);\n                this._componentRemovedUnSubscribeFn = systemEventService.subscribe(COMPONENT_REMOVED_EVENT, this._onOverlayUpdate);\n\n                this._gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, function(eventId, data) {\n                    dragAndDropService.markDragStarted();\n                    this._initializeDragOperation(data);\n                }.bind(this));\n\n                this._gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STOPPED, function() {\n                    dragAndDropService.markDragStopped();\n                    this._cleanDragOperation();\n                }.bind(this));\n            };\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#update\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method updates this drag and drop instance in the current page. It is important to execute\n             * this method every time a draggable or droppable element is added or removed from the page DOM.\n             */\n            this.update = function() {\n                dragAndDropService.update(CMS_DRAG_AND_DROP_ID);\n\n                // Add UI helpers -> They identify the places where you can drop components.\n                this._addUIHelpers();\n\n                // Update cache elements AFTER adding UI Helpers\n                this._cacheElements();\n            };\n\n            // Other Event Handlers\n            this._onOverlayUpdate = function() {\n                this.update();\n                return $q.when();\n            }.bind(this);\n\n            // Drag and Drop Event Handlers\n            this.onStart = function(event) {\n                // Find element\n                var targetElm = this._getSelector(event.target);\n                // when the DnD icon is in the more option dropdown, the targetElm is a span and has no data-component-id. Here we get the closest element (i.e. <contextual-menu-item>)\n                if (!targetElm.attr('data-component-id')) {\n                    targetElm = yjQuery(targetElm).closest('[data-component-id]');\n                }\n                var component = targetElm.closest(COMPONENT_SELECTOR);\n                var slot = component.closest(SLOT_SELECTOR);\n\n                // Here if the component evaluated above exits that means the component has been located and we can fetch its attributes \n                // else it is not located as the DnD option is hidden inside the more option of the contextual menu in which case \n                // we find the component/slot info by accessing attributes of the DnD icon.\n                var componentId = component.length > 0 ? componentHandlerService.getId(component) : targetElm.attr('data-component-id');\n                var componentUuid = component.length > 0 ? componentHandlerService.getSlotOperationRelatedUuid(component) : targetElm.attr('data-component-uuid');\n                var componentType = component.length > 0 ? componentHandlerService.getType(component) : targetElm.attr('data-component-type');\n                var slotOperationRelatedId = component.length > 0 ? componentHandlerService.getSlotOperationRelatedId(component) : targetElm.attr('data-component-id');\n                var slotOperationRelatedType = component.length > 0 ? componentHandlerService.getSlotOperationRelatedType(component) : targetElm.attr('data-component-type');\n\n                var slotId = component.length > 0 ? componentHandlerService.getId(slot) : targetElm.attr('data-slot-id');\n                var slotUuid = component.length > 0 ? componentHandlerService.getId(slot) : targetElm.attr('data-slot-uuid');\n\n                var dragInfo = {\n                    componentId: componentId,\n                    componentUuid: componentUuid,\n                    componentType: componentType,\n                    slotUuid: slotUuid,\n                    slotId: slotId,\n                    slotOperationRelatedId: slotOperationRelatedId,\n                    slotOperationRelatedType: slotOperationRelatedType\n                };\n                component.addClass(CSS_CLASSES.COMPONENT_DRAGGED);\n                this._initializeDragOperation(dragInfo);\n                this._toggleKeepVisibleComponentAndSlot(true);\n            }.bind(this);\n\n            this.onDragEnter = function(event) {\n                this._highlightSlot(event);\n            }.bind(this);\n\n            this.onDragOver = function(event) {\n                this._highlightSlot(event).then(function() {\n                    if (!this._highlightedSlot || !this._highlightedSlot.isAllowed) {\n                        return;\n                    }\n\n                    var slotId = componentHandlerService.getId(this._highlightedSlot.original);\n\n                    // Check which component is highlighted\n                    if (this._highlightedHint && this._isMouseInRegion(event, this._highlightedHint)) {\n                        // If right hint is already highlighted don't do anything.\n                        return;\n                    } else if (this._highlightedHint) {\n                        // Hint is not longer hovered.\n                        this._clearHighlightedHint();\n                    }\n\n                    var cachedSlot = this._cachedSlots[slotId];\n                    if (cachedSlot.components.length > 0) {\n                        // Find the hovered component.\n                        if (!this._highlightedComponent || !this._isMouseInRegion(event, this._highlightedComponent)) {\n                            this._clearHighlightedComponent();\n\n                            lodash.forEach(cachedSlot.components, function(component) {\n                                if (this._isMouseInRegion(event, component)) {\n                                    this._highlightedComponent = component;\n                                    return false;\n                                }\n                            }.bind(this));\n                        }\n\n                        // Find the hint, if any, to highlight.\n                        if (this._highlightedComponent) {\n                            lodash.forEach(this._highlightedComponent.hints, function(hint) {\n                                if (this._isMouseInRegion(event, hint)) {\n                                    this._highlightedHint = hint;\n                                    return false;\n                                }\n                            }.bind(this));\n                        }\n                    }\n\n                    if (this._highlightedComponent && this._highlightedComponent.id === this._dragInfo.slotOperationRelatedId) {\n                        this._highlightedComponent.original.addClass(CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\n                    } else if (this._highlightedHint) {\n                        if (this._highlightedSlot.isAllowed) {\n                            this._highlightedHint.original.addClass(\n                                CSS_CLASSES.DROPZONE_HOVERED\n                            );\n                            if (this._highlightedSlot.mayBeAllowed) {\n                                this._highlightedHint.original.addClass(\n                                    CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED\n                                );\n                            }\n                        }\n                    }\n\n                }.bind(this));\n\n            }.bind(this);\n\n            this.onDrop = function(event) {\n                if (this._highlightedSlot) {\n                    var sourceSlotId = this._dragInfo.slotId;\n                    var targetSlotId = componentHandlerService.getId(this._highlightedSlot.original);\n                    var targetSlotUUId = componentHandlerService.getUuid(this._highlightedSlot.original);\n                    var sourceComponentId = this._dragInfo.componentId;\n                    // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\n                    var sourceSlotOperationRelatedId = this._dragInfo.slotOperationRelatedId || this._dragInfo.componentId;\n                    var componentType = this._dragInfo.slotOperationRelatedType || this._dragInfo.componentType;\n\n                    if (!this._highlightedSlot.isAllowed) {\n                        var translation = $translate.instant(\"se.drag.and.drop.not.valid.component.type\", {\n                            slotUID: targetSlotId,\n                            componentUID: sourceSlotOperationRelatedId\n                        });\n                        alertService.showDanger({\n                            message: translation\n                        });\n                        return;\n                    }\n                    if (this._highlightedHint || this._highlightedSlot.components.length === 0) {\n                        var position = (this._highlightedHint) ? this._highlightedHint.position : 0;\n                        var result;\n\n                        waitDialogService.showWaitModal();\n\n                        if (!sourceSlotId) {\n                            if (!sourceComponentId) {\n                                var slotInfo = {\n                                    targetSlotId: targetSlotId,\n                                    targetSlotUUId: targetSlotUUId\n                                };\n                                var catalogVersionUuid = componentHandlerService.getCatalogVersionUuid(this._highlightedSlot.original);\n                                result = componentEditingFacade.addNewComponentToSlot(slotInfo, catalogVersionUuid, componentType, position);\n                            } else {\n\n                                var dragInfo = {\n                                    componentId: sourceComponentId,\n                                    componentUuid: this._dragInfo.componentUuid,\n                                    componentType: componentType\n                                };\n                                var componentProperties = {\n                                    targetSlotId: targetSlotId,\n                                    dragInfo: dragInfo,\n                                    position: position\n                                };\n\n                                result = this._dragInfo.cloneOnDrop ? componentEditingFacade.cloneExistingComponentToSlot(componentProperties) : componentEditingFacade.addExistingComponentToSlot(targetSlotId, dragInfo, position);\n                            }\n                        } else {\n                            if (sourceSlotId === targetSlotId) {\n                                var currentComponentPos = this._getComponentPositionFromCachedSlot(sourceSlotId, sourceComponentId);\n                                if (currentComponentPos < position) {\n                                    // The current component will be removed from its current position, thus the target\n                                    // position needs to take this into account. \n                                    position--;\n                                }\n\n                            }\n                            result = componentEditingFacade.moveComponent(sourceSlotId, targetSlotId, sourceSlotOperationRelatedId, position);\n                        }\n\n                        result.then(function() {\n                            this._scrollToModifiedSlot(targetSlotId);\n                        }.bind(this), function() {\n                            this.onStop(event);\n                        }.bind(this)).finally(function() {\n                            waitDialogService.hideWaitModal();\n                        });\n                    }\n                }\n            }.bind(this);\n\n            this._getComponentPositionFromCachedSlot = function(slotId, componentId) {\n                var cachedSlot = this._cachedSlots[slotId];\n                var componentsInCachedSlot =\n                    cachedSlot && cachedSlot.components ? cachedSlot.components : [];\n                var cachedComponent = componentsInCachedSlot.find(function(component) {\n                    return componentHandlerService.getId(component.original) === componentId;\n                });\n                var currentComponentPos = cachedComponent ?\n                    cachedComponent.position :\n                    componentHandlerService.getComponentPositionInSlot(slotId, componentId);\n                return currentComponentPos;\n            }.bind(this);\n\n            this.onDragLeave = function(event) {\n                if (this._highlightedSlot) {\n                    var slotId = componentHandlerService.getId(this._highlightedSlot.original);\n                    var cachedSlot = this._cachedSlots[slotId];\n\n                    if (!this._isMouseInRegion(event, cachedSlot)) {\n                        this._clearHighlightedSlot();\n                    }\n\n                }\n            }.bind(this);\n\n            this.onStop = function(event) {\n                var component = this._getSelector(event.target).closest(COMPONENT_SELECTOR);\n                this._toggleKeepVisibleComponentAndSlot(false);\n                this._cleanDragOperation(component);\n                systemEventService.publish(CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS.RESTART_PROCESS);\n            }.bind(this);\n\n            // Helpers\n            /**\n             * This function returns the source of the image used as drag image. Currently, the \n             * image is only returned for Safari; all the other browsers display default images \n             * properly. \n             */\n            this._getDragImageSrc = function() {\n                var imagePath = '';\n                if (browserService.isSafari()) {\n                    imagePath = assetsService.getAssetsRoot() + DEFAULT_DRAG_IMG;\n                }\n                return domain + imagePath;\n            };\n\n\n            this._initializeDragOperation = function(dragInfo) {\n                this._dragInfo = dragInfo;\n                this._cacheElements();\n\n                // Prepare UI\n                var overlay = componentHandlerService.getOverlay();\n                overlay.addClass(CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\n\n                // Send an event to signal that the drag operation is started. Other pieces of SE, like contextual menus\n                // need to be aware.\n                systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STARTED);\n            };\n\n            this._cleanDragOperation = function(draggedComponent) {\n                this._clearHighlightedSlot();\n                if (draggedComponent) {\n                    draggedComponent.removeClass(CSS_CLASSES.COMPONENT_DRAGGED);\n                }\n\n                var overlay = componentHandlerService.getOverlay();\n                overlay.removeClass(CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\n                systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STOPPED);\n\n                this._dragInfo = null;\n                this._cachedSlots = {};\n                this._highlightedSlot = null;\n            };\n\n            this._highlightSlot = function(event) {\n                var slot = yjQuery(event.target).closest(SLOT_SELECTOR);\n                var slotId = componentHandlerService.getId(slot);\n\n                var oldSlotId;\n                if (this._highlightedSlot) {\n                    oldSlotId = componentHandlerService.getId(this._highlightedSlot.original);\n\n                    if (oldSlotId !== slotId) {\n                        this._clearHighlightedSlot();\n                    }\n                }\n\n                if (!this._highlightedSlot || this._highlightedSlot.isAllowed === undefined) {\n                    this._highlightedSlot = this._cachedSlots[slotId];\n\n                    var _dragInfo = lodash.cloneDeep(this._dragInfo);\n                    // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\n                    _dragInfo.componentId = this._dragInfo.slotOperationRelatedId || this._dragInfo.componentId;\n                    _dragInfo.componentType = this._dragInfo.slotOperationRelatedType || this._dragInfo.componentType;\n                    if (_dragInfo.cloneOnDrop) {\n                        delete _dragInfo.componentId;\n                    }\n\n                    return slotRestrictionsService.isComponentAllowedInSlot(this._highlightedSlot, _dragInfo).then(function(isComponentAllowed) {\n                        slotRestrictionsService.isSlotEditable(slotId).then(function(slotIsEditable) {\n                            // The highlighted slot might have changed while waiting for the promise to be resolved.\n                            if (this._highlightedSlot && this._highlightedSlot.id === slotId) {\n                                this._highlightedSlot.isAllowed = (isComponentAllowed && slotIsEditable) || this._dragInfo.slotId === slotId;\n\n                                var isAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.ALLOWED && slotIsEditable;\n                                var mayBeAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED && slotIsEditable;\n\n                                /* Basically the component could be allowed to drop in the slot if the isComponentAllowed status is either ALLOWED or MAYBEALLOWED.\n                                 * But in order to differentiate between ALLOWED and MAYBEALLOWED, we store it in highlightedSlot.isAllowed and highlightedSlot.mayBeAllowed respectively.\n                                 */\n                                this._highlightedSlot.isAllowed = isAllowed || mayBeAllowed;\n                                this._highlightedSlot.mayBeAllowed = mayBeAllowed;\n\n                                if (this._highlightedSlot.isAllowed) {\n                                    slot.addClass(CSS_CLASSES.SLOT_ALLOWED);\n                                    if (mayBeAllowed) {\n                                        slot.addClass(CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\n                                    }\n                                } else {\n                                    slot.addClass(CSS_CLASSES.SLOT_NOT_ALLOWED);\n                                }\n\n                                if (event.type === \"dragenter\" && (!oldSlotId || oldSlotId !== slotId)) {\n                                    if (this._highlightedSlot && this._highlightedSlot.id === slotId) {\n                                        systemEventService.publish(slotId + '_SHOW_SLOT_MENU');\n                                        systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_OVER, slotId); // can be used to perform any actions on encountering a drag over event.\n                                    }\n                                }\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                }\n\n                return $q.when();\n            };\n\n            this._addUIHelpers = function() {\n                var overlay = componentHandlerService.getOverlay();\n\n                // First remove all dropzones.\n                overlay.find('.' + CSS_CLASSES.UI_HELPER_OVERLAY).remove();\n\n                overlay.find(SLOT_SELECTOR).each(function() {\n                    var slot = yjQuery(this);\n                    var slotHeight = slot[0].offsetHeight;\n                    var slotWidth = slot[0].offsetWidth;\n\n                    var components = slot.find(COMPONENT_SELECTOR);\n\n                    if (components.length === 0) {\n                        var uiHelperOverlay = yjQuery(\"<div></div>\");\n                        uiHelperOverlay.addClass(CSS_CLASSES.UI_HELPER_OVERLAY);\n\n                        var uiHelper = yjQuery(\"<div></div>\");\n                        uiHelper.addClass(CSS_CLASSES.DROPZONE);\n                        uiHelper.addClass(CSS_CLASSES.DROPZONE_FULL);\n\n                        uiHelperOverlay.height(slotHeight);\n                        uiHelperOverlay.width(slotWidth);\n\n                        uiHelperOverlay.append(uiHelper);\n                        slot.append(uiHelperOverlay);\n                    } else {\n                        components.each(function() {\n                            var component = yjQuery(this);\n                            var componentHeight = component[0].offsetHeight;\n                            var componentWidth = component[0].offsetWidth;\n\n                            var uiHelperOverlay = yjQuery(\"<div></div>\");\n                            uiHelperOverlay.addClass(CSS_CLASSES.UI_HELPER_OVERLAY);\n\n                            uiHelperOverlay.height(componentHeight);\n                            uiHelperOverlay.width(componentWidth);\n\n                            var firstHelper = yjQuery('<div></div>');\n                            var secondHelper = yjQuery('<div></div>');\n\n                            firstHelper.addClass(CSS_CLASSES.DROPZONE);\n                            secondHelper.addClass(CSS_CLASSES.DROPZONE);\n\n                            if (componentWidth === slotWidth) {\n                                firstHelper.addClass(CSS_CLASSES.DROPZONE_TOP);\n                                secondHelper.addClass(CSS_CLASSES.DROPZONE_BOTTOM);\n                            } else {\n                                firstHelper.addClass(CSS_CLASSES.DROPZONE_LEFT);\n                                secondHelper.addClass(CSS_CLASSES.DROPZONE_RIGHT);\n                            }\n\n                            uiHelperOverlay.append(firstHelper);\n                            uiHelperOverlay.append(secondHelper);\n\n                            component.append(uiHelperOverlay);\n                        });\n                    }\n                });\n            };\n\n            this._cacheElements = function() {\n                var overlay = componentHandlerService.getOverlay();\n                if (!overlay) {\n                    return;\n                }\n\n                var currentService = this;\n                var scrollY = this._getWindowScrolling();\n\n                overlay.find(SLOT_SELECTOR).each(function() {\n                    var slot = yjQuery(this);\n                    var slotId = componentHandlerService.getId(slot);\n                    var slotUuid = componentHandlerService.getUuid(slot);\n\n                    // Fetch all components (visible or not) in each slot to get proper position values.\n                    // The componentHandlerService.getComponentPositionInSlot method is not used here, because it's only based on visible components in the DOM.\n                    pageContentSlotsComponentsRestService.getComponentsForSlot(slotId).then(function(componentsForSlot) {\n                        var cachedSlot = {\n                            id: slotId,\n                            uuid: slotUuid,\n                            original: slot,\n                            components: [],\n                            rect: currentService._getElementRects(slot, scrollY)\n                        };\n\n                        var components = slot.children(COMPONENT_SELECTOR);\n                        if (components.length === 0) {\n                            var hint = slot.find(HINT_SELECTOR);\n                            cachedSlot.hint = (hint.length > 0) ? {\n                                original: hint,\n                                rect: currentService._getElementRects(hint, scrollY)\n                            } : null;\n                        } else {\n\n                            components.each(function(index) {\n                                var component = yjQuery(this);\n                                var positionInSlot = componentsForSlot.findIndex(function(componentInSlot) {\n                                    return (\n                                        componentInSlot.uuid ===\n                                        componentHandlerService.getUuid(component)\n                                    );\n                                });\n                                if (positionInSlot === -1) {\n                                    positionInSlot = index;\n                                }\n                                var cachedComponent = {\n                                    id: componentHandlerService.getSlotOperationRelatedId(component),\n                                    type: componentHandlerService.getSlotOperationRelatedType(component),\n                                    original: component,\n                                    position: positionInSlot,\n                                    hints: [],\n                                    rect: currentService._getElementRects(component, scrollY)\n                                };\n\n                                var positionInComponent = positionInSlot++;\n                                component.find(HINT_SELECTOR).each(function() {\n                                    var hint = yjQuery(this);\n                                    var cachedHint = {\n                                        original: hint,\n                                        position: positionInComponent++,\n                                        rect: currentService._getElementRects(hint, scrollY)\n                                    };\n\n                                    cachedComponent.hints.push(cachedHint);\n                                });\n\n                                cachedSlot.components.push(cachedComponent);\n                            });\n                        }\n\n                        currentService._cachedSlots[cachedSlot.id] = cachedSlot;\n                    });\n\n                });\n            };\n\n            this._clearHighlightedHint = function() {\n                if (this._highlightedHint) {\n                    this._highlightedHint.original.removeClass(CSS_CLASSES.DROPZONE_HOVERED);\n                    this._highlightedHint.original.removeClass(CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED);\n                    this._highlightedHint = null;\n                }\n            };\n\n            this._clearHighlightedComponent = function() {\n                this._clearHighlightedHint();\n                if (this._highlightedComponent) {\n                    this._highlightedComponent.original.removeClass(CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\n                    this._highlightedComponent = null;\n                }\n            };\n\n            this._clearHighlightedSlot = function() {\n                this._clearHighlightedComponent();\n\n                if (this._highlightedSlot) {\n                    this._highlightedSlot.original.removeClass(CSS_CLASSES.SLOT_ALLOWED);\n                    this._highlightedSlot.original.removeClass(CSS_CLASSES.SLOT_NOT_ALLOWED);\n                    this._highlightedSlot.original.removeClass(CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\n                    systemEventService.publish('HIDE_SLOT_MENU');\n                    systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_LEAVE); // can be used to perform any actions on encountering a drag leave event.\n                }\n\n                this._highlightedSlot = null;\n            };\n\n            this._isMouseInRegion = function(event, element) {\n                var boundingRect = element.rect;\n\n                return (event.pageX >= boundingRect.left && event.pageX <= boundingRect.right && event.pageY >= boundingRect.top && event.pageY <= boundingRect.bottom);\n            };\n\n            this._getElementRects = function(element, scrollY) {\n                var baseRect = element[0].getBoundingClientRect();\n                var rect = {\n                    left: baseRect.left,\n                    right: baseRect.right,\n                    bottom: baseRect.bottom + scrollY,\n                    top: baseRect.top + scrollY\n                };\n\n                return rect;\n            };\n\n            this._getWindowScrolling = function() {\n                return ($window.scrollY || $window.pageYOffset);\n            };\n\n            this._scrollToModifiedSlot = function(componentId) {\n                var component = componentHandlerService.getComponentInOverlay(componentId, CONTENT_SLOT_TYPE);\n                if (component && component.length > 0) {\n                    component[0].scrollIntoView();\n                }\n            };\n\n            this._getSelector = function(selector) {\n                return yjQuery(selector);\n            };\n\n            /**\n             * when a PROCESS_COMPONENTS is occuring, it could remove the currently dragged component if this one is not in the viewport.\n             * To avoid having the dragged component and it's slot removed we mark then as \"KEEP_VISIBLE\" when the drag and drop start.\n             * On drag end, an event is sent to call a RESTART_PROCESS to add or remove the components according to their viewport visibility and the component and slot are marked as \"PROCESS\".\n             * Using yjQuery.each() here because of MiniCart component (among other slots/compoents) that have multiple occurences in DOM.\n             */\n            this._toggleKeepVisibleComponentAndSlot = function(keepVisible) {\n                if (this._dragInfo) {\n                    var status = keepVisible ? CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.KEEP_VISIBLE : CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.PROCESS;\n                    yjQuery.each(componentHandlerService.getComponentUnderSlot(this._dragInfo.componentId, this._dragInfo.componentType, this._dragInfo.slotId), function(idx, element) {\n                        element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status;\n                    });\n                    yjQuery.each(componentHandlerService.getComponent(this._dragInfo.slotId, CONTENT_SLOT_TYPE), function(idx, element) {\n                        element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status;\n                    });\n                }\n            };\n        });\n})();\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/componentEditingFacadeService.js\":\n/*!**************************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/dragAndDrop/componentEditingFacadeService.js ***!\n  \\**************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name componentEditingFacadeModule\n * @description\n * # The componentEditingFacadeModule\n *\n * The componentEditingFacadeModule contains a service with methods that allow adding or removing components in the page.\n *\n */\nangular.module('componentEditingFacadeModule', [\n        'alertServiceModule',\n        'cmsSmarteditServicesModule',\n        'componentVisibilityAlertServiceModule',\n        'cmsSmarteditServicesModule',\n        'renderServiceModule',\n        'slotVisibilityServiceModule',\n        'translationServiceModule',\n        'functionsModule'\n    ])\n    .constant('COMPONENT_CREATED_EVENT', 'COMPONENT_CREATED_EVENT')\n    .constant('COMPONENT_UPDATED_EVENT', 'COMPONENT_UPDATED_EVENT')\n    /**\n     * @ngdoc service\n     * @name componentEditingFacadeModule.service:componentEditingFacade\n     *\n     * @description\n     * This service provides methods that allow adding or removing components in the page.\n     */\n    .service('componentEditingFacade', function($log, $q, $translate, copy, componentService, systemEventService, crossFrameEventService, pageInfoService, restServiceFactory, editorModalService, renderService, alertService, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI, componentVisibilityAlertService, slotVisibilityService, sharedDataService, COMPONENT_CREATED_EVENT, COMPONENT_UPDATED_EVENT, EVENT_SMARTEDIT_COMPONENT_UPDATED) {\n\n        var _contentSlotComponentsRestService;\n\n        function _generateAndAlertSuccessMessage(sourceComponentId, targetSlotId) {\n            alertService.showSuccess({\n                message: \"se.cms.draganddrop.success\",\n                messagePlaceholders: {\n                    sourceComponentId: sourceComponentId,\n                    targetSlotId: targetSlotId\n                }\n            });\n        }\n\n        function _generateAndAlertErrorMessage(sourceComponentId, targetSlotId, requestResponse, alertConf) {\n            if (requestResponse && requestResponse.data && requestResponse.data.errors && requestResponse.data.errors.length > 0) {\n                alertService.showDanger({\n                    message: \"se.cms.draganddrop.error\",\n                    messagePlaceholders: {\n                        sourceComponentId: sourceComponentId,\n                        targetSlotId: targetSlotId,\n                        detailedError: requestResponse.data.errors[0].message\n                    }\n                });\n            } else if (alertConf) {\n                alertService.showDanger(alertConf);\n            }\n        }\n\n        function _renderSlots(slots, sourceComponentId, targetSlotId, showSuccess) {\n            return renderService.renderSlots(slots).then(function() {\n                return slotVisibilityService.reloadSlotsInfo().then(function() {\n                    if (showSuccess) {\n                        _generateAndAlertSuccessMessage(sourceComponentId, targetSlotId);\n                    }\n                    return $q.when();\n                }, function(e) {\n                    $log.error('componentEditingFacadeModule._renderSlots::slotVisibilityService.reloadSlotsInfo');\n                    $log.error(e);\n                    return $q.reject(e);\n                });\n            }, function(e) {\n                $log.error('componentEditingFacadeModule._renderSlots::renderService.renderSlots - targetSlotId:', targetSlotId);\n                $log.error(e);\n                _generateAndAlertErrorMessage(sourceComponentId, targetSlotId, e);\n                return $q.reject(e);\n            });\n        }\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#addNewComponentToSlot\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods adds a new component to the slot and opens a component modal to edit its properties.\n         *\n         * @param {Object} slotInfo The target slot for the new component\n         * @param {Object} slotInfo.targetSlotId The Uid of the slot where to drop the new component.\n         * @param {Object} slotInfo.targetSlotUUId The UUid of the slot where to drop the new component.\n         * @param {String} catalogVersionUuid The catalog version on which to create the new component\n         * @param {String} componentType The type of the new component to add.\n         * @param {Number} position The position in the slot where to add the new component.\n         *\n         */\n        this.addNewComponentToSlot = function(slotInfo, catalogVersionUuid, componentType, position) {\n            var componentAttributes = {\n                smarteditComponentType: componentType,\n                catalogVersionUuid: catalogVersionUuid\n            };\n            return editorModalService.open(componentAttributes, slotInfo.targetSlotUUId, position).then(function(response) {\n                componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                    itemId: response.uuid,\n                    itemType: response.itemtype,\n                    catalogVersion: response.catalogVersion,\n                    restricted: response.restricted,\n                    slotId: slotInfo.targetSlotId,\n                    visible: response.visible\n                });\n\n                crossFrameEventService.publish(COMPONENT_CREATED_EVENT, response);\n                return _renderSlots([slotInfo.targetSlotId], response.uid, slotInfo.targetSlotId, true);\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#addExistingComponentToSlot\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods adds an existing component to the slot and display an Alert whenever the component is either hidden or restricted.\n         *\n         * @param {String} targetSlotId The ID of the slot where to drop the component.\n         * @param {Object} dragInfo The dragInfo object containing the componentId, componentUuid and componentType.\n         * @param {Number} position The position in the slot where to add the component.\n         *\n         */\n        this.addExistingComponentToSlot = function(targetSlotId, dragInfo, position) {\n            return pageInfoService.getPageUID().then(function(pageId) {\n                return componentService.addExistingComponent(pageId, dragInfo.componentId, targetSlotId, position).then(\n                    function() {\n                        return componentService.loadComponentItem(dragInfo.componentUuid).then(function(item) {\n                            componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                                itemId: dragInfo.componentUuid,\n                                itemType: dragInfo.componentType,\n                                catalogVersion: item.catalogVersion,\n                                restricted: item.restricted,\n                                slotId: targetSlotId,\n                                visible: item.visible\n                            });\n\n                            // 1. First update the cache. \n                            systemEventService.publish(COMPONENT_UPDATED_EVENT, item);\n\n                            // 2. Then replay decorators (via EVENT_SMARTEDIT_COMPONENT_UPDATED). \n                            // This is important because there might be existing instances of the component in the page that need to \n                            // be updated. For example, if the component was not shared, it would not show the SharedComponent contextual button.\n                            // However, if a user adds another instance into the page then the component becomes shared. Both instances of the \n                            // component must show that the component is shared now. Thus, the first instance needs to be updated too. \n                            crossFrameEventService.publish(EVENT_SMARTEDIT_COMPONENT_UPDATED, {\n                                componentId: dragInfo.componentId,\n                                componentType: dragInfo.componentType,\n                                componentUuid: dragInfo.componentUuid,\n                                requiresReplayingDecorators: true\n                            });\n\n                            return _renderSlots(targetSlotId, dragInfo.componentId, targetSlotId, true);\n                        }, function(response) {\n                            _generateAndAlertErrorMessage(dragInfo.componentId, targetSlotId, response);\n                            return $q.reject();\n                        });\n                    },\n                    function(response) {\n                        _generateAndAlertErrorMessage(dragInfo.componentId, targetSlotId, response);\n                        return $q.reject();\n                    }\n                );\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#cloneExistingComponentToSlot\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods clones an existing component to the slot by opening a component modal to edit its properties.\n         *\n         * @param {Object} componentProperties The properties of the component required to create a clone\n         * @param {String} componentProperties.targetSlotId The ID of the slot where to drop the component.\n         * @param {Object} componentProperties.dragInfo The dragInfo object containing the componentId, componentUuid and componentType.\n         * @param {Number} componentProperties.position The position in the slot where to add the component.\n         *\n         */\n        this.cloneExistingComponentToSlot = function(componentProperties) {\n            return componentService.loadComponentItem(componentProperties.dragInfo.componentUuid).then(function(_component) {\n                return sharedDataService.get('experience').then(function(experience) {\n                    var component = copy(_component);\n                    // while cloning an existing components, remove some parameters, reset catalogVersion to the version of the page.\n                    // if cloning an existing component, prefix na me and drop restrictions - doing this here will make generic editor dirty and enable save by default\n                    component.componentUuid = component.uuid;\n                    component.cloneComponent = true;\n                    component.catalogVersion = experience.pageContext.catalogVersionUuid;\n                    component.name = $translate.instant('se.cms.component.name.clone.of.prefix') + ' ' + component.name;\n\n                    delete component.uuid;\n                    delete component.uid;\n                    delete component.slots;\n                    delete component.restrictions;\n                    delete component.creationtime;\n                    delete component.modifiedtime;\n\n                    var componentAttributes = {\n                        smarteditComponentType: componentProperties.dragInfo.componentType,\n                        catalogVersionUuid: experience.pageContext.catalogVersionUuid,\n                        content: copy(component),\n                        initialDirty: true\n                    };\n                    return editorModalService.open(componentAttributes, componentProperties.targetSlotId, componentProperties.position).then(function(item) {\n                        componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                            itemId: item.uuid,\n                            itemType: item.itemtype,\n                            catalogVersion: item.catalogVersion,\n                            restricted: item.restricted,\n                            slotId: componentProperties.targetSlotId,\n                            visible: item.visible\n                        });\n\n                        crossFrameEventService.publish(COMPONENT_CREATED_EVENT, item);\n                        return _renderSlots(componentProperties.targetSlotId, item.uid, componentProperties.targetSlotId, true);\n                    });\n                });\n            }, function(response) {\n                _generateAndAlertErrorMessage(componentProperties.dragInfo.componentId, componentProperties.targetSlotId, response);\n                return $q.reject();\n            });\n        };\n\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#moveComponent\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods moves a component from two slots in a page.\n         *\n         * @param {String} sourceSlotId The ID of the slot where the component is initially located.\n         * @param {String} targetSlotId The ID of the slot where to drop the component.\n         * @param {String} componentId The ID of the component to add into the slot.\n         * @param {Number} position The position in the slot where to add the component.\n         *\n         */\n        this.moveComponent = function(sourceSlotId, targetSlotId, componentId, position) {\n            var contentSlotComponentsResourceLocation = PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI + '/pages/:pageId/contentslots/:currentSlotId/components/:componentId';\n            _contentSlotComponentsRestService = _contentSlotComponentsRestService || restServiceFactory.get(contentSlotComponentsResourceLocation, 'componentId');\n\n            return pageInfoService.getPageUID().then(function(pageId) {\n                return _contentSlotComponentsRestService.update({\n                    pageId: pageId,\n                    currentSlotId: sourceSlotId,\n                    componentId: componentId,\n                    slotId: targetSlotId,\n                    position: position\n                }).then(\n                    function() {\n                        return _renderSlots([sourceSlotId, targetSlotId], componentId, targetSlotId);\n                    },\n                    function(response) {\n                        _generateAndAlertErrorMessage(componentId, targetSlotId, response, {\n                            message: \"se.cms.draganddrop.move.failed\",\n                            messagePlaceholders: {\n                                slotID: targetSlotId,\n                                componentID: componentId\n                            }\n                        });\n                        return $q.reject();\n                    }\n                );\n            });\n        };\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/slotRestrictionsService.js\":\n/*!********************************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/dragAndDrop/slotRestrictionsService.js ***!\n  \\********************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotRestrictionsServiceModule\n * @description\n * # The slotRestrictionsServiceModule\n *\n * The slotRestrictionsServiceModule contains a service that caches and returns the restrictions of a slot in a page. This restrictions determine\n * whether a component of a certain type is allowed or forbidden in a particular slot.\n *\n */\n/* jshint undef:false */\n\nangular\n    .module('slotRestrictionsServiceModule', [\n        'yLoDashModule',\n        'slotSharedServiceModule',\n        'functionsModule',\n        'cmsSmarteditServicesModule'\n    ])\n    .constant('CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT', 100)\n    .constant('COMPONENT_IN_SLOT_STATUS', {\n        ALLOWED: 'allowed',\n        DISALLOWED: 'disallowed',\n        MAYBEALLOWED: 'mayBeAllowed'\n    })\n    /**\n     * @ngdoc service\n     * @name slotRestrictionsServiceModule.service:slotRestrictionsService\n     *\n     * @description\n     * This service provides methods that cache and return the restrictions of a slot in a page. This restrictions determine\n     * whether a component of a certain type is allowed or forbidden in a particular slot.\n     */\n    .service('slotRestrictionsService', function(\n        $log,\n        lodash,\n        isBlank,\n        yjQuery,\n        gatewayProxy,\n        crossFrameEventService,\n        EVENTS,\n        componentHandlerService,\n        pageInfoService,\n        slotSharedService,\n        restServiceFactory,\n        pageContentSlotsComponentsRestService,\n        typePermissionsRestService,\n        CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI,\n        CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT,\n        COMPONENT_IN_SLOT_STATUS,\n        CONTENT_SLOT_TYPE\n    ) {\n        var _slotRestrictions = {};\n        var _currentPageId = null;\n        var _slotsRestrictionsRestService;\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#getAllComponentTypesSupportedOnPage\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         * @deprecated since 2005\n         * @description\n         * This methods retrieves the list of component types droppable in at least one of the slots of the current page\n         * @returns {Promise} A promise containing an array with the component types droppable on the current page\n         */\n        this.getAllComponentTypesSupportedOnPage = function() {\n            var slots = yjQuery(componentHandlerService.getAllSlotsSelector());\n            var slotIds = Array.prototype.slice.call(\n                slots.map(function() {\n                    return componentHandlerService.getId(yjQuery(this));\n                })\n            );\n\n            return Promise.all(\n                slotIds.map(\n                    function(slotId) {\n                        return this.getSlotRestrictions(slotId);\n                    }.bind(this)\n                )\n            ).then(\n                function(arrayOfSlotRestrictions) {\n                    return lodash.flatten(arrayOfSlotRestrictions);\n                },\n                function(error) {\n                    $log.info(error);\n                }\n            );\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#getSlotRestrictions\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         * @description\n         * This methods retrieves the list of restrictions applied to the slot identified by the provided ID.\n         *\n         * @param {String} slotId The ID of the slot whose restrictions to retrieve.\n         * @returns {Promise} A promise containing an array with the restrictions applied to the slot.\n         */\n        this.getSlotRestrictions = function(slotId) {\n            return this._getPageUID(_currentPageId).then(\n                function(pageId) {\n                    _currentPageId = pageId;\n                    var restrictionId = this._getEntryId(_currentPageId, slotId);\n                    if (_slotRestrictions[restrictionId]) {\n                        return Promise.resolve(_slotRestrictions[restrictionId]);\n                    } else if (this._isExternalSlot(slotId)) {\n                        _slotRestrictions[restrictionId] = [];\n                        return Promise.resolve([]);\n                    }\n                    return Promise.resolve();\n                }.bind(this)\n            );\n        };\n\n        this._cacheSlotsRestrictions = function() {\n            var originalSlotIds = componentHandlerService.getAllSlotUids() || [];\n            originalSlotIds = originalSlotIds.filter(\n                function(slotId) {\n                    return !this._isExternalSlot(slotId, CONTENT_SLOT_TYPE);\n                }.bind(this)\n            );\n            var uniqueSlotIds = lodash.uniq(originalSlotIds);\n            var chunks = lodash.chunk(uniqueSlotIds, CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT);\n            return this._recursiveFetchSlotsRestrictions(chunks, 0);\n        };\n\n        // Recursively fetch slots restrictions by the number of chunks of slotIds split by fetch limit\n        this._recursiveFetchSlotsRestrictions = function(slotIdsByChunks, chunkIndex) {\n            if (chunkIndex === slotIdsByChunks.length) {\n                return Promise.resolve();\n            }\n            return this._fetchSlotsRestrictions(slotIdsByChunks[chunkIndex]).then(\n                function() {\n                    return this._recursiveFetchSlotsRestrictions(slotIdsByChunks, chunkIndex + 1);\n                }.bind(this)\n            );\n        };\n\n        // Fetch slot restriction and cache them in-memory\n        this._fetchSlotsRestrictions = function(slotIds) {\n            return this._getPageUID(_currentPageId).then(\n                function(pageId) {\n                    _currentPageId = pageId;\n\n                    _slotsRestrictionsRestService =\n                        _slotsRestrictionsRestService ||\n                        restServiceFactory.get(\n                            CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI,\n                            _currentPageId\n                        );\n\n                    return _slotsRestrictionsRestService\n                        ._saveAndGetArray({\n                            slotIds: slotIds,\n                            pageUid: _currentPageId\n                        })\n                        .then(\n                            function(response) {\n                                var contentSlots = response || [];\n                                contentSlots.forEach(\n                                    function(slot) {\n                                        var restrictionId = this._getEntryId(\n                                            _currentPageId,\n                                            slot.contentSlotUid\n                                        );\n                                        _slotRestrictions[restrictionId] = slot.validComponentTypes;\n                                    }.bind(this)\n                                );\n                                return Promise.resolve();\n                            }.bind(this),\n                            function(error) {\n                                $log.info(error);\n                                return Promise.reject();\n                            }\n                        );\n                }.bind(this)\n            );\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#isComponentAllowedInSlot\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         *\n         * @description\n         * This methods determines whether a component of the provided type is allowed in the slot.\n         *\n         * @param {Object} slot the slot for which to verify if it allows a component of the provided type.\n         * @param {String} slot.id The ID of the slot.\n         * @param {Array} slot.components the list of components contained in the slot, they must contain an \"id\" property.\n         * @param {Object} dragInfo contains the dragged object information\n         * @param {String} dragInfo.componentType The smartedit type of the component being checked.\n         * @param {String} dragInfo.componentId The smartedit id of the component being checked.\n         * @param {String} dragInfo.slotId The smartedit id of the slot from which the component originates\n         * @param {String} dragInfo.cloneOnDrop The boolean that determines if the component should be cloned or not\n         * @returns {Promise} A promise containing COMPONENT_IN_SLOT_STATUS (ALLOWED, DISALLOWED, MAYBEALLOWED) string that determines whether a component of the provided type is allowed in the slot.\n         */\n        this.isComponentAllowedInSlot = function(slot, dragInfo) {\n            return this.getSlotRestrictions(slot.id).then(function(currentSlotRestrictions) {\n                return pageContentSlotsComponentsRestService\n                    .getComponentsForSlot(slot.id)\n                    .then(function(componentsForSlot) {\n                        var isComponentIdAllowed =\n                            slot.id === dragInfo.slotId ||\n                            !componentsForSlot.some(function(component) {\n                                return component.uid === dragInfo.componentId;\n                            });\n\n                        if (isComponentIdAllowed) {\n                            if (currentSlotRestrictions) {\n                                return lodash.includes(\n                                        currentSlotRestrictions,\n                                        dragInfo.componentType\n                                    ) ?\n                                    Promise.resolve(COMPONENT_IN_SLOT_STATUS.ALLOWED) :\n                                    Promise.resolve(COMPONENT_IN_SLOT_STATUS.DISALLOWED);\n                            } else {\n                                return Promise.resolve(COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED);\n                            }\n                        }\n                        return Promise.resolve(COMPONENT_IN_SLOT_STATUS.DISALLOWED);\n                    });\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#isSlotEditable\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         *\n         * @description\n         * This method determines whether slot is editable or not.\n         *\n         * @param {String} slotId The ID of the slot.\n         *\n         * @returns {Promise} A promise containing a boolean flag that shows whether if the slot is editable or not.\n         */\n        this.isSlotEditable = function(slotId) {\n            return typePermissionsRestService.hasUpdatePermissionForTypes([CONTENT_SLOT_TYPE]).then(\n                function(slotPermissions) {\n                    return slotSharedService.isSlotShared(slotId).then(\n                        function(isShared) {\n                            var result = slotPermissions[CONTENT_SLOT_TYPE];\n                            if (isShared) {\n                                var isExternalSlot = this._isExternalSlot(slotId);\n                                result =\n                                    result &&\n                                    !isExternalSlot &&\n                                    !slotSharedService.areSharedSlotsDisabled();\n                            }\n\n                            return result;\n                        }.bind(this)\n                    );\n                }.bind(this)\n            );\n        };\n\n        this._emptyCache = function() {\n            _slotRestrictions = {};\n            _currentPageId = null;\n        };\n\n        this._getEntryId = function(pageId, slotId) {\n            return pageId + '_' + slotId;\n        };\n\n        this._isExternalSlot = function(slotId) {\n            return componentHandlerService.isExternalComponent(slotId, CONTENT_SLOT_TYPE);\n        };\n\n        this._getPageUID = function(pageUID) {\n            return !isBlank(pageUID) ? Promise.resolve(pageUID) : pageInfoService.getPageUID();\n        };\n\n        crossFrameEventService.subscribe(\n            EVENTS.PAGE_CHANGE,\n            function() {\n                this._emptyCache();\n                this._cacheSlotsRestrictions();\n            }.bind(this)\n        );\n\n        gatewayProxy.initForService(\n            this,\n            ['getAllComponentTypesSupportedOnPage', 'getSlotRestrictions'],\n            'SLOT_RESTRICTIONS'\n        );\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/editorEnablerService.js\":\n/*!*****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/editorEnablerService.js ***!\n  \\*****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name editorEnablerServiceModule\n * @description\n * # The editorEnablerServiceModule\n *\n * The editor enabler service module provides a service that allows enabling the Edit Component contextual menu item,\n * providing a SmartEdit CMS admin the ability to edit various properties of the given component.\n */\nangular.module(\"editorEnablerServiceModule\", [\n        \"componentVisibilityAlertServiceModule\",\n        \"slotRestrictionsServiceModule\",\n        \"cmsSmarteditServicesModule\"\n    ])\n\n    /**\n     * @ngdoc service\n     * @name editorEnablerServiceModule.service:editorEnablerService\n     *\n     * @description\n     * Convenience service to attach the open editor modal action to the contextual menu of a given component type, or\n     * given regex corresponding to a selection of component types.\n     *\n     * Example: The Edit button is added to the contextual menu of the CMSParagraphComponent, and all types postfixed\n     * with BannerComponent.\n     *\n     * <pre>\n     angular.module('app', ['editorEnablerServiceModule'])\n     .run(function(editorEnablerService) {\n                editorEnablerService.enableForComponents(['CMSParagraphComponent', '*BannerComponent']);\n            });\n     * </pre>\n     */\n    .factory(\"editorEnablerService\", function(\n        COMPONENT_UPDATED_EVENT,\n        systemEventService,\n        componentVisibilityAlertService,\n        componentHandlerService,\n        editorModalService,\n        featureService,\n        slotRestrictionsService\n    ) {\n\n        // Class Definition\n        function EditorEnablerService() {\n\n            this._editButtonCallback = this._editButtonCallback.bind(this);\n        }\n\n        // Private\n\n\n        EditorEnablerService.prototype._key = \"se.cms.edit\";\n\n        EditorEnablerService.prototype._nameI18nKey = \"se.cms.contextmenu.nameI18nKey.edit\";\n\n        EditorEnablerService.prototype._i18nKey = \"se.cms.contextmenu.title.edit\";\n\n        EditorEnablerService.prototype._descriptionI18nKey = \"se.cms.contextmenu.descriptionI18n.edit\";\n\n        EditorEnablerService.prototype._editDisplayClass = \"editbutton\";\n\n        EditorEnablerService.prototype._editDisplayIconClass = \"sap-icon--edit\";\n\n        EditorEnablerService.prototype._editDisplaySmallIconClass = \"sap-icon--edit\";\n\n        EditorEnablerService.prototype._editButtonCallback = function(contextualMenuParams) {\n            var slotUuid = contextualMenuParams.slotUuid;\n\n            if (!this.inUse) {\n                this.inUse = true;\n                editorModalService.open(contextualMenuParams.componentAttributes).then(function(item) {\n                    this.inUse = false;\n                    systemEventService.publish(COMPONENT_UPDATED_EVENT, item);\n                    return componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                        itemId: item.uuid,\n                        itemType: item.itemtype,\n                        catalogVersion: item.catalogVersion,\n                        restricted: item.restricted,\n                        slotId: slotUuid,\n                        visible: item.visible\n                    });\n                }.bind(this), function() {\n                    this.inUse = false;\n                }.bind(this));\n            }\n        };\n\n        EditorEnablerService.prototype._condition = function(contextualMenuParams) {\n            var slotId = componentHandlerService.getParentSlotForComponent(contextualMenuParams.element);\n\n            return slotRestrictionsService.isSlotEditable(slotId).then(function(isSlotEditable) {\n                return isSlotEditable && !componentHandlerService.isExternalComponent(contextualMenuParams.componentId, contextualMenuParams.componentType);\n            });\n        };\n\n        // Public\n        /**\n         * @ngdoc method\n         * @name editorEnablerServiceModule.service:editorEnablerService#enableForComponents\n         * @methodOf editorEnablerServiceModule.service:editorEnablerService\n         *\n         * @description\n         * Enables the Edit contextual menu item for the given component types.\n         *\n         * @param {Array} componentTypes The list of component types, as defined in the platform, for which to enable the\n         * Edit contextual menu.\n         */\n        EditorEnablerService.prototype.enableForComponents = function(componentTypes) {\n            var contextualMenuConfig = {\n                key: this._key, // It's the same key as the i18n, however here we're not doing any i18n work.\n                nameI18nKey: this._nameI18nKey,\n                descriptionI18nKey: this._descriptionI18nKey,\n                priority: 400,\n                regexpKeys: componentTypes,\n                displayClass: this._editDisplayClass,\n                displayIconClass: this._editDisplayIconClass,\n                displaySmallIconClass: this._editDisplaySmallIconClass,\n                i18nKey: this._i18nKey,\n                condition: this._condition,\n                permissions: ['se.context.menu.edit.component'],\n                action: {\n                    callback: this._editButtonCallback\n                }\n            };\n\n            featureService.addContextualMenuButton(contextualMenuConfig);\n        };\n\n        // Factory Definition\n        return new EditorEnablerService();\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/index.ts\":\n/*!**************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/index.ts ***!\n  \\**************************************************************/\n/*! exports provided: IHiddenComponentMenu, HiddenComponentMenuService, SlotContainerService, CmsSmarteditServicesModule, ComponentSharedService, PageService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _IHiddenComponentMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IHiddenComponentMenu */ \"./jsTarget/web/features/cmssmartedit/services/IHiddenComponentMenu.ts\");\n/* harmony import */ var _IHiddenComponentMenu__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_IHiddenComponentMenu__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IHiddenComponentMenu\", function() { return _IHiddenComponentMenu__WEBPACK_IMPORTED_MODULE_0__[\"IHiddenComponentMenu\"]; });\n\n/* harmony import */ var _HiddenComponentMenuService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HiddenComponentMenuService */ \"./jsTarget/web/features/cmssmartedit/services/HiddenComponentMenuService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HiddenComponentMenuService\", function() { return _HiddenComponentMenuService__WEBPACK_IMPORTED_MODULE_1__[\"HiddenComponentMenuService\"]; });\n\n/* harmony import */ var _slotContainerService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slotContainerService */ \"./jsTarget/web/features/cmssmartedit/services/slotContainerService.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SlotContainerService\", function() { return _slotContainerService__WEBPACK_IMPORTED_MODULE_2__[\"SlotContainerService\"]; });\n\n/* harmony import */ var _cmsSmarteditServicesModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cmsSmarteditServicesModule */ \"./jsTarget/web/features/cmssmartedit/services/cmsSmarteditServicesModule.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CmsSmarteditServicesModule\", function() { return _cmsSmarteditServicesModule__WEBPACK_IMPORTED_MODULE_3__[\"CmsSmarteditServicesModule\"]; });\n\n/* harmony import */ var _ComponentSharedServiceInner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ComponentSharedServiceInner */ \"./jsTarget/web/features/cmssmartedit/services/ComponentSharedServiceInner.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ComponentSharedService\", function() { return _ComponentSharedServiceInner__WEBPACK_IMPORTED_MODULE_4__[\"ComponentSharedService\"]; });\n\n/* harmony import */ var _pages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages */ \"./jsTarget/web/features/cmssmartedit/services/pages/index.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PageService\", function() { return _pages__WEBPACK_IMPORTED_MODULE_5__[\"PageService\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// barrel\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/pageContentSlotsService.js\":\n/*!********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/pageContentSlotsService.js ***!\n  \\********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotSharedServiceModule.pageContentSlotsService\n * @description\n * pageContentSlotsServiceModule provides methods to load and act on the contentSlots for the page loaded in the storefront.\n */\nangular.module('pageContentSlotsServiceModule', ['resourceModule', 'smarteditServicesModule', 'cmsResourceLocationsModule', 'yLoDashModule'])\n    .service('pageContentSlotsService', function($q, lodash, restServiceFactory, crossFrameEventService, EVENTS, pageInfoService, PAGES_CONTENT_SLOT_RESOURCE_URI) {\n        var pagesContentSlotsResource = restServiceFactory.get(PAGES_CONTENT_SLOT_RESOURCE_URI);\n        var pageContentSlotsPromise;\n\n        this._reloadPageContentSlots = function() {\n            return pageInfoService.getPageUID().then(function(pageId) {\n                pageContentSlotsPromise = pagesContentSlotsResource.get({\n                    pageId: pageId\n                }).then(function(pagesContentSlotsResponse) {\n                    return $q.when(lodash.uniq(pagesContentSlotsResponse.pageContentSlotList || []));\n                });\n                return pageContentSlotsPromise;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#getPageContentSlots\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * This function fetches all the slots of the loaded page.\n         * \n         * @returns {Promise} promise that resolves to a collection of content slots information for the loaded page.\n         */\n        this.getPageContentSlots = function() {\n            return pageContentSlotsPromise ? $q.when(pageContentSlotsPromise) : this._reloadPageContentSlots();\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#getSlotStatus\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * retrieves the slot status of the proved slotId. It can be one of TEMPLATE, PAGE and OVERRIDE.\n         *\n         * @param {String} slotId of the slot\n         * \n         * @returns {Promise} promise that resolves to the status of the slot.\n         */\n        this.getSlotStatus = function(slotId) {\n            return (pageContentSlotsPromise ? $q.when(pageContentSlotsPromise) : this._reloadPageContentSlots()).then(function(pageContentSlots) {\n                var matchedSlotData = lodash.first(pageContentSlots.filter(function(pageContentSlot) {\n                    return pageContentSlot.slotId === slotId;\n                }));\n                return matchedSlotData ? matchedSlotData.slotStatus : undefined;\n            });\n        };\n\n        crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, function() {\n            this._reloadPageContentSlots();\n        }.bind(this));\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/pages/PageServiceInner.ts\":\n/*!*******************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/pages/PageServiceInner.ts ***!\n  \\*******************************************************************************/\n/*! exports provided: PageService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageService\", function() { return PageService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cmscommons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cmscommons */ \"./jsTarget/web/features/cmscommons/index.ts\");\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\nvar PageService = /** @class */ (function (_super) {\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](/* @ngInject */ PageService, _super);\n    function PageService() {\n        return _super.call(this) || this;\n    }\n    PageService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"GatewayProxied\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [])\n    ], /* @ngInject */ PageService);\n    return PageService;\n}(cmscommons__WEBPACK_IMPORTED_MODULE_2__[\"IPageService\"]));\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/pages/index.ts\":\n/*!********************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/pages/index.ts ***!\n  \\********************************************************************/\n/*! exports provided: PageService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _PageServiceInner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PageServiceInner */ \"./jsTarget/web/features/cmssmartedit/services/pages/PageServiceInner.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PageService\", function() { return _PageServiceInner__WEBPACK_IMPORTED_MODULE_0__[\"PageService\"]; });\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/removeComponentService.js\":\n/*!*******************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/removeComponentService.js ***!\n  \\*******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('removeComponentServiceModule', ['smarteditServicesModule', 'renderServiceModule', 'removeComponentServiceInterfaceModule', 'experienceInterceptorModule', 'functionsModule', 'resourceLocationsModule'])\n    .constant('COMPONENT_REMOVED_EVENT', 'componentRemovedEvent')\n    /**\n     * @ngdoc service\n     * @name removeComponentService.removeComponentService\n     *\n     * @description\n     * Service to remove a component from a slot\n     */\n    .factory('removeComponentService', function(crossFrameEventService, restServiceFactory, renderService, extend, gatewayProxy, $q, $log, RemoveComponentServiceInterface, experienceInterceptor, systemEventService, componentInfoService, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI, COMPONENT_REMOVED_EVENT) {\n        var REMOVE_COMPONENT_CHANNEL_ID = \"RemoveComponent\";\n\n        var RemoveComponentService = function(gatewayId) {\n            this.gatewayId = gatewayId;\n\n            gatewayProxy.initForService(this, [\"removeComponent\"]);\n        };\n\n        RemoveComponentService = extend(RemoveComponentServiceInterface, RemoveComponentService);\n\n        var restServiceForRemoveComponent = restServiceFactory.get(PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI + '/contentslots/:slotId/components/:componentId', 'componentId');\n\n        RemoveComponentService.prototype.removeComponent = function(configuration) {\n\n            return restServiceForRemoveComponent.remove({\n                slotId: configuration.slotId,\n                componentId: configuration.slotOperationRelatedId\n            }).then(function() {\n                // This call will come from the cache. \n                return componentInfoService.getById(configuration.componentUuid);\n            }).then(function(component) {\n                systemEventService.publish(COMPONENT_REMOVED_EVENT, component);\n\n                // This will now come from the backend. \n                return componentInfoService.getById(configuration.componentUuid, true);\n            }).then(function(component) {\n                renderService.renderSlots(configuration.slotId);\n\n                return component;\n            });\n\n        };\n\n        return new RemoveComponentService(REMOVE_COMPONENT_CHANNEL_ID);\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/slotContainerService.ts\":\n/*!*****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/slotContainerService.ts ***!\n  \\*****************************************************************************/\n/*! exports provided: SlotContainerService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotContainerService\", function() { return SlotContainerService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smarteditcommons */ \"../smartedit/smartedit-build/lib/smarteditcommons/src/index.js\");\n/* harmony import */ var smarteditcommons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * @ngdoc service\n * @name cmsSmarteditServicesModule.service:slotContainerService\n *\n * @description\n * This service allows retrieving information about the containers found in a given page.\n */\nvar SlotContainerService = /** @class */ (function () {\n    // --------------------------------------------------------------------------------------\n    // Constructor\n    // --------------------------------------------------------------------------------------\n    function SlotContainerService($q, lodash, restServiceFactory, experienceService, PAGE_CONTEXT_SITE_ID, PAGE_CONTEXT_CATALOG, PAGE_CONTEXT_CATALOG_VERSION) {\n        this.$q = $q;\n        this.lodash = lodash;\n        this.experienceService = experienceService;\n        var contentSlotContainerResourceURI = \"/cmswebservices/v1/sites/\" + PAGE_CONTEXT_SITE_ID + \"/catalogs/\" + PAGE_CONTEXT_CATALOG + \"/versions/\" + PAGE_CONTEXT_CATALOG_VERSION + \"/pagescontentslotscontainers?pageId=:pageId\";\n        this.containersRestService = restServiceFactory.get(contentSlotContainerResourceURI);\n    }\n    // --------------------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------------------\n    /**\n     * @ngdoc method\n     * @name cmsSmarteditServicesModule.service:slotContainerService#getComponentContainer\n     * @methodOf cmsSmarteditServicesModule.service:slotContainerService\n     *\n     * @description\n     * This method is used to retrieve the information about the container holding the provided component.\n     * If the component is not inside a container, the method returns null.\n     *\n     * @param {String} slotId The SmartEdit id of the slot where the component in question is located.\n     * @param {String} componentUuid The UUID of the component as defined in the database.\n     *\n     * @returns {angular.IPromise<ContainerInfo>} A promise that resolves to the information of the container of the component provided.\n     * Will be null if the component is not inside a container.\n     */\n    SlotContainerService.prototype.getComponentContainer = function (slotId, componentUuid) {\n        var _this = this;\n        return this.loadContainersInPageInfo().then(function (containersInPage) {\n            var containers = containersInPage.filter(function (container) {\n                return container.slotId === slotId && _this.lodash.includes(container.components, componentUuid);\n            });\n            return (containers.length > 0) ? containers[0] : null;\n        });\n    };\n    // --------------------------------------------------------------------------------------\n    // Helper Methods\n    // --------------------------------------------------------------------------------------\n    SlotContainerService.prototype.loadContainersInPageInfo = function () {\n        var _this = this;\n        if (this.containersInPage) {\n            return this.$q.when(this.containersInPage);\n        }\n        else {\n            return this.experienceService.getCurrentExperience().then(function (experience) {\n                return _this.containersRestService.get({\n                    pageId: experience.pageId\n                });\n            }).then(function (result) {\n                _this.containersInPage = result.pageContentSlotContainerList;\n                return _this.containersInPage;\n            });\n        }\n    };\n    var _a, _b, _c;\n    SlotContainerService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n        Object(smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"SeInjectable\"])(),\n        tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [typeof (_a = typeof angular !== \"undefined\" && angular.IQService) === \"function\" ? _a : Object, Object, typeof (_b = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IRestServiceFactory\"]) === \"function\" ? _b : Object, typeof (_c = typeof smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IExperienceService\"] !== \"undefined\" && smarteditcommons__WEBPACK_IMPORTED_MODULE_1__[\"IExperienceService\"]) === \"function\" ? _c : Object, String, String, String])\n    ], /* @ngInject */ SlotContainerService);\n    return SlotContainerService;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/slotSharedService.js\":\n/*!**************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/slotSharedService.js ***!\n  \\**************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotSharedServiceModule.slotSharedService\n * @description\n * SlotSharedService provides methods to interact with the backend for shared slot information. \n */\nangular.module('slotSharedServiceModule', ['pageContentSlotsServiceModule', 'yLoDashModule', 'cmsSmarteditServicesModule'])\n    .service('slotSharedService', function(pageContentSlotsService, lodash, cmsitemsRestService, pageInfoService, $translate, confirmationModalService) {\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#isSlotShared\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Checks if the slot is shared and returns true in case slot is shared and returns false if it is not. \n         * Based on this service method the slot shared button is shown or hidden for a particular slotId\n         *\n         * @param {String} slotId of the slot\n         */\n        this.isSlotShared = function(slotId) {\n            return pageContentSlotsService.getPageContentSlots().then(function(pageContentSlots) {\n                var matchedSlotData = lodash.first(pageContentSlots.filter(function(pageContentSlot) {\n                    return pageContentSlot.slotId === slotId;\n                }));\n                return matchedSlotData ? matchedSlotData.slotShared : undefined;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#setSharedSlotEnablementStatus\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Sets the status of the disableSharedSlot feature\n         *\n         * @param {Boolean} status of the disableSharedSlot feature\n         */\n        this.setSharedSlotEnablementStatus = function(status) {\n            this.disableShareSlotStatus = status;\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#isSharedSlotDisabled\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Checks the status of the disableSharedSlot feature\n         *\n         */\n        this.areSharedSlotsDisabled = function() {\n            return this.disableShareSlotStatus;\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#convertSharedSlotToNonSharedSlot\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Converts a shared slot to a non-shared slot.\n         *\n         * @param {Object} componentAttributes Component attributes context\n         * @param {String} componentAttributes.smarteditComponentId SmartEdit componenent Id.\n         * @param {String} componentAttributes.contentSlotUuid Unique identifier of the shared slot.\n         * @param {String} componentAttributes.componentType Type of component.\n         * @param {String} componentAttributes.catalogVersionUuid Catalog version.\n         * @param {Boolean} cloneComponents If set to \"true\", the components in the shared slot will be cloned to the new non-shared slot.\n         * If set to \"false\", the new non-shared slot will be empty.\n         *\n         * @returns {Promise} A promise that resolves to the data that defines the new component.\n         *\n         */\n        this.convertSharedSlotToNonSharedSlot = function(componentAttributes, cloneComponents) {\n            this._validateComponentAttributes(componentAttributes);\n            return this._constructCmsItemParameter(componentAttributes, cloneComponents).then(function(cmsItem) {\n\n                var message = {};\n                message.title = \"se.cms.slot.shared.convert.to.unshared.confirmation.title\";\n                message.description = cloneComponents ? \"se.cms.slot.shared.convert.to.unshared.clone.components.confirmation.message\" : \"se.cms.slot.shared.convert.to.unshared.remove.components.confirmation.message\";\n\n                return confirmationModalService.confirm(message).then(function() {\n                    return cmsitemsRestService.create(cmsItem);\n                });\n\n            });\n        };\n\n        this._constructCmsItemParameter = function(componentAttributes, cloneComponents) {\n            return $translate(\"se.cms.slot.shared.clone\").then(function(cloneText) {\n                return pageInfoService.getPageUID().then(function(pageUid) {\n                    var componentName = pageUid + \"-\" + componentAttributes.smarteditComponentId + \"-\" + cloneText;\n                    var cmsItem = {\n                        name: componentName,\n                        smarteditComponentId: componentAttributes.smarteditComponentId,\n                        contentSlotUuid: componentAttributes.contentSlotUuid,\n                        itemtype: componentAttributes.componentType,\n                        catalogVersion: componentAttributes.catalogVersionUuid,\n                        pageUuid: pageUid,\n                        cloneComponents: cloneComponents\n                    };\n                    return cmsItem;\n                });\n            }.bind(this));\n        };\n\n        this._validateComponentAttributes = function(componentAttributes) {\n            if (!componentAttributes) {\n                throw new Error(\"Parameter: componentAttributes needs to be supplied!\");\n            }\n\n            var validationAttributes = [\"smarteditComponentId\", \"contentSlotUuid\", \"componentType\", \"catalogVersionUuid\"];\n            for (var i = 0; i < validationAttributes.length; i++) {\n                var attribute = validationAttributes[i];\n                if (!componentAttributes[attribute]) {\n                    throw new Error(\"Parameter: componentAttributes.\" + attribute + \" needs to be supplied!\");\n                }\n            }\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/slotSynchronizationService.js\":\n/*!***********************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/slotSynchronizationService.js ***!\n  \\***********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotSynchronizationServiceModule', [])\n    .constant(\"SYNCHRONIZATION_SLOTS_SELECT_ALL_COMPONENTS_LABEL\", \"se.cms.synchronization.slots.select.all.components\")\n    .service('slotSynchronizationService', function(SYNCHRONIZATION_SLOTS_SELECT_ALL_COMPONENTS_LABEL, syncPollingService) {\n\n        this.getSyncStatus = function(pageUUID, slotId) {\n            return syncPollingService.getSyncStatus(pageUUID).then(function(syncStatus) {\n                var slotSyncStatus = (syncStatus.selectedDependencies || []).concat(syncStatus.sharedDependencies || []).find(function(slot) {\n                    return slot.name === slotId;\n                }) || {};\n                slotSyncStatus.selectAll = SYNCHRONIZATION_SLOTS_SELECT_ALL_COMPONENTS_LABEL;\n                return slotSyncStatus;\n            });\n        };\n\n        this.performSync = function(array, uriContext) {\n            return syncPollingService.performSync(array, uriContext);\n        };\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/slotUnsharedService.js\":\n/*!****************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/slotUnsharedService.js ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotUnsharedServiceModule.slotUnsharedService\n * @description\n * slotUnsharedService provides methods to interact with the backend for unshared slot information. \n */\nangular.module('slotUnsharedServiceModule', ['cmsSmarteditServicesModule', 'pageContentSlotsServiceModule'])\n    .service('slotUnsharedService', function($q, cmsitemsRestService, pageContentSlotsService) {\n\n        var SLOT_UNSHARED_STATUS = 'OVERRIDE';\n\n        /**\n         * @ngdoc method\n         * @name slotUnsharedServiceModule.slotUnsharedService#isSlotUnshared\n         * @methodOf slotUnsharedServiceModule.slotUnsharedService\n         *\n         * @description\n         * Checks if the slot is unshared and returns true in case slot is unshared and returns false if it is not. \n         * Based on this service method the slot unshared button is shown or hidden for a particular slotId.\n         *\n         * @param {String} slotId The uid of the slot\n         */\n        this.isSlotUnshared = function(slotId) {\n            return pageContentSlotsService.getSlotStatus(slotId).then(function(slotStatus) {\n                return slotStatus === SLOT_UNSHARED_STATUS;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotUnsharedServiceModule.slotUnsharedService#revertToSharedSlot\n         * @methodOf slotUnsharedServiceModule.slotUnsharedService\n         *\n         * @description\n         * This method is used to revert an unshared slot to a shared slot.\n         * This operation is immutable.\n         *\n         * @param {String} slotUuid The uuid of the slot\n         */\n        this.revertToSharedSlot = function(slotUuid) {\n            return cmsitemsRestService.delete(slotUuid);\n        };\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/services/slotVisibilityService.js\":\n/*!******************************************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/services/slotVisibilityService.js ***!\n  \\******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotVisibilityServiceModule\n * @description\n *\n * The slot visibility service module provides factories and services to manage all backend calls and loads an internal\n * structure that provides the necessary data to the slot visibility button and slot visibility component.\n */\nangular.module('slotVisibilityServiceModule', ['resourceModule', 'cmsSmarteditServicesModule'])\n    /**\n     * @ngdoc service\n     * @name slotVisibilityServiceModule.service:slotVisibilityService\n     * @description\n     *\n     * The slotVisibilityService provides methods to reload slot information and manage hidden components.\n     */\n    .service('slotVisibilityService', function(\n        COMPONENT_CREATED_EVENT,\n        COMPONENT_UPDATED_EVENT,\n        COMPONENT_REMOVED_EVENT,\n        $log,\n        crossFrameEventService,\n        componentHandlerService,\n        pageInfoService,\n        pageContentSlotsComponentsRestService\n    ) {\n\n        /**\n         * Function that filters the given SlotsToComponentsMap to return only those components that are hidden in the storefront.\n         * @param {Object} allSlotsToComponentsMap object containing slotId - components list.\n         *\n         * @return {Object} allSlotsToComponentsMap object containing slotId - components list.\n         */\n        var _filterVisibleComponents = function(allSlotsToComponentsMap) {\n\n            //filter allSlotsToComponentsMap to show only hidden components\n            Object.keys(allSlotsToComponentsMap).forEach(function(slotId) {\n\n                var componentsOnDOM = [];\n                componentHandlerService.getOriginalComponentsWithinSlot(slotId).get().forEach(function(component) {\n                    componentsOnDOM.push(componentHandlerService.getId(component));\n                });\n\n                var hiddenComponents = allSlotsToComponentsMap[slotId].filter(function(component) {\n                    return componentsOnDOM.indexOf(component.uid) === -1;\n                });\n\n                allSlotsToComponentsMap[slotId] = hiddenComponents;\n\n            });\n\n            return allSlotsToComponentsMap;\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotVisibilityServiceModule.service:slotVisibilityService#reloadSlotsInfo\n         * @methodOf slotVisibilityServiceModule.service:slotVisibilityService\n         *\n         * @description\n         * Reloads and cache's the pagesContentSlotsComponents for the current page in context.\n         * this method can be called when ever a component is added or modified to the slot so that the pagesContentSlotsComponents is re-evalated.\n         *\n         * @return {Promise} A promise that resolves to the contentSlot - Components [] map for the page in context.\n         */\n        this.reloadSlotsInfo = function() {\n            return pageInfoService.getPageUID().then(function(pageUID) {\n                pageContentSlotsComponentsRestService.clearCache();\n                return pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageUID);\n            }.bind(this), function(e) {\n                $log.error('slotVisibilityService::reloadSlotsInfo - failed call to pageInfoService.getPageUID');\n                throw e;\n            });\n        };\n\n        /**\n         * Function to load slot to component map for the current page in context\n         * \n         * @return {Promise}\n         */\n        var _getSlotToComponentsMap = function() {\n            return pageInfoService.getPageUID().then(function(pageUID) {\n                return pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageUID);\n            }.bind(this), function(e) {\n                $log.error('slotVisibilityService::_getSlotToComponentsMap - failed call to pageInfoService.getPageUID');\n                throw e;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotVisibilityServiceModule.service:slotVisibilityService#getHiddenComponents\n         * @methodOf slotVisibilityServiceModule.service:slotVisibilityService\n         *\n         * @description\n         * Returns the list of hidden components for a given slotId\n         *\n         * @param {String} slotId the slot id\n         *\n         * @return {Promise} A promise that resolves to a list of hidden components for the slotId\n         */\n        this.getHiddenComponents = function(slotId) {\n            return _getSlotToComponentsMap().then(_filterVisibleComponents).then(function(hiddenComponentsMap) {\n                return hiddenComponentsMap[slotId] || [];\n            }, function() {\n                return [];\n            });\n        };\n\n        this._clearComponentsCache = function() {\n            pageContentSlotsComponentsRestService.clearCache();\n        };\n\n        crossFrameEventService.subscribe(COMPONENT_CREATED_EVENT, this._clearComponentsCache);\n        crossFrameEventService.subscribe(COMPONENT_UPDATED_EVENT, this._clearComponentsCache);\n        crossFrameEventService.subscribe(COMPONENT_REMOVED_EVENT, this._clearComponentsCache);\n\n    });\n\n\n/***/ }),\n\n/***/ \"./jsTarget/web/features/cmssmartedit/templates.js\":\n/*!*********************************************************!*\\\n  !*** ./jsTarget/web/features/cmssmartedit/templates.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nangular.module('cmssmarteditTemplates', []).run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('web/features/cmssmartedit/components/externalComponent/externalComponentButtonTemplate.html',\n    \"<div class=\\\"se-ctx-menu-btn__msg\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.isReady\\\">\\n\" +\n    \"    {{ctrl.catalogVersion}}\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/externalComponent/externalComponentDecoratorTemplate.html',\n    \"<div data-ng-class=\\\"{\\n\" +\n    \"    'cms-external-component-decorator': !ctrl.isExtenalSlot, \\n\" +\n    \"    'disabled-shared-slot-hovered': ctrl.active && !ctrl.isExtenalSlot, \\n\" +\n    \"    'cms-external-component-decorator--versioning': ctrl.isVersioningPerspective}\\\">\\n\" +\n    \"    <div class=\\\"se-ctx-menu__overlay\\\"\\n\" +\n    \"        data-ng-if=\\\"!ctrl.isExtenalSlot && ctrl.isReady\\\">\\n\" +\n    \"        <span data-ng-if=\\\"!ctrl.active || ctrl.isVersioningPerspective\\\"\\n\" +\n    \"            data-y-popover\\n\" +\n    \"            data-placement=\\\"'bottom'\\\"\\n\" +\n    \"            data-template=\\\"ctrl.getTooltipTemplate()\\\"\\n\" +\n    \"            data-trigger=\\\"'hover'\\\"\\n\" +\n    \"            class=\\\"sap-icon--globe se-ctx-menu-element__btn\\\"\\n\" +\n    \"            data-ng-class=\\\"{'sap-icon--globe--version': ctrl.isVersioningPerspective}\\\"></span>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"se-wrapper-data\\\"\\n\" +\n    \"        data-ng-class=\\\"{'disabled-shared-slot-versioning-mode': ctrl.isVersioningPerspective && !ctrl.isExtenalSlot}\\\"\\n\" +\n    \"        data-ng-transclude>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/sharedComponent/sharedComponentButtonTemplate.html',\n    \"<div class=\\\"se-ctx-menu-btn__msg\\\">\\n\" +\n    \"    <div class=\\\"se-ctx-menu-btn__msg-title\\\"\\n\" +\n    \"        data-translate=\\\"se.cms.contextmenu.shared.component.info.title\\\"></div>\\n\" +\n    \"    <div data-ng-if=\\\"$ctrl.isReady\\\"\\n\" +\n    \"        class=\\\"se-ctx-menu-btn__msg-description\\\">\\n\" +\n    \"        {{ $ctrl.message | translate }}\\n\" +\n    \"    </div>\\n\" +\n    \"    <div data-ng-if=\\\"!$ctrl.isReady\\\">\\n\" +\n    \"        <div class=\\\"spinner-sm spinner-light\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotShared/slotSharedButtonTemplate.html',\n    \"<div class=\\\"se-shared-slot-button-template\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.slotSharedFlag\\\">\\n\" +\n    \"    <div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper se-slot-ctx-menu__divider\\\"\\n\" +\n    \"        data-uib-dropdown\\n\" +\n    \"        data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"        data-auto-close=\\\"outsideClick\\\"\\n\" +\n    \"        data-is-open=\\\"ctrl.isPopupOpened\\\">\\n\" +\n    \"        <button type=\\\"button\\\"\\n\" +\n    \"            data-uib-dropdown-toggle\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__dropdown-toggle sap-icon--chain-link se-slot-ctx-menu__dropdown-toggle-icon\\\"\\n\" +\n    \"            data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isPopupOpened}\\\"\\n\" +\n    \"            id=\\\"sharedSlotButton-{{::ctrl.slotId}}\\\">\\n\" +\n    \"        </button>\\n\" +\n    \"        <div class=\\\"dropdown-menu dropdown-menu-right se-slot__dropdown-menu\\\"\\n\" +\n    \"            data-uib-dropdown-menu>\\n\" +\n    \"            <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"                data-translate=\\\"se.sharedslot.decorator.label\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"se-shared-slot__body\\\">\\n\" +\n    \"                <div class=\\\"se-shared-slot__description\\\"\\n\" +\n    \"                    data-translate=\\\"se.cms.slot.shared.popover.message\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div has-operation-permission=\\\"'se.shared.slot.override.options'\\\">\\n\" +\n    \"                    <div class=\\\"se-shared-slot__sub-header\\\"\\n\" +\n    \"                        data-translate=\\\"se.cms.slot.shared.popover.convertoptions.title\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"se-shared-slot__option\\\">\\n\" +\n    \"                        <a class=\\\"se-shared-slot__link fd-link\\\"\\n\" +\n    \"                            data-ng-click=\\\"ctrl.convertToNonSharedSlotAndCloneComponents()\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.button.clonecomponents\\\">\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <div class=\\\"se-shared-slot__link-description\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.text.clonecomponents\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"se-shared-slot__option\\\">\\n\" +\n    \"                        <a class=\\\"se-shared-slot__link fd-link\\\"\\n\" +\n    \"                            data-ng-click=\\\"ctrl.convertToNonSharedSlotAndRemoveComponents()\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.button.removecomponents\\\">\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <div class=\\\"se-shared-slot__link-description\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.text.removecomponents\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotShared/slotSharedTemplate.html',\n    \"<slot-shared-button data-slot-id=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-component-attributes=\\\"ctrl.componentAttributes\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\">\\n\" +\n    \"</slot-shared-button>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecoratorTemplate.html',\n    \"<div class=\\\"se-decorator-wrap\\\">\\n\" +\n    \"    <slot-disabled-component data-active=\\\"ctrl.active\\\"\\n\" +\n    \"        data-component-attributes=\\\"ctrl.componentAttributes\\\" />\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecoratorTemplate.html',\n    \"<div class=\\\"se-decorator-wrap\\\">\\n\" +\n    \"    <slot-disabled-component data-active=\\\"ctrl.active\\\"\\n\" +\n    \"        data-component-attributes=\\\"ctrl.componentAttributes\\\" />\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledTemplate.html',\n    \"<div class=\\\"disabled-shared-slot se-slot-popover external-shared-slot\\\"\\n\" +\n    \"    data-ng-class=\\\"{ 'disabled-shared-slot-hovered': ctrl.active, 'external-shared-slot': ctrl.isExternalSlot, 'disabled-shared-slot-versioning-mode': ctrl.isVersioningPerspective, 'disabled-shared-slot': !ctrl.isVersioningPerspective}\\\"\\n\" +\n    \"    data-popover-content=\\\"{{ctrl.getPopoverMessage()}}\\\">\\n\" +\n    \"    <div class=\\\"se-slot-popover__arrow\\\">\\n\" +\n    \"        <div class=\\\"se-slot-popover__arrow--fill\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"disabled-shared-slot__icon--outer disabled-shared-slot__icon--outer-linked\\\"\\n\" +\n    \"        data-ng-class=\\\"[ctrl.getOuterSlotClass(), { 'disabled-shared-slot__icon--outer-hovered': ctrl.active && !ctrl.isVersioningPerspective}]\\\">\\n\" +\n    \"        <span class=\\\"hyicon shared_slot_disabled_icon disabled-shared-slot__icon--inner\\\"\\n\" +\n    \"            data-ng-class=\\\"ctrl.getSlotIconClass()\\\">\\n\" +\n    \"        </span>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotUnshared/slotUnsharedButtonTemplate.html',\n    \"<div class=\\\"slot-unshared-button-template\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.slotUnsharedFlag\\\">\\n\" +\n    \"    <div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper se-slot-ctx-menu__divider\\\"\\n\" +\n    \"        data-uib-dropdown\\n\" +\n    \"        data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"        data-auto-close=\\\"outsideClick\\\"\\n\" +\n    \"        data-is-open=\\\"ctrl.isPopupOpened\\\">\\n\" +\n    \"        <button type=\\\"button\\\"\\n\" +\n    \"            data-uib-dropdown-toggle\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__dropdown-toggle sap-icon--broken-link se-slot-ctx-menu__dropdown-toggle-icon\\\"\\n\" +\n    \"            data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isPopupOpened}\\\"\\n\" +\n    \"            id=\\\"slot-unshared-button-{{::ctrl.slotUid}}\\\">\\n\" +\n    \"        </button>\\n\" +\n    \"        <div class=\\\"dropdown-menu dropdown-menu-right se-toolbar-menu-content se-slot__dropdown-menu\\\"\\n\" +\n    \"            data-uib-dropdown-menu>\\n\" +\n    \"            <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"                data-translate=\\\"se.cms.unshared.slot.header\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"shared-slot__divider\\\"></div>\\n\" +\n    \"            <div class=\\\"se-shared-slot__body\\\">\\n\" +\n    \"                <div class=\\\"se-shared-slot__link-description se-shared-slot__link-description__unshared\\\"\\n\" +\n    \"                    data-translate=\\\"se.cms.slot.unshared.popover.message\\\"></div>\\n\" +\n    \"                <div data-has-operation-permission=\\\"'se.revert.to.shared.slot.link'\\\">\\n\" +\n    \"                    <a class=\\\"se-shared-slot__link fd-link\\\"\\n\" +\n    \"                        data-ng-click=\\\"ctrl.revertToSharedSlot()\\\"\\n\" +\n    \"                        data-translate=\\\"se.cms.slot.unshared.revert.to.shared.title\\\">\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotUnshared/slotUnsharedButtonWrapperTemplate.html',\n    \"<slot-unshared-button data-slot-uuid=\\\"{{::ctrl.componentAttributes.smarteditComponentUuid}}\\\"\\n\" +\n    \"    data-slot-uid=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\"></slot-unshared-button>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenuItemsTemplate.html',\n    \"<div class=\\\"se-hidden-component-menu fd-menu__list\\\">\\n\" +\n    \"    <div class=\\\"se-hidden-component-menu__item fd-menu__item\\\"\\n\" +\n    \"        data-ng-repeat=\\\"dropdownItem in ctrl.menuItems\\\"\\n\" +\n    \"        data-ng-click=\\\"ctrl.executeItemCallback(dropdownItem, $event)\\\">\\n\" +\n    \"        <span class=\\\"se-hidden-component-menu__item-icon\\\"\\n\" +\n    \"            data-ng-class=\\\"[dropdownItem.displayIconClass]\\\"></span>\\n\" +\n    \"        <span class=\\\"se-hidden-component-menu__item-link\\\">\\n\" +\n    \"            {{ dropdownItem.i18nKey | translate }}\\n\" +\n    \"        </span>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenuTemplate.html',\n    \"<div class=\\\"se-hidden-component-menu__popup-anchor\\\"\\n\" +\n    \"    data-ng-click=\\\"ctrl.onButtonClick($event)\\\"\\n\" +\n    \"    y-popup-overlay=\\\"ctrl.popupConfig\\\"\\n\" +\n    \"    y-popup-overlay-trigger=\\\"{{ctrl.isMenuOpen}}\\\"\\n\" +\n    \"    y-popup-overlay-on-hide=\\\"ctrl.onMenuHide()\\\">\\n\" +\n    \"    <span data-ng-if=\\\"ctrl.menuItems.length > 0\\\"\\n\" +\n    \"        class=\\\"sap-icon--overflow se-hidden-component-menu__toggle\\\"></span>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/slotVisibilityButtonTemplate.html',\n    \"<div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper \\n\" +\n    \"        se-slot-ctx-menu__dropdown-toggle-wrapper--slot-visibility \\n\" +\n    \"        se-slot-ctx-menu__divider\\\"\\n\" +\n    \"    data-uib-dropdown\\n\" +\n    \"    data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.buttonVisible\\\"\\n\" +\n    \"    data-is-open=\\\"ctrl.isComponentListOpened\\\">\\n\" +\n    \"\\n\" +\n    \"    <button type=\\\"button\\\"\\n\" +\n    \"        data-uib-dropdown-toggle\\n\" +\n    \"        class=\\\"se-slot-ctx-menu__dropdown-toggle--slot-visibility se-slot-ctx-menu__dropdown-toggle\\\"\\n\" +\n    \"        data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isComponentListOpened}\\\"\\n\" +\n    \"        id=\\\"slot-visibility-button-{{::ctrl.slotId}}\\\">\\n\" +\n    \"        <span class=\\\"se-slot-ctx-menu__dropdown-toggle-icon sap-icon--hide\\\"></span>\\n\" +\n    \"        <span class=\\\"se-slot-ctx-menu__dropdown-toggle-add-on\\\">{{ ::ctrl.hiddenComponentCount }}</span>\\n\" +\n    \"    </button>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"dropdown-menu dropdown-menu-right se-slot__dropdown-menu\\\"\\n\" +\n    \"        data-uib-dropdown-menu\\n\" +\n    \"        data-ng-click=\\\"ctrl.onInsideClick($event)\\\"\\n\" +\n    \"        role=\\\"menu\\\"\\n\" +\n    \"        id=\\\"slot-visibility-list-{{::ctrl.slotId}}\\\">\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"            data-translate=\\\"se.cms.slotvisibility.list.title\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <ul class=\\\"se-slot-visility__component-list\\\">\\n\" +\n    \"            <li data-ng-repeat=\\\"component in ctrl.hiddenComponents track by $index\\\"\\n\" +\n    \"                class=\\\"se-slot-visility__component-list-item\\\">\\n\" +\n    \"                <span data-y-popover\\n\" +\n    \"                    data-ng-if=\\\"component.isExternal\\\"\\n\" +\n    \"                    data-trigger=\\\"'hover'\\\"\\n\" +\n    \"                    data-template=\\\"ctrl.getTemplateInfoForExternalComponent()\\\">\\n\" +\n    \"                    <slot-visibility-component data-component=\\\"component\\\"\\n\" +\n    \"                        data-component-id=\\\"{{::component.uid}}\\\"\\n\" +\n    \"                        data-slot-id=\\\"{{::ctrl.slotId}}\\\"></slot-visibility-component>\\n\" +\n    \"                </span>\\n\" +\n    \"                <slot-visibility-component data-component=\\\"component\\\"\\n\" +\n    \"                    data-ng-if=\\\"!component.isExternal\\\"\\n\" +\n    \"                    data-component-id=\\\"{{::component.uid}}\\\"\\n\" +\n    \"                    data-slot-id=\\\"{{::ctrl.slotId}}\\\"></slot-visibility-component>\\n\" +\n    \"            </li>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponentTemplate.html',\n    \"<div class=\\\"se-slot-visibility-wrapper\\\"\\n\" +\n    \"    data-ng-class=\\\"{'se-slot-visibility-wrapper__external': ctrl.readOnly}\\\">\\n\" +\n    \"    <div class=\\\"se-slot-visiblity-component__content\\\"\\n\" +\n    \"        data-ng-if=\\\"ctrl.isReady\\\">\\n\" +\n    \"        <div class=\\\"se-slot-visibility__icon-wrapper\\\">\\n\" +\n    \"            <div class=\\\"se-slot-visibility__icon sap-icon--home-share\\\"></div>\\n\" +\n    \"            <div data-ng-if=\\\"ctrl.isSharedComponent\\\"\\n\" +\n    \"                class=\\\"se-slot-visibility__icon--shared sap-icon--chain-link\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"se-slot-visiblity-component__description\\\">\\n\" +\n    \"            <div data-ng-if=\\\"ctrl.readOnly\\\"\\n\" +\n    \"                class=\\\"se-slot-visiblity-component__name\\\">\\n\" +\n    \"                {{ ::ctrl.component.name }}\\n\" +\n    \"            </div>\\n\" +\n    \"            <div data-ng-if=\\\"!ctrl.readOnly\\\"\\n\" +\n    \"                class=\\\"se-slot-visiblity-component__name--link\\\"\\n\" +\n    \"                data-ng-click=\\\"ctrl.openEditorModal()\\\">{{ ::ctrl.component.name }}</div>\\n\" +\n    \"            <div class=\\\"se-slot-visiblity-component__type\\\">\\n\" +\n    \"                {{ ::ctrl.component.typeCode }}\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"se-slot-visiblity-component__visibility\\\">\\n\" +\n    \"                {{'se.genericeditor.tab.visibility.title' | translate}} {{ctrl.componentVisibilitySwitch | translate}} / {{ctrl.componentRestrictionsCount}} {{'se.cms.restrictions.editor.tab' | translate}}\\n\" +\n    \"            </div>\\n\" +\n    \"            <div data-ng-if=\\\"ctrl.component.isExternal === true\\\"\\n\" +\n    \"                class=\\\"sap-icon--globe slot-visiblity-component--globe-icon\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <hidden-component-menu class=\\\"slot-visiblity-component--hidden-menu\\\"\\n\" +\n    \"        data-slot-id=\\\"ctrl.slotId\\\"\\n\" +\n    \"        data-component=\\\"ctrl.component\\\"></hidden-component-menu>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/slotVisibilityWidgetTemplate.html',\n    \"<slot-visibility-button data-slot-id=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\" />\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/slotSyncButtonTemplate.html',\n    \"<div class=\\\"se-slot-sync-button-template\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.ready\\\">\\n\" +\n    \"    <div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper se-slot-ctx-menu__divider\\\"\\n\" +\n    \"        data-uib-dropdown\\n\" +\n    \"        data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"        data-auto-close=\\\"outsideClick\\\"\\n\" +\n    \"        data-is-open=\\\"ctrl.isPopupOpened\\\">\\n\" +\n    \"\\n\" +\n    \"        <span data-y-popover\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__popover-ancor\\\"\\n\" +\n    \"            data-trigger=\\\"'hover'\\\"\\n\" +\n    \"            data-template=\\\"ctrl.newPageIsNotSynchronizedTemplate\\\"\\n\" +\n    \"            data-ng-if=\\\"ctrl.newPageIsNotSynchronized\\\"\\n\" +\n    \"            data-placement=\\\"'bottom'\\\">\\n\" +\n    \"        </span>\\n\" +\n    \"\\n\" +\n    \"        <button type=\\\"button\\\"\\n\" +\n    \"            data-uib-dropdown-toggle\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__dropdown-toggle\\\"\\n\" +\n    \"            data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isPopupOpened, \\n\" +\n    \"                'se-slot-ctx-menu__dropdown-toggle--disabled': ctrl.newPageIsNotSynchronized }\\\"\\n\" +\n    \"            id=\\\"slot-sync-button-{{::ctrl.slotId}}\\\">\\n\" +\n    \"            <span class=\\\"sap-icon--synchronize se-slot-ctx-menu__dropdown-toggle-icon\\\"></span>\\n\" +\n    \"            <span data-ng-if=\\\"!ctrl.isSlotInSync\\\"\\n\" +\n    \"                class=\\\"sap-icon--alert se-slot-sync__btn-status se-slot-ctx-menu__dropdown-toggle-add-on\\\"></span>\\n\" +\n    \"        </button>\\n\" +\n    \"        <div class=\\\"se-slot__dropdown-menu dropdown-menu-right\\\"\\n\" +\n    \"            data-uib-dropdown-menu\\n\" +\n    \"            role=\\\"menu\\\">\\n\" +\n    \"            <div class=\\\"se-toolbar-menu-content--wrapper\\\">\\n\" +\n    \"                <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"                    data-translate=\\\"se.cms.synchronization.slot.header\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"se-slot-sync__body\\\">\\n\" +\n    \"                    <slot-synchronization-panel data-ng-if=\\\"ctrl.isPopupOpened\\\"\\n\" +\n    \"                        data-slot-id=\\\"ctrl.slotId\\\"></slot-synchronization-panel>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/slotSynchronizationPanelTemplate.html',\n    \"<div data-page-sensitive>\\n\" +\n    \"    <synchronization-panel data-item-id=\\\"$ctrl.slotId\\\"\\n\" +\n    \"        data-get-sync-status=\\\"$ctrl.getSyncStatus\\\"\\n\" +\n    \"        data-perform-sync=\\\"$ctrl.performSync\\\"\\n\" +\n    \"        data-get-api=\\\"$ctrl.getApi($api)\\\">\\n\" +\n    \"    </synchronization-panel>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/slotSyncTemplate.html',\n    \"<slot-sync-button data-slot-id=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\"></slot-sync-button>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html',\n    \"<div class=\\\"sync-indicator-decorator\\\"\\n\" +\n    \"    [ngClass]=\\\"syncStatus.status\\\"\\n\" +\n    \"    [attr.sync-status]=\\\"syncStatus.status\\\">\\n\" +\n    \"    <ng-content class=\\\"se-wrapper-data\\\"></ng-content>\\n\" +\n    \"</div>\"\n  );\n\n}]);\n\n\n/***/ }),\n\n/***/ \"angular\":\n/*!**************************!*\\\n  !*** external \"angular\" ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ \"dll-reference smarteditcommons\":\n/*!***********************************!*\\\n  !*** external \"smarteditcommons\" ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = smarteditcommons;\n\n/***/ }),\n\n/***/ \"dll-reference vendor_chunk\":\n/*!*******************************!*\\\n  !*** external \"vendor_chunk\" ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = vendor_chunk;\n\n/***/ }),\n\n/***/ \"moment\":\n/*!*************************!*\\\n  !*** external \"moment\" ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = moment;\n\n/***/ })\n\n/******/ });"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./jsTarget/web/features/cmssmartedit/index.ts\");\n","module.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/core/fesm5/core.js\");","module.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/platform-browser/fesm5/platform-browser.js\");","module.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/@angular/upgrade/fesm5/static.js\");","exports = module.exports = require(\"../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".se-sync-panel-header {\\n  padding: 0 20px 20px;\\n  border-bottom: 1px solid #d9d9d9;\\n  min-width: 400px; }\\n\\n.se-sync-panel__sub-header {\\n  padding-top: 4px;\\n  color: #51555a; }\\n\\n.se-sync-panel-header__new-page-message {\\n  padding: 20px; }\\n\\n.se-sync-panel__message--new-page {\\n  font-weight: 700;\\n  padding-bottom: 4px; }\\n\\n.se-sync-panel-header__timestamp {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  color: #51555a;\\n  position: absolute;\\n  left: 20px;\\n  bottom: 23px;\\n  width: 150px; }\\n\\n.se-sync-panel__sync-info {\\n  max-height: 300px;\\n  overflow-y: scroll; }\\n\\n.se-sync-panel__sync-info__row {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  padding: 0 20px;\\n  height: 40px;\\n  border-bottom: 1px solid #d9d9d9; }\\n  .se-sync-panel__sync-info__row:first-child {\\n    height: 50px; }\\n  .se-sync-panel__sync-info__row:last-child {\\n    border-bottom: none; }\\n\\n.se-sync-panel__info-checkbox {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  margin: 0 !important; }\\n  .se-sync-panel__info-checkbox input {\\n    margin: 0; }\\n\\n.fd-form__label.se-sync-panel__info-checkbox-label {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  word-break: break-all;\\n  max-width: 190px !important;\\n  margin: 0 !important;\\n  padding-left: 8px;\\n  color: #32363a;\\n  text-transform: capitalize; }\\n  .fd-form__label.se-sync-panel__info-checkbox-label--select-all {\\n    font-weight: bold !important; }\\n\\n.se-sync-panel__sync-info__right-icon {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--accept {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #0a7e3e; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--message-warning {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #e9730c; }\\n\\n.se-sync-panel__footer {\\n  padding: 20px;\\n  border-top: 1px solid #d9d9d9;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end; }\\n\\nbutton.se-sync-panel__footer__btn {\\n  text-transform: capitalize;\\n  padding: 8px 20px;\\n  margin-left: 8px; }\\n\\n.se-modal__body .se-sync-panel-header, .se-modal__body .se-sync-panel__sync-info {\\n  padding: 0;\\n  border-bottom: none; }\\n\\n.se-synchronize-catalog {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end; }\\n\\n.se-synchronize-catalog__sync-info {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n\\n.se-synchronize-catalog__sync-btn button {\\n  margin-left: 20px; }\\n\\n.se-synchronize-catalog__sync-info__sync-label,\\n.catalog-last-synced {\\n  color: #6a6d70;\\n  display: block;\\n  text-align: right;\\n  margin: 0; }\\n\\n.se-synchronize-catalog__sync-info__sync-cata-name {\\n  font-weight: 700;\\n  color: #51555a; }\\n\\n.se-synchronize-catalog__in-progress {\\n  color: #0a7e3e; }\\n\\n.se-synchronize-catalog__sync-failed {\\n  color: #bb0000; }\\n\", \"\",{\"version\":3,\"sources\":[\"synchronization.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB,gCAAgC;EAChC,gBAAgB,EAAE;;AAEpB;EACE,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,aAAa,EAAE;;AAEjB;EACE,gBAAgB;EAChB,mBAAmB,EAAE;;AAEvB;EACE,qBAAqB;EACrB,oBAAoB;EACpB,gBAAgB;EAChB,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,YAAY,EAAE;;AAEhB;EACE,iBAAiB;EACjB,kBAAkB,EAAE;;AAEtB;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,yBAA8B;MAA9B,sBAA8B;UAA9B,8BAA8B;EAC9B,eAAe;EACf,YAAY;EACZ,gCAAgC,EAAE;EAClC;IACE,YAAY,EAAE;EAChB;IACE,mBAAmB,EAAE;;AAEzB;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,oBAAoB,EAAE;EACtB;IACE,SAAS,EAAE;;AAEf;EACE,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,qBAAqB;EACrB,2BAA2B;EAC3B,oBAAoB;EACpB,iBAAiB;EACjB,cAAc;EACd,0BAA0B,EAAE;EAC5B;IACE,4BAA4B,EAAE;;AAElC;EACE,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,EAAE;;AAEpB;EACE,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,aAAa;EACb,6BAA6B;EAC7B,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,qBAAyB;MAAzB,kBAAyB;UAAzB,yBAAyB,EAAE;;AAE7B;EACE,0BAA0B;EAC1B,iBAAiB;EACjB,gBAAgB,EAAE;;AAEpB;EACE,UAAU;EACV,mBAAmB,EAAE;;AAEvB;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,qBAAyB;MAAzB,kBAAyB;UAAzB,yBAAyB,EAAE;;AAE7B;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;EACnB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB,EAAE;;AAEvB;EACE,iBAAiB,EAAE;;AAErB;;EAEE,cAAc;EACd,cAAc;EACd,iBAAiB;EACjB,SAAS,EAAE;;AAEb;EACE,gBAAgB;EAChB,cAAc,EAAE;;AAElB;EACE,cAAc,EAAE;;AAElB;EACE,cAAc,EAAE\",\"file\":\"synchronization.scss\",\"sourcesContent\":[\".se-sync-panel-header {\\n  padding: 0 20px 20px;\\n  border-bottom: 1px solid #d9d9d9;\\n  min-width: 400px; }\\n\\n.se-sync-panel__sub-header {\\n  padding-top: 4px;\\n  color: #51555a; }\\n\\n.se-sync-panel-header__new-page-message {\\n  padding: 20px; }\\n\\n.se-sync-panel__message--new-page {\\n  font-weight: 700;\\n  padding-bottom: 4px; }\\n\\n.se-sync-panel-header__timestamp {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  color: #51555a;\\n  position: absolute;\\n  left: 20px;\\n  bottom: 23px;\\n  width: 150px; }\\n\\n.se-sync-panel__sync-info {\\n  max-height: 300px;\\n  overflow-y: scroll; }\\n\\n.se-sync-panel__sync-info__row {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0 20px;\\n  height: 40px;\\n  border-bottom: 1px solid #d9d9d9; }\\n  .se-sync-panel__sync-info__row:first-child {\\n    height: 50px; }\\n  .se-sync-panel__sync-info__row:last-child {\\n    border-bottom: none; }\\n\\n.se-sync-panel__info-checkbox {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  margin: 0 !important; }\\n  .se-sync-panel__info-checkbox input {\\n    margin: 0; }\\n\\n.fd-form__label.se-sync-panel__info-checkbox-label {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  word-break: break-all;\\n  max-width: 190px !important;\\n  margin: 0 !important;\\n  padding-left: 8px;\\n  color: #32363a;\\n  text-transform: capitalize; }\\n  .fd-form__label.se-sync-panel__info-checkbox-label--select-all {\\n    font-weight: bold !important; }\\n\\n.se-sync-panel__sync-info__right-icon {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--accept {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #0a7e3e; }\\n\\n.se-sync-panel__sync-info-icon.sap-icon--message-warning {\\n  font-size: 1.14286rem;\\n  line-height: 1.25;\\n  font-weight: 400;\\n  color: #e9730c; }\\n\\n.se-sync-panel__footer {\\n  padding: 20px;\\n  border-top: 1px solid #d9d9d9;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\nbutton.se-sync-panel__footer__btn {\\n  text-transform: capitalize;\\n  padding: 8px 20px;\\n  margin-left: 8px; }\\n\\n.se-modal__body .se-sync-panel-header, .se-modal__body .se-sync-panel__sync-info {\\n  padding: 0;\\n  border-bottom: none; }\\n\\n.se-synchronize-catalog {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.se-synchronize-catalog__sync-info {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\\n.se-synchronize-catalog__sync-btn button {\\n  margin-left: 20px; }\\n\\n.se-synchronize-catalog__sync-info__sync-label,\\n.catalog-last-synced {\\n  color: #6a6d70;\\n  display: block;\\n  text-align: right;\\n  margin: 0; }\\n\\n.se-synchronize-catalog__sync-info__sync-cata-name {\\n  font-weight: 700;\\n  color: #51555a; }\\n\\n.se-synchronize-catalog__in-progress {\\n  color: #0a7e3e; }\\n\\n.se-synchronize-catalog__sync-failed {\\n  color: #bb0000; }\\n\"],\"sourceRoot\":\"\"}]);\n\n","exports = module.exports = require(\"../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \"#smarteditoverlay .se-slot-ctx-menu__divider::after {\\n  content: \\\"\\\";\\n  background-color: white;\\n  display: block;\\n  position: absolute;\\n  width: 1px;\\n  height: 16px;\\n  top: 8px;\\n  left: -2px;\\n  opacity: 0.6; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-wrapper {\\n  margin-right: 3px;\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  font-size: 1.28571rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  background-color: transparent;\\n  color: white;\\n  width: 55px;\\n  height: 32px;\\n  border: none; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle:hover:not(.se-slot-ctx-menu__dropdown-toggle--open) {\\n    opacity: 0.6; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open {\\n    background-color: white;\\n    color: #0a6ed1 !important; }\\n    #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open .se-slot-ctx-menu__dropdown-toggle-add-on {\\n      color: #0a6ed1; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon {\\n    font-size: 1.28571rem;\\n    line-height: 1.33333;\\n    font-weight: 400; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon--disabled {\\n    cursor: not-allowed; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-add-on {\\n    margin-left: 4px;\\n    font-size: 1rem;\\n    line-height: 1.42857;\\n    font-weight: 400;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__popover-ancor {\\n  position: absolute;\\n  display: block;\\n  cursor: not-allowed;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0; }\\n\\n#smarteditoverlay .se-slot-contextual-menu__header {\\n  padding: 20px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  border-bottom: 1px solid #d9d9d9;\\n  height: 53px; }\\n  #smarteditoverlay .se-slot-contextual-menu__header:first-child {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    color: #32363a; }\\n\\n#smarteditoverlay .se-slot__dropdown-menu.dropdown-menu {\\n  border: none;\\n  border-radius: 0;\\n  -webkit-transform: translateY(-2px);\\n          transform: translateY(-2px);\\n  min-width: 265px;\\n  max-height: 300px;\\n  overflow-y: auto; }\\n\\n#smarteditoverlay .se-sync-panel__info-checkbox input {\\n  margin: 0; }\\n\\n#smarteditoverlay::before {\\n  margin-right: 0 !important;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400; }\\n\\n#smarteditoverlay .se-sync-panel__sync-btn {\\n  color: white; }\\n\\n#smarteditoverlay .se-slot-visility__component-list {\\n  padding: 16px 20px;\\n  list-style: none; }\\n\\n#smarteditoverlay .se-slot-visility__component-list-item {\\n  margin-bottom: 16px; }\\n  #smarteditoverlay .se-slot-visility__component-list-item:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-slot-visibility-wrapper {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-align: start;\\n      -ms-flex-align: start;\\n          align-items: flex-start; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__content {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__description {\\n  margin-right: 16px; }\\n\\n#smarteditoverlay .se-slot-visibility__icon-wrapper {\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-visibility__icon {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  height: 48px;\\n  width: 48px;\\n  border-radius: 4px;\\n  background-color: #2b78c5;\\n  color: white;\\n  margin-right: 16px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared {\\n    color: fd-type(\\\"text\\\", 5);\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n\\n#smarteditoverlay .se-slot-visibility__icon--shared {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-width: 14px;\\n  border-color: #354a5f transparent transparent #354a5f;\\n  border-radius: 4px 0px 0px 0px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared::before {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    position: absolute;\\n    left: -12px;\\n    top: -15px;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name, #smarteditoverlay .se-slot-visiblity-component__visibility {\\n  color: #32363a; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name--link {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__type {\\n  color: #6a6d70; }\\n\\n#smarteditoverlay .slot-visiblity-component--globe-icon {\\n  margin-left: 4px; }\\n\\n#smarteditoverlay .se-hidden-component-menu__toggle {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-hidden-component-menu {\\n  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n          box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n  background-color: white;\\n  border-radius: 4px !important;\\n  min-width: 100px;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  position: absolute;\\n  border: 1px solid #d9d9d9;\\n  z-index: 2000;\\n  top: 96%;\\n  left: initial !important;\\n  right: 0; }\\n  #smarteditoverlay .se-hidden-component-menu::before {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: #d9d9d9;\\n    border-bottom-color: var(var(--fd-color-neutral-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -8px; }\\n  #smarteditoverlay .se-hidden-component-menu::after {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: white;\\n    border-bottom-color: var(var(--fd-color-background-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -7px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    right: 10px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    display: none; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item-icon {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  margin-right: 8px; }\\n\\n#smarteditoverlay .se-shared-slot__body {\\n  padding: 16px 20px;\\n  width: 350px; }\\n\\n#smarteditoverlay .se-shared-slot__sub-header {\\n  margin-bottom: 12px; }\\n\\n#smarteditoverlay .se-shared-slot__option {\\n  margin-bottom: 8px; }\\n  #smarteditoverlay .se-shared-slot__option:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-shared-slot__description {\\n  margin-bottom: 16px; }\\n\\n#smarteditoverlay .se-shared-slot__link {\\n  cursor: pointer;\\n  color: #0a6ed1;\\n  text-decoration: none;\\n  text-transform: capitalize; }\\n  #smarteditoverlay .se-shared-slot__link:hover {\\n    text-decoration: none;\\n    color: #085caf; }\\n\", \"\",{\"version\":3,\"sources\":[\"contextualSlotDropdown.scss\"],\"names\":[],\"mappings\":\"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\",\"file\":\"contextualSlotDropdown.scss\",\"sourcesContent\":[\"#smarteditoverlay .se-slot-ctx-menu__divider::after {\\n  content: \\\"\\\";\\n  background-color: white;\\n  display: block;\\n  position: absolute;\\n  width: 1px;\\n  height: 16px;\\n  top: 8px;\\n  left: -2px;\\n  opacity: 0.6; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-wrapper {\\n  margin-right: 3px;\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__dropdown-toggle {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.28571rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  background-color: transparent;\\n  color: white;\\n  width: 55px;\\n  height: 32px;\\n  border: none; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle:hover:not(.se-slot-ctx-menu__dropdown-toggle--open) {\\n    opacity: 0.6; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open {\\n    background-color: white;\\n    color: #0a6ed1 !important; }\\n    #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle--open .se-slot-ctx-menu__dropdown-toggle-add-on {\\n      color: #0a6ed1; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon {\\n    font-size: 1.28571rem;\\n    line-height: 1.33333;\\n    font-weight: 400; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-icon--disabled {\\n    cursor: not-allowed; }\\n  #smarteditoverlay .se-slot-ctx-menu__dropdown-toggle-add-on {\\n    margin-left: 4px;\\n    font-size: 1rem;\\n    line-height: 1.42857;\\n    font-weight: 400;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-ctx-menu__popover-ancor {\\n  position: absolute;\\n  display: block;\\n  cursor: not-allowed;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0; }\\n\\n#smarteditoverlay .se-slot-contextual-menu__header {\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  border-bottom: 1px solid #d9d9d9;\\n  height: 53px; }\\n  #smarteditoverlay .se-slot-contextual-menu__header:first-child {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    color: #32363a; }\\n\\n#smarteditoverlay .se-slot__dropdown-menu.dropdown-menu {\\n  border: none;\\n  border-radius: 0;\\n  transform: translateY(-2px);\\n  min-width: 265px;\\n  max-height: 300px;\\n  overflow-y: auto; }\\n\\n#smarteditoverlay .se-sync-panel__info-checkbox input {\\n  margin: 0; }\\n\\n#smarteditoverlay::before {\\n  margin-right: 0 !important;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400; }\\n\\n#smarteditoverlay .se-sync-panel__sync-btn {\\n  color: white; }\\n\\n#smarteditoverlay .se-slot-visility__component-list {\\n  padding: 16px 20px;\\n  list-style: none; }\\n\\n#smarteditoverlay .se-slot-visility__component-list-item {\\n  margin-bottom: 16px; }\\n  #smarteditoverlay .se-slot-visility__component-list-item:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-slot-visibility-wrapper {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  align-items: flex-start; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__content {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  flex-grow: 1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__description {\\n  margin-right: 16px; }\\n\\n#smarteditoverlay .se-slot-visibility__icon-wrapper {\\n  position: relative; }\\n\\n#smarteditoverlay .se-slot-visibility__icon {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.71429rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  height: 48px;\\n  width: 48px;\\n  border-radius: 4px;\\n  background-color: #2b78c5;\\n  color: white;\\n  margin-right: 16px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared {\\n    color: fd-type(\\\"text\\\", 5);\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n\\n#smarteditoverlay .se-slot-visibility__icon--shared {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-width: 14px;\\n  border-color: #354a5f transparent transparent #354a5f;\\n  border-radius: 4px 0px 0px 0px; }\\n  #smarteditoverlay .se-slot-visibility__icon--shared::before {\\n    font-size: 1.14286rem;\\n    line-height: 1.25;\\n    font-weight: 400;\\n    position: absolute;\\n    left: -12px;\\n    top: -15px;\\n    color: white; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name, #smarteditoverlay .se-slot-visiblity-component__visibility {\\n  color: #32363a; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__name--link {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-slot-visiblity-component__type {\\n  color: #6a6d70; }\\n\\n#smarteditoverlay .slot-visiblity-component--globe-icon {\\n  margin-left: 4px; }\\n\\n#smarteditoverlay .se-hidden-component-menu__toggle {\\n  cursor: pointer;\\n  color: #0a6ed1; }\\n\\n#smarteditoverlay .se-hidden-component-menu {\\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n  background-color: white;\\n  border-radius: 4px !important;\\n  min-width: 100px;\\n  width: fit-content;\\n  position: absolute;\\n  border: 1px solid #d9d9d9;\\n  z-index: 2000;\\n  top: 96%;\\n  left: initial !important;\\n  right: 0; }\\n  #smarteditoverlay .se-hidden-component-menu::before {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: #d9d9d9;\\n    border-bottom-color: var(var(--fd-color-neutral-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -8px; }\\n  #smarteditoverlay .se-hidden-component-menu::after {\\n    height: 0;\\n    width: 0;\\n    border-style: solid;\\n    border-width: 0 8px 8px 8px;\\n    border-bottom-color: white;\\n    border-bottom-color: var(var(--fd-color-background-4));\\n    border-left-color: transparent;\\n    border-right-color: transparent;\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -7px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    right: 10px; }\\n  #smarteditoverlay .se-hidden-component-menu::before, #smarteditoverlay .se-hidden-component-menu::after {\\n    display: none; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\\n#smarteditoverlay .se-hidden-component-menu__item-icon {\\n  font-size: 0.85714rem;\\n  line-height: 1.33333;\\n  font-weight: 400;\\n  margin-right: 8px; }\\n\\n#smarteditoverlay .se-shared-slot__body {\\n  padding: 16px 20px;\\n  width: 350px; }\\n\\n#smarteditoverlay .se-shared-slot__sub-header {\\n  margin-bottom: 12px; }\\n\\n#smarteditoverlay .se-shared-slot__option {\\n  margin-bottom: 8px; }\\n  #smarteditoverlay .se-shared-slot__option:last-child {\\n    margin-bottom: 0; }\\n\\n#smarteditoverlay .se-shared-slot__description {\\n  margin-bottom: 16px; }\\n\\n#smarteditoverlay .se-shared-slot__link {\\n  cursor: pointer;\\n  color: #0a6ed1;\\n  text-decoration: none;\\n  text-transform: capitalize; }\\n  #smarteditoverlay .se-shared-slot__link:hover {\\n    text-decoration: none;\\n    color: #085caf; }\\n\"],\"sourceRoot\":\"\"}]);\n\n","exports = module.exports = require(\"../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".se-slot-popover {\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: reverse;\\n      -ms-flex-direction: column-reverse;\\n          flex-direction: column-reverse;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n  .se-slot-popover__arrow {\\n    opacity: 0;\\n    margin-top: 15px;\\n    position: relative;\\n    width: 0;\\n    border-bottom: 12px solid #d9d9d9;\\n    border-right: 12px solid transparent;\\n    border-left: 12px solid transparent;\\n    z-index: 9999; }\\n    .se-slot-popover__arrow--fill {\\n      position: absolute;\\n      top: 1px;\\n      left: -11px;\\n      width: 0;\\n      border-bottom: 11px solid white;\\n      border-right: 11px solid transparent;\\n      border-left: 11px solid transparent; }\\n  .se-slot-popover:before {\\n    opacity: 0;\\n    -webkit-box-shadow: 0 0 4px 0 #d9d9d9;\\n            box-shadow: 0 0 4px 0 #d9d9d9;\\n    z-index: 3125;\\n    background-color: white;\\n    color: #32363a;\\n    border: 1px solid #d9d9d9;\\n    border-radius: 4px;\\n    content: attr(data-popover-content);\\n    margin-bottom: calc(-5.2 * 15px);\\n    padding: 10px;\\n    white-space: nowrap; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover:before {\\n  opacity: 1;\\n  margin-top: -1px; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover__arrow {\\n  opacity: 1; }\\n\", \"\",{\"version\":3,\"sources\":[\"popovers.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAA8B;EAA9B,8BAA8B;MAA9B,kCAA8B;UAA9B,8BAA8B;EAC9B,wBAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB,EAAE;EACzB;IACE,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,QAAQ;IACR,iCAAiC;IACjC,oCAAoC;IACpC,mCAAmC;IACnC,aAAa,EAAE;IACf;MACE,kBAAkB;MAClB,QAAQ;MACR,WAAW;MACX,QAAQ;MACR,+BAA+B;MAC/B,oCAAoC;MACpC,mCAAmC,EAAE;EACzC;IACE,UAAU;IACV,qCAA6B;YAA7B,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,mCAAmC;IACnC,gCAAgC;IAChC,aAAa;IACb,mBAAmB,EAAE;;AAEzB;EACE,UAAU;EACV,gBAAgB,EAAE;;AAEpB;EACE,UAAU,EAAE\",\"file\":\"popovers.scss\",\"sourcesContent\":[\".se-slot-popover {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column-reverse;\\n  justify-content: center; }\\n  .se-slot-popover__arrow {\\n    opacity: 0;\\n    margin-top: 15px;\\n    position: relative;\\n    width: 0;\\n    border-bottom: 12px solid #d9d9d9;\\n    border-right: 12px solid transparent;\\n    border-left: 12px solid transparent;\\n    z-index: 9999; }\\n    .se-slot-popover__arrow--fill {\\n      position: absolute;\\n      top: 1px;\\n      left: -11px;\\n      width: 0;\\n      border-bottom: 11px solid white;\\n      border-right: 11px solid transparent;\\n      border-left: 11px solid transparent; }\\n  .se-slot-popover:before {\\n    opacity: 0;\\n    box-shadow: 0 0 4px 0 #d9d9d9;\\n    z-index: 3125;\\n    background-color: white;\\n    color: #32363a;\\n    border: 1px solid #d9d9d9;\\n    border-radius: 4px;\\n    content: attr(data-popover-content);\\n    margin-bottom: calc(-5.2 * 15px);\\n    padding: 10px;\\n    white-space: nowrap; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover:before {\\n  opacity: 1;\\n  margin-top: -1px; }\\n\\n[data-smartedit-component-type='ContentSlot']:hover .se-slot-popover__arrow {\\n  opacity: 1; }\\n\"],\"sourceRoot\":\"\"}]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","module.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/lodash/lodash.js\");","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","module.exports = (__webpack_require__(/*! dll-reference vendor_chunk */ \"dll-reference vendor_chunk\"))(\"../../npm-ancillary/npmancillary/resources/npm/node_modules/tslib/tslib.es6.js\");","module.exports = (__webpack_require__(/*! dll-reference smarteditcommons */ \"dll-reference smarteditcommons\"))(\"./smartedit-build/lib/smarteditcommons/src/index.js\");","var map = {\n\t\"./components/synchronize/synchronizationPanel.js\": \"./jsTarget/web/features/cmscommons/components/synchronize/synchronizationPanel.js\",\n\t\"./dao/resource.js\": \"./jsTarget/web/features/cmscommons/dao/resource.js\",\n\t\"./dao/resourceLocations.js\": \"./jsTarget/web/features/cmscommons/dao/resourceLocations.js\",\n\t\"./services/componentService.js\": \"./jsTarget/web/features/cmscommons/services/componentService.js\",\n\t\"./services/componentVisibilityAlertServiceInterface.js\": \"./jsTarget/web/features/cmscommons/services/componentVisibilityAlertServiceInterface.js\",\n\t\"./services/removeComponentServiceInterface.js\": \"./jsTarget/web/features/cmscommons/services/removeComponentServiceInterface.js\",\n\t\"./services/synchronizationService.js\": \"./jsTarget/web/features/cmscommons/services/synchronizationService.js\",\n\t\"./templates.js\": \"./jsTarget/web/features/cmscommons/templates.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./jsTarget/web/features/cmscommons sync recursive \\\\.js$\";","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {diNameUtils, SeModule} from 'smarteditcommons';\r\nimport {\r\n\tDEFAULT_SYNCHRONIZATION_EVENT,\r\n\tDEFAULT_SYNCHRONIZATION_POLLING,\r\n\tDEFAULT_SYNCHRONIZATION_STATUSES\r\n} from 'cmscommons/components/synchronize/synchronizationConstants';\r\n\r\n@SeModule({\r\n\tproviders: [\r\n\t\tdiNameUtils.makeValueProvider({DEFAULT_SYNCHRONIZATION_STATUSES}),\r\n\t\tdiNameUtils.makeValueProvider({DEFAULT_SYNCHRONIZATION_POLLING}),\r\n\t\tdiNameUtils.makeValueProvider({DEFAULT_SYNCHRONIZATION_EVENT})\r\n\t]\r\n})\r\n\r\n\rexport class /* @ngInject */ CmsConstantsModule {}","\nvar content = require(\"!!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./synchronization.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./synchronization.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./synchronization.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * @ngdoc object\r\n * @name cmsConstantsModule.object:SYNCHRONIZATION_STATUSES\r\n *\r\n * @description\r\n * Constant containing the different sync statuses\r\n * * UNAVAILABLE\r\n * * IN_SYNC\r\n * * NOT_SYNC\r\n * * IN_PROGRESS\r\n * * SYNC_FAILED\r\n * \r\n */\r\nimport './synchronization.scss';\r\n\r\nexport const DEFAULT_SYNCHRONIZATION_STATUSES = {\r\n\tUNAVAILABLE: \"UNAVAILABLE\",\r\n\tIN_SYNC: \"IN_SYNC\",\r\n\tNOT_SYNC: \"NOT_SYNC\",\r\n\tIN_PROGRESS: \"IN_PROGRESS\",\r\n\tSYNC_FAILED: \"SYNC_FAILED\"\r\n};\r\n\r\n/**\r\n * @ngdoc object\r\n * @name cmsConstantsModule.object:SYNCHRONIZATION_POLLING\r\n *\r\n * @description\r\n * Constant containing polling related values\r\n * * `SLOW_POLLING_TIME` : the slow polling time in milliseconds\r\n * * `FAST_POLLING_TIME` : the slow polling time in milliseconds\r\n * * `SPEED_UP` : event used to speed up polling (`syncPollingSpeedUp`)\r\n * * `SLOW_DOWN` : event used to slow down polling (`syncPollingSlowDown`)\r\n * * `FAST_FETCH` : event used to trigger a sync fetch (`syncFastFetch`)\r\n * * `FETCH_SYNC_STATUS_ONCE`: event used to trigger a one time sync (`fetchSyncStatusOnce`)\r\n *\r\n */\r\nexport const DEFAULT_SYNCHRONIZATION_POLLING = {\r\n\tSLOW_POLLING_TIME: 20000,\r\n\tFAST_POLLING_TIME: 4000,\r\n\tSPEED_UP: \"syncPollingSpeedUp\",\r\n\tSLOW_DOWN: \"syncPollingSlowDown\",\r\n\tFAST_FETCH: \"syncFastFetch\",\r\n\tFETCH_SYNC_STATUS_ONCE: \"fetchSyncStatusOnce\"\r\n};\r\n\r\n/**\r\n * @ngdoc object\r\n * @name cmsConstantsModule.object:SYNCHRONIZATION_EVENT\r\n * \r\n * @description\r\n * Constant containing synchronization events\r\n * * CATALOG_SYNCHRONIZED\r\n */\r\nexport const DEFAULT_SYNCHRONIZATION_EVENT = {\r\n\tCATALOG_SYNCHRONIZED: \"CATALOG_SYNCHRONIZED_EVENT\"\r\n};","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('synchronizationPanelModule', [\n        'yHelpModule',\n        'translationServiceModule',\n        'alertServiceModule',\n        'timerModule',\n        'alertsBoxModule',\n        'yMessageModule',\n        'smarteditServicesModule',\n        'l10nModule'\n    ])\n    .controller('SynchronizationPanelController', function($log, $q, $attrs, $translate, isBlank, EVENT_CONTENT_CATALOG_UPDATE, SYNCHRONIZATION_POLLING, SYNCHRONIZATION_STATUSES, alertService, systemEventService, timerService, crossFrameEventService, catalogService, l10nFilter, sharedDataService, waitDialogService) {\n\n        this.syncPendingItems = [];\n        this.selectedItems = [];\n        this.message = null;\n        this.showItemList = true;\n        this.disableList = false;\n        this.isLoading = false;\n        this.refreshInterval = SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME;\n        this.getRows = function() {\n            return this.syncStatus ? [this.syncStatus].concat(this.syncStatus.selectedDependencies) : [];\n        };\n\n        /**\n         * @ngdoc object\n         * @name synchronizationPanelModule.object:api\n         * @description\n         * The synchronization panel api object exposing public functionality\n         */\n        this.api = {\n            /**\n             * @ngdoc method\n             * @name selectAll\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that selects all items on synchronization panel. Should be used with onSyncStatusReady event.\n             */\n            selectAll: function() {\n                if (this.syncStatus) {\n                    this.syncStatus.selected = true;\n                    this.selectionChange(0);\n                } else {\n                    throw new Error(\"Synchronization status is not available. The 'selectAll' function should be used with 'onSyncStatusReady' event.\");\n                }\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name displayItemList\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that changes the visibility of the item list.\n             */\n            displayItemList: function(visible) {\n                this.showItemList = visible;\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name disableItemList\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that determines if the panel, as a whole, should be disabled.\n             * \n             */\n            disableItemList: function(disableList) {\n                this.disableList = disableList;\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name setMessage\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that adds a message (yMessage) in the panel. \n             * \n             */\n            setMessage: function(msgConfig) {\n                this.message = msgConfig;\n            }.bind(this),\n\n            /**\n             * @ngdoc method\n             * @name disableItem\n             * @methodOf synchronizationPanelModule.object:api\n             * @description\n             * Function that determines if an item should be disabled.\n             */\n            disableItem: null\n\n        };\n\n        this.selectionChange = function(index) {\n\n            this.syncStatus.selectedDependencies.forEach(function(item) {\n                item.selected = (index === 0 && item.status !== SYNCHRONIZATION_STATUSES.IN_SYNC && !item.isExternal) ? true : item.selected;\n            }.bind(this));\n\n            this.selectedItems = this.getRows().filter(function(item) {\n                return item.selected;\n            });\n\n            if (this.onSelectedItemsUpdate) {\n                this.onSelectedItemsUpdate(this.selectedItems);\n            }\n\n        };\n        this.preserveSelection = function(selectedItems) {\n\n            var itemIds = (selectedItems || []).map(function(item) {\n                return item.itemId;\n            }, []);\n\n            this.getRows().forEach(function(item) {\n                item.selected = itemIds.indexOf(item.itemId) > -1 && item.status !== SYNCHRONIZATION_STATUSES.IN_SYNC;\n            });\n        };\n\n        this.isDisabled = function(item) {\n            if (this.disableList || (this.api.disableItem && this.api.disableItem(item))) {\n                return true;\n            }\n\n            return (item !== this.syncStatus && this.syncStatus.selected) || item.status === SYNCHRONIZATION_STATUSES.IN_SYNC;\n        }.bind(this);\n\n        this.isSyncButtonDisabled = function() {\n            return (this.disableList || this.selectedItems.length === 0 || this.syncPendingItems.length !== 0);\n        };\n        this.isInSync = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.IN_SYNC;\n        };\n        this.isOutOfSync = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.NOT_IN_SYNC;\n        };\n        this.isInProgress = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.IN_PROGRESS;\n        };\n        this.isSyncFailed = function(dependency) {\n            return dependency.status === SYNCHRONIZATION_STATUSES.SYNC_FAILED;\n        };\n        this.hasHelp = function(dependency) {\n            return dependency.dependentItemTypesOutOfSync && dependency.dependentItemTypesOutOfSync.length > 0;\n        };\n        this.buildInfoTemplate = function(dependency) {\n            if (dependency && dependency.dependentItemTypesOutOfSync && !dependency.isExternal) {\n                var infoTemplate = dependency.dependentItemTypesOutOfSync.reduce(function(accumulator, item) {\n                    accumulator += (\"<div>\" + $translate.instant(item.i18nKey) + \"</div>\");\n                    return accumulator;\n                }, \"\");\n                return (infoTemplate) ? \"<div>\" + infoTemplate + \"</div>\" : '';\n            } else if (dependency.isExternal) {\n                return dependency.catalogVersionNameTemplate;\n            }\n        };\n\n        this.fetchSyncStatus = function(eventId, eventData) {\n            if (eventData && eventData.itemId !== this.itemId) {\n                return;\n            }\n\n            this.isLoading = true;\n            return this.getSyncStatus(this.itemId).then(function(syncStatus) {\n                sharedDataService.get('experience').then(function(experience) {\n                    var targetCatalogVersion = syncStatus.catalogVersionUuid;\n                    this.syncStatus = syncStatus;\n                    this.preserveSelection(this.selectedItems);\n                    this.selectionChange();\n                    this._updateStatus();\n                    this.markExternalComponents(targetCatalogVersion, this.getRows());\n                    this.setTemplateExternalCatalogVersionName(experience, this.getRows());\n                    if (this.syncPendingItems.length === 0) {\n                        this.refreshInterval = SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME;\n                        this.resynchTimer.restart(this.refreshInterval);\n                        systemEventService.publishAsync(SYNCHRONIZATION_POLLING.SLOW_DOWN, this.itemId);\n                    }\n\n                    if (typeof this.onSyncStatusReady === 'function') {\n                        this.onSyncStatusReady({\n                            $syncStatus: syncStatus\n                        });\n                    }\n                }.bind(this));\n            }.bind(this)).finally(function() {\n                this.isLoading = false;\n            }.bind(this));\n        };\n\n        this.markExternalComponents = function(targetCatalogVersion, syncStatuses) {\n            syncStatuses.forEach(function(syncStatus) {\n                syncStatus.isExternal = syncStatus.catalogVersionUuid !== targetCatalogVersion;\n            });\n        };\n\n        this.getInfoTitle = function(dependency) {\n            if (!dependency.isExternal) {\n                return \"se.cms.synchronization.panel.update.title\";\n            }\n        };\n\n        this.getTemplateInfoForExternalComponent = function() {\n            return \"<div>\" + $translate.instant('se.cms.synchronization.slot.external.component') + \"</div>\";\n        };\n\n        this.setTemplateExternalCatalogVersionName = function(experience, syncStatuses) {\n            syncStatuses.forEach(function(syncStatus) {\n                syncStatus.catalogVersionNameTemplate = \"<span></span>\";\n                catalogService.getCatalogVersionByUuid(syncStatus.catalogVersionUuid, experience.siteDescriptor.uid).then(function(catalogVersion) {\n                    syncStatus.catalogVersionNameTemplate = \"<div>\" + l10nFilter(catalogVersion.catalogName) + \"</div>\";\n                });\n            });\n        };\n\n        this._updateStatus = function() {\n            var anyFailures = false;\n\n            var itemsInErrors = '';\n            var preNbSyncPendingItems = this.syncPendingItems.length;\n            this.getRows().forEach(function(item) {\n                if (this.syncPendingItems.indexOf(item.itemId) > -1 && item.status === SYNCHRONIZATION_STATUSES.SYNC_FAILED) {\n                    itemsInErrors = ' ' + itemsInErrors + item.itemId;\n                    anyFailures = true;\n                }\n                if (this.syncPendingItems.indexOf(item.itemId) > -1 && item.status !== SYNCHRONIZATION_STATUSES.IN_PROGRESS && item.status !== SYNCHRONIZATION_STATUSES.NOT_SYNC) {\n                    this.syncPendingItems.splice(this.syncPendingItems.indexOf(item.itemId), 1);\n                }\n\n                // if there was at least one item in the sync queue, and the last item has been resolved\n                // or if there wasn't any item in the sync queue\n                var syncQueueCompleted = (preNbSyncPendingItems && this.syncPendingItems.length === 0);\n                if (syncQueueCompleted || preNbSyncPendingItems === 0) {\n                    if (syncQueueCompleted) {\n                        systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE);\n                        preNbSyncPendingItems = 0;\n                    }\n                    waitDialogService.hideWaitModal();\n                }\n                if (item.status === SYNCHRONIZATION_STATUSES.IN_PROGRESS && this.syncPendingItems.indexOf(item.itemId) === -1) {\n                    this.syncPendingItems.push(item.itemId);\n                }\n            }.bind(this));\n\n            if (anyFailures) {\n                alertService.showDanger({\n                    message: $translate.instant('se.cms.synchronization.panel.failure.message', {\n                        items: itemsInErrors\n                    })\n                });\n            }\n\n        };\n\n        this.$onInit = function() {\n            this.syncItems = function() {\n\n                var syncPayload = this.getRows().filter(function(item) {\n                    return item.selected;\n                }).map(function(item) {\n                    return {\n                        itemId: item.itemId,\n                        itemType: item.itemType\n                    };\n                });\n                Array.prototype.push.apply(this.syncPendingItems, syncPayload.map(function(el) {\n                    return el.itemId;\n                }));\n\n                if (this.selectedItems.length) {\n                    waitDialogService.showWaitModal(\"se.sync.synchronizing\");\n                    return this.performSync(syncPayload).then(function() {\n                        this.refreshInterval = SYNCHRONIZATION_POLLING.FAST_POLLING_TIME;\n                        this.resynchTimer.restart(this.refreshInterval);\n                        systemEventService.publishAsync(SYNCHRONIZATION_POLLING.SPEED_UP, this.itemId);\n                    }.bind(this), function() {\n                        $log.warn(\"[synchronizationPanel] - Could not perform synchronization.\");\n                        waitDialogService.hideWaitModal();\n                    });\n                } else {\n                    return $q.when();\n                }\n            }.bind(this);\n\n            if (typeof this.getApi === 'function') {\n                this.getApi({\n                    $api: this.api\n                });\n            }\n\n            this.unsubscribeFastFetch = crossFrameEventService.subscribe(SYNCHRONIZATION_POLLING.FAST_FETCH, this.fetchSyncStatus.bind(this));\n            this.fetchSyncStatus();\n\n            //start timer polling\n            this.resynchTimer = timerService.createTimer(this.fetchSyncStatus.bind(this), this.refreshInterval);\n            this.resynchTimer.start();\n        };\n\n        this.$onDestroy = function() {\n            this.resynchTimer.teardown();\n            this.unsubscribeFastFetch();\n            systemEventService.publishAsync(SYNCHRONIZATION_POLLING.SLOW_DOWN, this.itemId);\n        };\n\n        this.$postLink = function() {\n            this.showSyncButton = isBlank($attrs.syncItems);\n        };\n    })\n    /**\n     * @ngdoc directive\n     * @name synchronizationPanelModule.component:synchronizationPanel\n     * @scope\n     * @restrict E\n     * @element synchronization-panel\n     *\n     * @description\n     * This component reads and performs synchronization for a main object and its dependencies (from a synchronization perspective).\n     * The component will list statuses of backend-configured dependent types.\n     * The main object and the listed dependencies will display as well lists of logical grouping of dependencies (in a popover)\n     * that cause the main object or the listed dependency to be out of sync.\n     * @param {< String} itemId the unique identifier of the main object of the synchronization panel\n     * @param {< Function} getSyncStatus the callback, invoked with itemId that returns a promise of the aggregated sync status required for the component to initialize.\n     * the expected format of the aggregated status is the following:\n     * ````\n     *{\n     *  itemId:'someUid',\n     *  itemType:'AbstractPage',\n     *  name:'Page1',\n     *  lastSyncTime: long,\n     *  selectAll: 'some.key.for.first.row.item' // Some i18nKey to display the title for the first item\n     *  status:{name: 'IN_SYNC', i18nKey: 'some.key.for.in.sync'}  //'IN_SYNC'|'NOT_IN_SYNC'|'NOT_AVAILABLE'|'IN_PROGRESS'|'SYNC_FAILED'\n     *  dependentItemTypesOutOfSync:[\n     *                          {code: 'MetaData', i18nKey: 'some.key.for.MetaData'},\n     *                          {code: 'Restrictions', i18nKey: 'some.key.for.Restrictions'},\n     *                          {code: 'Slot', i18nKey: 'some.key.for.Slot'},\n     *                          {code: 'Component', i18nKey: 'some.key.for.Component'},\n     *                          {code: 'Navigation', i18nKey: 'some.key.for.Navigation'},\n     *                          {code: 'Customization', i18nKey: 'some.key.for.Customization'}\n     *                          ],\n     *  selectedDependencies:[\n     *  {\n     *      itemId:'someUid',\n     *      itemType:'ContentSlot',\n     *      name:'Slot1',\n     *      lastSyncTime: long,\n     *      selectAll: 'some.key.for.first.row.item' // Some i18nKey to display the title for the first item\n     *      status:{name: 'IN_SYNC', i18nKey: 'some.key.for.in.sync'}  //'IN_SYNC'|'NOT_IN_SYNC'|'NOT_AVAILABLE'|'IN_PROGRESS'|'SYNC_FAILED'\n     *      dependentItemTypesOutOfSync:[\n     *                              {code: 'Component', i18nKey: 'some.key.for.Component'},\n     *                              {code: 'Navigation', i18nKey: 'some.key.for.Navigation'},\n     *                              {code: 'Customization', i18nKey: 'some.key.for.Customization'}\n     *                              ]\n     *  }\n     *  ]\n     *}\n     * ````\n     *  @param {< Function} performSync the function invoked with the list of item unique identifiers to perform synchronization. It returns a promise of the resulting sync status with the following values : 'IN_SYNC'|'NOT_IN_SYNC'|'NOT_AVAILABLE'|'IN_PROGRESS'|'SYNC_FAILED'\n     *  @param {< String =} headerTemplateUrl the path to an HTML template to customize the header of the synchronization panel. Optional.\n     *  @param {= Function =} syncItems enables parent directive/component to invoke the internal synchronization. Optional, if not set, the panel will display a sync button for manual synchronization.\n     *  @param {< Function =} onSelectedItemsUpdate callback function invoked when the the list of selected items change\n     *  @param {& Function =} onSyncStatusReady callback function that is invoked each time when the new synchronization status is available.\n     *  @param {& Function =} getApi Exposes the synchronization panel's api object\n     */\n    .component('synchronizationPanel', {\n        templateUrl: 'synchronizationPanelTemplate.html',\n        controller: 'SynchronizationPanelController',\n        controllerAs: 'sync',\n        bindings: {\n            itemId: '<',\n            getSyncStatus: '<',\n            performSync: '<',\n            headerTemplateUrl: '<?',\n            syncItems: '=?',\n            onSelectedItemsUpdate: '<?',\n            onSyncStatusReady: '&?',\n            getApi: '&?'\n        }\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as angular from 'angular';\r\nimport {TypedMap} from 'smarteditcommons';\r\nimport {ICMSComponent} from 'cmscommons';\r\n\r\n/**\r\n * @description\r\n * Rest Service to retrieve page content slots for components.\r\n */\r\nexport abstract class IPageContentSlotsComponentsRestService {\r\n\r\n\t/**\r\n\t * @description\r\n\t * Clears the slotId - components list map in the cache.\r\n\t */\r\n\tclearCache(): void {\r\n\t\t'proxyFunction';\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * Retrieves a list of pageContentSlotsComponents associated to a page and Converts the list of pageContentSlotsComponents to slotId - components list map.\r\n\t * If the map is already stored in the cache, it will return the cache info.\r\n\t *\r\n\t * @param {string} pageUid The uid of the page to retrieve the content slots to components map.\r\n\t * @return {Promise} A promise that resolves to slotId - components list map.\r\n\t */\r\n\tgetSlotsToComponentsMapForPageUid(pageUid: string): angular.IPromise<TypedMap<ICMSComponent[]>> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * Retrieves a list of all components for a given slot which is part of the page being loaded.\r\n\t * It returns all the components irrespective of their visibility.\r\n\t *\r\n\t * @param {string} slotUuid The uid of the slot to retrieve the list of components.\r\n\t * @return {Promise} A promise that resolves to components list.\r\n\t */\r\n\tgetComponentsForSlot(slotUuid: string): angular.IPromise<ICMSComponent[]> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * @ngdoc overview\r\n * @name cmsitemsRestService\r\n * \r\n * @description\r\n * The cmsitemsRestService provides a service to CRUD operations on CMS Items API.\r\n */\r\nimport * as lodash from 'lodash';\r\nimport {\r\n\trarelyChangingContent,\r\n\tuserEvictionTag,\r\n\tCached,\r\n\tCONTEXT_SITE_ID,\r\n\tEvictionTag,\r\n\tInvalidateCache,\r\n\tICatalogService,\r\n\tIRestService,\r\n\tIRestServiceFactory,\r\n\tOperationContextRegistered,\r\n\tPageable,\r\n\tPagination,\r\n\tSeInjectable\r\n} from 'smarteditcommons';\r\nimport {CMSItem} from 'cmscommons/dtos';\r\n\r\nexport interface Page<T> {\r\n\tpagination: Pagination;\r\n\tresponse: T[];\r\n\t[index: string]: T[] | Pagination;\r\n}\r\n\r\nexport interface CMSItemSearch extends Pageable {\r\n\ttypeCode?: string;\r\n\titemSearchParams: string;\r\n\tcatalogId?: string;\r\n\tcatalogVersion?: string;\r\n}\r\n\r\nexport const cmsitemsUri = `/cmswebservices/v1/sites/${CONTEXT_SITE_ID}/cmsitems`;\r\n\r\nexport const cmsitemsEvictionTag = new EvictionTag({event: \"CMSITEMS_UPDATE\"});\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsitemsRestService.cmsitemsRestService\r\n * \r\n * @description\r\n * Service to deal with CMS Items related CRUD operations.\r\n */\r\n@OperationContextRegistered(cmsitemsUri.replace(/CONTEXT_SITE_ID/, ':CONTEXT_SITE_ID'), 'CMS')\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ CmsitemsRestService {\r\n\r\n\tprivate readonly cmsitemsUuidsUri = `/cmswebservices/v1/sites/${CONTEXT_SITE_ID}/cmsitems/uuids`;\r\n\r\n\tprivate resource: IRestService<CMSItem>;\r\n\tprivate versionedResource: IRestService<CMSItem>;\r\n\tprivate uuidsResource: IRestService<CMSItem[]>;\r\n\r\n\tconstructor(\r\n\t\tprivate restServiceFactory: IRestServiceFactory,\r\n\t\tprivate catalogService: ICatalogService\r\n\t) {\r\n\r\n\t\tthis.resource = restServiceFactory.get(cmsitemsUri);\r\n\r\n\t\tthis.versionedResource = restServiceFactory.get(cmsitemsUri + \"/:itemUuid\");\r\n\r\n\t\tthis.uuidsResource = restServiceFactory.get(this.cmsitemsUuidsUri);\r\n\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#create\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Create a new CMS Item.\r\n     * \r\n     * @param {Object} cmsitem The object representing the CMS Item to create\r\n     * \r\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the CMS Item object. If the\r\n     * request fails, it resolves with errors from the backend.\r\n     */\r\n\tcreate(cmsitem: CMSItem): angular.IPromise<CMSItem> {\r\n\t\treturn this.catalogService.getCatalogVersionUUid().then((catalogVersionUUid) => {\r\n\t\t\tcmsitem.catalogVersion = cmsitem.catalogVersion || catalogVersionUUid;\r\n\t\t\tif (cmsitem.onlyOneRestrictionMustApply === undefined) {\r\n\t\t\t\tcmsitem.onlyOneRestrictionMustApply = false;\r\n\t\t\t}\r\n\t\t\treturn this.resource.save(cmsitem);\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#getById\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Get the CMS Item that matches the given item uuid (Universally Unique Identifier).\r\n     * \r\n     * @param {Number} cmsitemUuid The CMS Item uuid\r\n     * \r\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the CMS Item object. If the\r\n     * request fails, it resolves with errors from the backend.\r\n     */\r\n\t@Cached({actions: [rarelyChangingContent], tags: [userEvictionTag, cmsitemsEvictionTag]})\r\n\tgetById(cmsitemUuid: string): angular.IPromise<CMSItem> {\r\n\t\treturn this.resource.getById(cmsitemUuid);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#getByIdAndVersion\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Get the CMS Item that matches the given item uuid (Universally Unique Identifier) for a given version.\r\n     * \r\n     * @param {String} cmsitemUuid The CMS Item uuid\r\n     * @param {String} versionId The uid of the version to be retrieved.\r\n     * \r\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the CMS Item object. If the\r\n     * request fails, it resolves with errors from the backend.\r\n     */\r\n\t@Cached({actions: [rarelyChangingContent], tags: [userEvictionTag, cmsitemsEvictionTag]})\r\n\tgetByIdAndVersion(itemUuid: string, versionId: string): angular.IPromise<CMSItem> {\r\n\t\treturn this.versionedResource.get({\r\n\t\t\titemUuid,\r\n\t\t\tversionId\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#get\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Fetch CMS Items search result by making a REST call to the CMS Items API.\r\n     * A search can be performed by a typeCode (optionnaly in combination of a mask parameter), or by providing a list of cms items uuid.\r\n     *\r\n     * @param {Object} queryParams The object representing the query params\r\n     * @param {String} queryParams.pageSize number of items in the page\r\n     * @param {String} queryParams.currentPage current page number\r\n     * @param {String =} queryParams.typeCode for filtering on the cms item typeCode\r\n     * @param {String =} queryParams.mask for filtering the search\r\n     * @param {String =} queryParams.itemSearchParams search on additional fields using a comma separated list of field name and value\r\n     * pairs which are separated by a colon. Exact matches only.\r\n     * @param {String =} queryParams.catalogId the catalog to search items in. If empty, the current context catalog will be used.\r\n     * @param {String =} queryParams.catalogVersion the catalog version to search items in. If empty, the current context catalog version will be used.\r\n     *\r\n     * @returns {Promise} If request is successful, it returns a promise that resolves with the paged search result. If the\r\n     * request fails, it resolves with errors from the backend.\r\n     */\r\n\t@Cached({actions: [rarelyChangingContent], tags: [userEvictionTag, cmsitemsEvictionTag]})\r\n\tpublic get<T extends CMSItem = CMSItem>(queryParams: CMSItemSearch): angular.IPromise<Page<T>> {\r\n\t\treturn this.catalogService.retrieveUriContext().then((uriContext) => {\r\n\r\n\t\t\tconst catalogDetailsParams = {\r\n\t\t\t\tcatalogId: queryParams.catalogId || uriContext.CURRENT_CONTEXT_CATALOG,\r\n\t\t\t\tcatalogVersion: queryParams.catalogVersion || uriContext.CURRENT_CONTEXT_CATALOG_VERSION\r\n\t\t\t};\r\n\r\n\t\t\tqueryParams = lodash.merge(catalogDetailsParams, queryParams);\r\n\r\n\t\t\treturn this.restServiceFactory.get<Page<T>>(cmsitemsUri).get(queryParams);\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#getByIds\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Fetch CMS Items by uuids, making a POST call to the CMS Items API.\r\n     * A search can be performed by providing a list of cms items uuid.\r\n     *   \r\n     * @param {string[] =} uuids list of cms item uuids\r\n     *\r\n     * @returns {Promise} If request is successful, it returns a promise that resolves to the result. If the\r\n     * request fails, it resolves with errors from the backend. Be mindful that the response payload size could \r\n     * increase dramatically depending on the number of uuids that you send on the request. \r\n     */\r\n\t@Cached({actions: [rarelyChangingContent], tags: [userEvictionTag, cmsitemsEvictionTag]})\r\n\tgetByIds(uuids: string[]): angular.IPromise<CMSItem[]> {\r\n\t\tuuids = Array.from(new Set(uuids)); // removing duplicates\r\n\t\treturn this.catalogService.getCatalogVersionUUid().then((catalogVersion) => {\r\n\t\t\treturn this.uuidsResource.save({\r\n\t\t\t\tcatalogVersion,\r\n\t\t\t\tuuids\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#update\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Update a CMS Item.\r\n     * \r\n     * @param {Object} cmsitem The object representing the CMS Item to update\r\n     * @param {String} cmsitem.identifier The cms item identifier (uuid)\r\n     * \r\n     * @returns {angular.IPromise<CMSItem> } If request is successful, it returns a promise that resolves with the updated CMS Item object. If the\r\n     * request fails, it resolves with errors from the backend.\r\n     */\r\n\t@InvalidateCache(cmsitemsEvictionTag)\r\n\tupdate(cmsitem: CMSItem): angular.IPromise<CMSItem> {\r\n\t\treturn this.resource.update(cmsitem);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsitemsRestService.service:cmsitemsRestService#delete\r\n     * @methodOf cmsitemsRestService.cmsitemsRestService\r\n     * \r\n     * @description\r\n     * Remove a CMS Item.\r\n     * \r\n     * @param {Number} cmsitemUuid The CMS Item uuid\r\n     */\r\n\t@InvalidateCache(cmsitemsEvictionTag)\r\n\tdelete(identifier: string): angular.IPromise<void> {\r\n\t\treturn this.resource.remove({\r\n\t\t\tidentifier\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","export * from './cmswebservices/sites/CmsitemsRestService';","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n(function() {\n    /**\n     * @ngdoc overview\n     * @name resourceModule\n     *\n     * @description\n     * The resource module provides $resource factories.\n     */\n    angular.module('resourceModule', ['smarteditServicesModule', 'resourceLocationsModule', 'cmsResourceLocationsModule', 'functionsModule'])\n        /**\n         * @ngdoc service\n         * @name resourceModule.service:itemsResource\n         *\n         * @description\n         * This service is used to retrieve the $resource factor for retrieving component items.\n         */\n        .factory('itemsResource', function(restServiceFactory, ITEMS_RESOURCE_URI, URIBuilder) {\n\n            return {\n                /**\n                 * @ngdoc method\n                 * @name resourceModule.service:itemsResource#getItemResourceByContext\n                 * @methodOf resourceModule.service:itemsResource\n                 * \n                 * @description\n                 * Returns  the resource of the custom components REST service by replacing the placeholders with the currently selected catalog version.\n                 */\n                getItemResource: function() {\n                    return restServiceFactory.get(ITEMS_RESOURCE_URI);\n                },\n\n                /**\n                 * @ngdoc method\n                 * @name resourceModule.service:itemsResource#getItemResourceByContext\n                 * @methodOf resourceModule.service:itemsResource\n                 * \n                 * @description\n                 * Returns  the resource of the custom components REST service by providing the current uri context as the input object.\n                 * \n                 * The input object contains the necessary site and catalog information to retrieve the items.\n                 * \n                 * @param {Object} uriContext A  {@link resourceLocationsModule.object:UriContext uriContext}\n                 */\n                getItemResourceByContext: function(context) {\n                    return restServiceFactory.get(new URIBuilder(ITEMS_RESOURCE_URI).replaceParams(context).build());\n                }\n\n            };\n\n        })\n        .factory('pagesContentSlotsComponentsResource', function(restServiceFactory, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI) {\n            return restServiceFactory.get(PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI);\n        })\n        .factory('navigationNodeRestService', function(restServiceFactory, NAVIGATION_MANAGEMENT_RESOURCE_URI) {\n            return restServiceFactory.get(NAVIGATION_MANAGEMENT_RESOURCE_URI);\n        })\n        .factory('synchronizationResource', function(restServiceFactory, URIBuilder, GET_PAGE_SYNCHRONIZATION_RESOURCE_URI, POST_PAGE_SYNCHRONIZATION_RESOURCE_URI) {\n\n            return {\n\n                getPageSynchronizationGetRestService: function(uriContext) {\n                    var getURI = new URIBuilder(GET_PAGE_SYNCHRONIZATION_RESOURCE_URI).replaceParams(uriContext).build();\n                    return restServiceFactory.get(getURI);\n                },\n\n                getPageSynchronizationPostRestService: function(uriContext) {\n                    var postURI = new URIBuilder(POST_PAGE_SYNCHRONIZATION_RESOURCE_URI).replaceParams(uriContext).build();\n                    return restServiceFactory.get(postURI);\n                }\n            };\n\n        });\n})();\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n(function() {\n\n    var CONTEXT_CATALOG = 'CURRENT_CONTEXT_CATALOG';\n    var CONTEXT_CATALOG_VERSION = 'CURRENT_CONTEXT_CATALOG_VERSION';\n    var CONTEXT_SITE_ID = 'CURRENT_CONTEXT_SITE_ID';\n\n    var PAGE_CONTEXT_CATALOG = 'CURRENT_PAGE_CONTEXT_CATALOG';\n    var PAGE_CONTEXT_CATALOG_VERSION = 'CURRENT_PAGE_CONTEXT_CATALOG_VERSION';\n    var PAGE_CONTEXT_SITE_ID = 'CURRENT_PAGE_CONTEXT_SITE_ID';\n\n    angular.module('cmsResourceLocationsModule', [])\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTEXT_SITE_ID\n         *\n         * @description\n         * Constant containing the name of the site uid placeholder in URLs\n         */\n        .constant('CONTEXT_SITE_ID', CONTEXT_SITE_ID)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTEXT_CATALOG\n         *\n         * @description\n         * Constant containing the name of the catalog uid placeholder in URLs\n         */\n        .constant('CONTEXT_CATALOG', CONTEXT_CATALOG)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTEXT_CATALOG_VERSION\n         *\n         * @description\n         * Constant containing the name of the catalog version placeholder in URLs\n         */\n        .constant('CONTEXT_CATALOG_VERSION', CONTEXT_CATALOG_VERSION)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_CONTEXT_SITE_ID\n         *\n         * @description\n         * Constant containing the name of the current page site uid placeholder in URLs\n         */\n        .constant('PAGE_CONTEXT_SITE_ID', PAGE_CONTEXT_SITE_ID)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_CONTEXT_CATALOG\n         *\n         * @description\n         * Constant containing the name of the current page catalog uid placeholder in URLs\n         */\n        .constant('PAGE_CONTEXT_CATALOG', PAGE_CONTEXT_CATALOG)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_CONTEXT_CATALOG_VERSION\n         *\n         * @description\n         * Constant containing the name of the current page catalog version placeholder in URLs\n         */\n        .constant('PAGE_CONTEXT_CATALOG_VERSION', PAGE_CONTEXT_CATALOG_VERSION)\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:UriContext\n         *\n         * @description\n         * A map that contains the necessary site and catalog information for CMS services and directives.\n         * It contains the following keys:\n         * {@link resourceLocationsModule.object:CONTEXT_SITE_ID CONTEXT_SITE_ID} for the site uid,\n         * {@link resourceLocationsModule.object:CONTEXT_CATALOG CONTEXT_CATALOG} for the catalog uid,\n         * {@link resourceLocationsModule.object:CONTEXT_CATALOG_VERSION CONTEXT_CATALOG_VERSION} for the catalog version.\n         */\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:TYPES_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the component types REST service.\n         */\n        .constant('TYPES_RESOURCE_URI', '/cmswebservices/v1/types')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:ITEMS_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the custom components REST service.\n         */\n        .constant('ITEMS_RESOURCE_URI', '/cmswebservices/v1/sites/' + CONTEXT_SITE_ID + '/catalogs/' + CONTEXT_CATALOG + '/versions/' + CONTEXT_CATALOG_VERSION + '/items')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages content slot component REST service.\n         */\n        .constant('PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI', '/cmswebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pagescontentslotscomponents')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTENT_SLOT_TYPE_RESTRICTION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the content slot type restrictions REST service.\n         */\n        .constant('CONTENT_SLOT_TYPE_RESTRICTION_RESOURCE_URI', '/cmswebservices/v1/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pages/:pageUid/contentslots/:slotUid/typerestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the content slot type restrictions REST service given the page uid.\n         */\n        .constant('CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI', '/cmswebservices/v1/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pages/:pageUid/typerestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsMod`ule.object:PAGES_LIST_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages REST service.\n         */\n        .constant('PAGES_LIST_RESOURCE_URI', '/cmswebservices/v1/sites/' + CONTEXT_SITE_ID + '/catalogs/' + CONTEXT_CATALOG + '/versions/' + CONTEXT_CATALOG_VERSION + '/pages')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_LIST_PATH\n         *\n         * @description\n         * Path of the page list\n         */\n        .constant('PAGE_LIST_PATH', '/pages/:siteId/:catalogId/:catalogVersion')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:TRASHED_PAGE_LIST_PATH\n         *\n         * @description\n         * Path of the page list\n         */\n        .constant('TRASHED_PAGE_LIST_PATH', '/trashedpages/:siteId/:catalogId/:catalogVersion')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGES_CONTENT_SLOT_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the page content slots REST service\n         */\n        .constant('PAGES_CONTENT_SLOT_RESOURCE_URI', '/cmswebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pagescontentslots')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:PAGE_TEMPLATES_URI\n         *\n         * @description\n         * Resource URI of the page templates REST service\n         */\n        .constant('PAGE_TEMPLATES_URI', '/cmswebservices/v1/sites/:' + CONTEXT_SITE_ID + '/catalogs/:' + CONTEXT_CATALOG + '/versions/:' + CONTEXT_CATALOG_VERSION + '/pagetemplates')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_PAGE_PATH\n         *\n         * @description\n         * Path to the Navigation Management\n         */\n        .constant('NAVIGATION_MANAGEMENT_PAGE_PATH', '/navigations/:siteId/:catalogId/:catalogVersion')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the navigations REST service.\n         */\n        .constant('NAVIGATION_MANAGEMENT_RESOURCE_URI', '/cmswebservices/v1/sites/:' + CONTEXT_SITE_ID + '/catalogs/:' + CONTEXT_CATALOG + '/versions/:' + CONTEXT_CATALOG_VERSION + '/navigations')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_ENTRIES_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the navigations REST service.\n         */\n        .constant('NAVIGATION_MANAGEMENT_ENTRIES_RESOURCE_URI', '/cmswebservices/v1/sites/:' + CONTEXT_SITE_ID + '/catalogs/:' + CONTEXT_CATALOG + '/versions/:' + CONTEXT_CATALOG_VERSION + '/navigations/:navigationUid/entries')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:NAVIGATION_MANAGEMENT_ENTRY_TYPES_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the navigation entry types REST service.\n         */\n        .constant('NAVIGATION_MANAGEMENT_ENTRY_TYPES_RESOURCE_URI', '/cmswebservices/v1/navigationentrytypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.CONTEXTUAL_PAGES_RESTRICTIONS_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages restrictions REST service, with placeholders to be replaced by the currently selected catalog version.\n         */\n        .constant('CONTEXTUAL_PAGES_RESTRICTIONS_RESOURCE_URI', '/cmswebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/pagesrestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.PAGES_RESTRICTIONS_RESOURCE_URI\n         *\n         * @description\n         * Resource URI of the pages restrictions REST service, with placeholders to be replaced by the currently selected catalog version.\n         */\n        .constant('PAGES_RESTRICTIONS_RESOURCE_URI', '/cmswebservices/v1/sites/:siteUID/catalogs/:catalogId/versions/:catalogVersion/pagesrestrictions')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.RESTRICTION_TYPES_URI\n         *\n         * @description\n         * Resource URI of the restriction types REST service.\n         */\n        .constant('RESTRICTION_TYPES_URI', '/cmswebservices/v1/restrictiontypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.RESTRICTION_TYPES_URI\n         *\n         * @description\n         * Resource URI of the pageTypes-restrictionTypes relationship REST service.\n         */\n        .constant('PAGE_TYPES_RESTRICTION_TYPES_URI', '/cmswebservices/v1/pagetypesrestrictiontypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.PAGE_TYPES_URI\n         *\n         * @description\n         * Resource URI of the page types REST service.\n         */\n        .constant('PAGE_TYPES_URI', '/cmswebservices/v1/pagetypes')\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:GET_PAGE_SYNCHRONIZATION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI to retrieve the full synchronization status of page related items\n         */\n        .constant('GET_PAGE_SYNCHRONIZATION_RESOURCE_URI', '/cmssmarteditwebservices/v1/sites/' + PAGE_CONTEXT_SITE_ID + '/catalogs/' + PAGE_CONTEXT_CATALOG + '/versions/' + PAGE_CONTEXT_CATALOG_VERSION + '/synchronizations/versions/:target/pages/:pageUid')\n\n\n        /**\n         * @ngdoc object\n         * @name resourceLocationsModule.object:POST_PAGE_SYNCHRONIZATION_RESOURCE_URI\n         *\n         * @description\n         * Resource URI to perform synchronization of page related items\n         */\n        .constant('POST_PAGE_SYNCHRONIZATION_RESOURCE_URI', '/cmssmarteditwebservices/v1/sites/' + CONTEXT_SITE_ID + '/catalogs/' + CONTEXT_CATALOG + '/versions/' + CONTEXT_CATALOG_VERSION + '/synchronizations/versions/:target');\n})();\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {CMSItem, CMSRestriction} from './';\r\n\r\n/**\r\n * @description\r\n * Interface for cms-page information\r\n */\r\nexport interface ICMSPage extends CMSItem {\r\n\tlabel?: string;\r\n\ttype?: {\r\n\t\t[index: string]: string\r\n\t};\r\n\t[index: string]: any;\r\n\tpageStatus: CMSPageStatus;\r\n\tapprovalStatus: CmsApprovalStatus;\r\n\tdisplayStatus: string;\r\n\ttemplate?: string;\r\n\tmasterTemplate: string;\r\n\ttitle: {\r\n\t\t[index: string]: string;\r\n\t};\r\n\tdefaultPage: boolean;\r\n\trestrictions: CMSRestriction[];\r\n\tidentifier?: string;\r\n\thomepage: boolean;\r\n}\r\n\r\nexport enum CMSPageTypes {\r\n\tContentPage = 'ContentPage',\r\n\tCategoryPage = 'CategoryPage',\r\n\tProductPage = 'ProductPage',\r\n\tEmailPage = 'EmailPage'\r\n}\r\n\r\nexport enum CMSPageStatus {\r\n\tACTIVE = 'ACTIVE',\r\n\tDELETED = 'DELETED'\r\n}\r\n\r\nexport enum CmsApprovalStatus {\r\n\tAPPROVED = 'APPROVED',\r\n\tCHECK = \"CHECK\",\r\n\tUNAPPROVED = \"UNAPPROVED\"\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * @description\r\n * This enum contains the possible types (called status) of a Cms Content Slot. \r\n */\r\nexport enum SlotStatus {\r\n\tTEMPLATE = 'TEMPLATE',\r\n\tPAGE = 'PAGE',\r\n\tOVERRIDE = 'OVERRIDE'\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport {CMSRestriction} from './CMSRestriction';\r\n\r\nexport {CMSItemStructure, CMSItemStructureField} from './CMSItemStructure';\r\nexport {ICMSComponent} from './ICMSComponent';\r\nexport * from './CMSItem';\r\nexport * from './ICMSPage';\r\nexport * from './SlotStatus';","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport {ISyncStatus} from './dtos/ISyncStatus';\r\nexport {AssetsService} from './services/AssetsService';\r\nexport {CMSModesService} from './services/modes/CMSModesService';\r\n\r\nexport {TypePermissionNames, TypePermissionsRestService} from 'cmscommons/services/TypePermissionsRestService';\r\nexport {AttributePermissionsRestService} from 'cmscommons/services/AttributePermissionsRestService';\r\nexport {CMSTimeService} from 'cmscommons/services/CMSTimeService';\r\nexport {VersionExperienceInterceptorModule} from './services/interceptors/versionExperienceInterceptor/VersionExperienceInterceptorModule';\r\nexport {IPageContentSlotsComponentsRestService} from './dao/cmswebservices/IPageContentSlotsComponentsRestService';\r\nexport {IComponentSharedService} from './services/components/IComponentSharedService';\r\n\r\nexport * from './services';\r\nexport * from './dtos';\r\nexport * from './dao';\r\nexport * from './cmsConstantsModule';\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as angular from 'angular';\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:AssetsService\r\n *\r\n * @description\r\n * Determines the root of the production and test assets\r\n */\r\nexport class AssetsService {\r\n\r\n\tstatic $inject: any = ['$injector'];\r\n\r\n\t// Constants\r\n\tprivate readonly TEST_ASSETS_KEY: string = 'testAssets';\r\n\tprivate readonly TEST_ASSETS_SRC: string = '/web/webroot';\r\n\tprivate readonly PROD_ASSETS_SRC: string = '/cmssmartedit';\r\n\r\n\t// Variables\r\n\tprivate $injector: angular.auto.IInjectorService;\r\n\r\n\tconstructor(injector: angular.auto.IInjectorService) {\r\n\t\tthis.$injector = injector;\r\n\t}\r\n\r\n    /** \r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:AssetsService#getAssetsRoot\r\n     * @methodOf cmsSmarteditServicesModule.service:AssetsService\r\n     *\r\n     * @description\r\n     * Set data for the given key.\r\n     * \r\n     * @returns {String} the assets root folder\r\n     */\r\n\tgetAssetsRoot(): string {\r\n\t\tlet useTestAssets = false;\r\n\r\n\t\tif (this.getInjector().has(this.TEST_ASSETS_KEY)) {\r\n\t\t\tconst result = this.getInjector().get(this.TEST_ASSETS_KEY);\r\n\t\t\tuseTestAssets = (typeof result === 'boolean') ? result as boolean : false;\r\n\t\t}\r\n\r\n\t\treturn useTestAssets ? this.TEST_ASSETS_SRC : this.PROD_ASSETS_SRC;\r\n\t}\r\n\r\n    /** \r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:AssetsService#getInjector\r\n     * @methodOf cmsSmarteditServicesModule.service:AssetsService\r\n     *\r\n     * @description\r\n     * Returns an injector\r\n     * \r\n     * @returns {Object} an injector \r\n     */\r\n\tgetInjector(): angular.auto.IInjectorService {\r\n\t\treturn this.$injector;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as lo from 'lodash';\r\nimport {authorizationEvictionTag, rarelyChangingContent, Cached, IPermissionsRestServicePair, IPermissionsRestServiceResult, IRestService, IRestServiceFactory, ISessionService, SeInjectable, TypedMap} from 'smarteditcommons';\r\n\r\n/**\r\n * @ngdoc object\r\n * @name cmsSmarteditServicesModule.object:AttributePermissionNames\r\n * @description\r\n * An enum type representing available attribute permission names for a given item\r\n */\r\nexport enum AttributePermissionNames {\r\n\tREAD = 'read',\r\n\tCHANGE = 'change'\r\n}\r\n\r\n/**\r\n * @description\r\n * Pair to keep track of an attribute and its enclosing type. \r\n */\r\ninterface TypeAttributePair {\r\n\ttype: string;\r\n\tattribute: string;\r\n}\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:AttributePermissionsRestService\r\n * \r\n * @description\r\n * Rest Service to retrieve attribute permissions.\r\n */\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ AttributePermissionsRestService {\r\n\r\n\tprivate readonly ATTRIBUTE_PERMISSIONS_URI = \"/permissionswebservices/v1/permissions/principals/:user/attributes\";\r\n\tprivate attributePermissionsRestService: IRestService<IPermissionsRestServiceResult>;\r\n\r\n\tconstructor(\r\n\t\trestServiceFactory: IRestServiceFactory,\r\n\t\tprivate sessionService: ISessionService,\r\n\t\tprivate $q: angular.IQService,\r\n\t\tprivate $log: angular.ILogService,\r\n\t\tprivate lodash: lo.LoDashStatic\r\n\t) {\r\n\t\tthis.attributePermissionsRestService = restServiceFactory.get<IPermissionsRestServiceResult>(this.ATTRIBUTE_PERMISSIONS_URI);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:AttributePermissionsRestService#hasReadPermissionOnAttributesInType\r\n     * @methodOf cmsSmarteditServicesModule.service:AttributePermissionsRestService\r\n     * \r\n     * @description\r\n     * Determines if the current user has READ access to the given attributes in the given type.  \r\n     * \r\n     * @param {String} type The type enclosing the attributes for which to evaluate their read permissions. \r\n     * @param {String[]} attributeNames The names of the attributes for which to evaluate their read permissions. \r\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the attribute name) and \r\n     * value (true if the user has READ access to the type or false otherwise). \r\n     */\r\n\thasReadPermissionOnAttributesInType(type: string, attributeNames: string[]): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this.getPermissionsForAttributesAndNameByType(type, attributeNames, AttributePermissionNames.READ);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:AttributePermissionsRestService#hasChangePermissionOnAttributesInType\r\n     * @methodOf cmsSmarteditServicesModule.service:AttributePermissionsRestService\r\n     * \r\n     * @description\r\n     * Determines if the current user has CHANGE access to the given attributes in the given type.  \r\n     * \r\n     * @param {String} type The type enclosing the attributes for which to evaluate their change permissions. \r\n     * @param {String[]} attributeNames The names of the attributes for which to evaluate their change permissions. \r\n     * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the attribute name) and \r\n     * value (true if the user has READ access to the type or false otherwise). \r\n     */\r\n\thasChangePermissionOnAttributesInType(type: string, attributeNames: string[]): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this.getPermissionsForAttributesAndNameByType(type, attributeNames, AttributePermissionNames.CHANGE);\r\n\t}\r\n\r\n\tprivate getPermissionsForAttributesAndNameByType(type: string, attributes: string[], permissionName: string): angular.IPromise<TypedMap<boolean>> {\r\n\t\tconst convertedAttributeNames = attributes.map((attr: string) => type + \".\" + attr);\r\n\t\treturn this.getPermissionsForAttributesAndName(convertedAttributeNames, permissionName).then((attributePermissionsByTypeMap: TypedMap<TypedMap<boolean>>) => {\r\n\t\t\treturn attributePermissionsByTypeMap[type];\r\n\t\t});\r\n\t}\r\n\r\n\tprivate getPermissionsForAttributesAndName(attributes: string[], permissionName: string): angular.IPromise<TypedMap<TypedMap<boolean>>> {\r\n\t\treturn this.getAllPermissionsForAttributes(attributes).then((response: IPermissionsRestServiceResult[]) => {\r\n\t\t\tconst allPermissions = this.concatPermissionsNotFound(attributes, response);\r\n\t\t\treturn allPermissions.reduce((attributePermissionsByTypeMap: TypedMap<TypedMap<boolean>>, permissionsResult: IPermissionsRestServiceResult) => {\r\n\t\t\t\tif (permissionsResult.permissions) {\r\n\t\t\t\t\tconst typeAttributePair = this.parsePermissionsResultId(permissionsResult.id);\r\n\t\t\t\t\tif (!attributePermissionsByTypeMap[typeAttributePair.type]) {\r\n\t\t\t\t\t\tattributePermissionsByTypeMap[typeAttributePair.type] = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tattributePermissionsByTypeMap[typeAttributePair.type][typeAttributePair.attribute] = this.getPermissionByNameFromResult(permissionsResult, permissionName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attributePermissionsByTypeMap;\r\n\t\t\t}, {});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate parsePermissionsResultId(id: string): TypeAttributePair {\r\n\t\tconst tokens = id.split('.');\r\n\t\tif (tokens.length !== 2) {\r\n\t\t\tthrow new Error(\"AttributePermissionsRestService - Received invalid attribute permissions\");\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttype: tokens[0],\r\n\t\t\tattribute: tokens[1]\r\n\t\t};\r\n\t}\r\n\r\n\tprivate getPermissionByNameFromResult(permissionsResult: IPermissionsRestServiceResult, permissionName: string): boolean {\r\n\t\treturn JSON.parse(\r\n\t\t\tpermissionsResult.permissions.find((permission: IPermissionsRestServicePair) => permission.key === permissionName).value\r\n\t\t);\r\n\t}\r\n\r\n\tprivate concatPermissionsNotFound(attributes: string[], permissionsFound: IPermissionsRestServiceResult[]): IPermissionsRestServiceResult[] {\r\n\t\tconst permissionKeysFound = permissionsFound.map((permission: IPermissionsRestServiceResult) => permission.id);\r\n\t\tconst permissionKeysNotFound = this.lodash.difference(attributes, permissionKeysFound);\r\n\r\n\t\treturn permissionsFound.concat(permissionKeysNotFound.map((key: string) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: key,\r\n\t\t\t\tpermissions: [{\r\n\t\t\t\t\tkey: AttributePermissionNames.READ,\r\n\t\t\t\t\tvalue: 'false'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tkey: AttributePermissionNames.CHANGE,\r\n\t\t\t\t\tvalue: 'false'\r\n\t\t\t\t}]\r\n\t\t\t};\r\n\t\t}));\r\n\t}\r\n\r\n    /**\r\n     * @internal \r\n     * \r\n     * This method retrieves ALL the permissions the current user has on the given attributes. Attributes are expected with the following format: \r\n     * - type.attribute name \r\n     * For example, for an attribute called approvalStatus within the type ContentPage, the given attribute must be: \r\n     * - ContentPage.approvalStatus\r\n     * \r\n     * Note: This method is cached. \r\n     * \r\n     * @param attributes The list of attributes for which to retrieve permissions\r\n     * @returns {angular.IPromise<IPermissionsRestServiceResult[]>} A promise that resolves to a list of IPermissionsRestServiceResult, each of which \r\n     * represents the permissions of one of the given attributes. \r\n     */\r\n\t@Cached({actions: [rarelyChangingContent], tags: [authorizationEvictionTag]})\r\n\tprivate getAllPermissionsForAttributes(attributes: string[]): angular.IPromise<IPermissionsRestServiceResult[]> {\r\n\t\tif (attributes.length <= 0) {\r\n\t\t\treturn this.$q.when([]);\r\n\t\t}\r\n\r\n\t\treturn this.sessionService.getCurrentUsername().then((user: string) => {\r\n\t\t\tif (!user) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\treturn this.attributePermissionsRestService.get({\r\n\t\t\t\tuser,\r\n\t\t\t\tattributes: attributes.join(','),\r\n\t\t\t\tpermissionNames: AttributePermissionNames.CHANGE + ',' + AttributePermissionNames.READ\r\n\t\t\t}).then((response: any) => {\r\n\t\t\t\treturn response.permissionsList || [];\r\n\t\t\t}, (error: any) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tthis.$log.error(`AttributePermissionsRestService - couldn't retrieve attribute permissions ${attributes}`);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.$q.reject(error);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as moment from \"moment\";\r\nimport {SeInjectable} from \"smarteditcommons\";\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:CMSTimeService\r\n *\r\n * @description\r\n * Service for time management functionality.\r\n */\r\n\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ CMSTimeService {\r\n\r\n\tconstructor(private $translate: angular.translate.ITranslateService) {}\r\n\r\n    /** \r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:CMSTimeService#getTimeAgo\r\n     * @methodOf cmsSmarteditServicesModule.service:CMSTimeService\r\n     *\r\n     * @description\r\n     * Give a time difference in milliseconds, this method returns a string that determites time in ago.\r\n     * \r\n     * Examples:\r\n     * If the diff is less then 24 hours, the result is in hours eg: 17 hour(s) ago.\r\n     * If the diff is more than a day, the result is in days, eg: 2 day(s) ago.\r\n     * \r\n     * @param {number} timeDiff The time difference in milli seconds.\r\n     * @returns {String} the assets root folder\r\n     */\r\n\tgetTimeAgo(timeDiff: number): string {\r\n\t\tconst timeAgoInDays: number = Math.floor(moment.duration(timeDiff).asDays());\r\n\t\tconst timeAgoInHours: number = Math.floor(moment.duration(timeDiff).asHours());\r\n\r\n\t\tif (timeAgoInDays >= 1) {\r\n\t\t\treturn timeAgoInDays + \" \" + this.$translate.instant('se.cms.actionitem.page.workflow.action.started.days.ago');\r\n\t\t} else if (timeAgoInHours >= 1) {\r\n\t\t\treturn timeAgoInHours + \" \" + this.$translate.instant('se.cms.actionitem.page.workflow.action.started.hours.ago');\r\n\t\t}\r\n\t\treturn \"<1 \" + this.$translate.instant('se.cms.actionitem.page.workflow.action.started.hours.ago');\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:contextAwareEditableItemService\r\n *\r\n * @description\r\n * Service to verify whether the item is editable in a particular context.\r\n */\r\nexport abstract class IContextAwareEditableItemService {\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:contextAwareEditableItemService#isItemEditable\r\n     * @methodOf cmsSmarteditServicesModule.service:contextAwareEditableItemService\r\n     *\r\n     * @description\r\n     * Verifies whether the item is editable in current context or not.\r\n     *\r\n     * @param {string} itemUid The item uid.\r\n     *\r\n     * @returns {Promise} A promise that resolves to a boolean. It will be true, if the item is editable, false otherwise.\r\n     */\r\n\tpublic isItemEditable(itemUid: string): angular.IPromise<boolean> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {Payload} from \"smarteditcommons\";\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:editorModalService\r\n *\r\n * @description\r\n * Convenience service to open an editor modal window for a given component type and component ID.\r\n *\r\n * Example: \r\n * We pass information about component to open method, and the component editor in form of modal appears.\r\n */\r\nexport abstract class IEditorModalService {\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:editorModalService#open\r\n\t * @methodOf cmsSmarteditServicesModule.service:editorModalService\r\n\t *\r\n\t * @description\r\n\t * Proxy function which delegates opening an editor modal for a given component type and component ID to the\r\n\t * SmartEdit container.\r\n\t *\r\n\t * @param {IComponent} componentAttributes The details of the component to be created/edited\r\n\t * @param {string?} componentAttributes.smarteditComponentUuid An optional universally unique UUID of the component if the component is being edited.\r\n\t * @param {string?} componentAttributes.smarteditComponentId An optional universally unique ID of the component if the component is being edited.\r\n\t * @param {string} componentAttributes.smarteditComponentType The component type\r\n\t * @param {string?} componentAttributes.smarteditCatalogVersionUuid The smartedit catalog version UUID to add the component to.\r\n\t * @param {string?} componentAttributes.catalogVersionUuid The catalog version UUID to add the component to.\r\n\t * @param {boolean} componentAttributes.initialDirty Is the component dirty.\r\n\t * @param {Payload?} componentAttributes.content An optional content for create operation. It's ignored if componentAttributes.smarteditComponentUuid is defined.\r\n\t * @param {string?} targetSlotId The ID of the slot in which the component is placed.\r\n\t * @param {string?} position The position in a given slot where the component should be placed.\r\n\t * @param {string?} targetedQualifier Causes the genericEditor to switch to the tab containing a qualifier of the given name.\r\n\t * @param {Function} saveCallback The optional function that is executed if the user clicks the Save button and the modal closes successfully. The function provides one parameter: item that has been saved.\r\n\t * @param {string} editorStackId The string that identifies the stack of editors being edited together.\r\n\t *\r\n\t * @returns {Promise} A promise that resolves to the data returned by the modal when it is closed.\r\n\t */\r\n\topen(componentAttributes: IComponent, targetSlotId?: string, position?: number, targetedQualifier?: string, saveCallback?: (item: any) => void, editorStackId?: string): angular.IPromise<void> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:editorModalService#open\r\n\t * @methodOf cmsSmarteditServicesModule.service:editorModalService\r\n\t *\r\n\t * @description\r\n\t * Proxy function which delegates opening an editor modal for a given component type and component ID to the\r\n\t * SmartEdit container.\r\n\t *\r\n\t * @param {string} componentType The type of component as defined in the platform.\r\n\t * @param {string} componentUuid The UUID of the component as defined in the database.\r\n\t * @param {string?} targetedQualifier Causes the genericEditor to switch to the tab containing a qualifier of the given name.\r\n\t * @param {Function} saveCallback The optional function that is executed if the user clicks the Save button and the modal closes successfully. The function provides one parameter: item that has been saved.\r\n\t * @param {string} editorStackId The string that identifies the stack of editors being edited together. \r\n\t *\r\n\t * @returns {Promise} A promise that resolves to the data returned by the modal when it is closed.\r\n\t */\r\n\topenAndRerenderSlot(componentType: string, componentUuid: string, targetedQualifier?: string, saveCallback?: (item: any) => void, editorStackId?: string): angular.IPromise<void> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport interface IComponent {\r\n\tsmarteditComponentUuid?: string;\r\n\tsmarteditComponentType: string;\r\n\tcatalogVersionUuid?: string;\r\n\tsmarteditCatalogVersionUuid?: string;\r\n\tsmarteditComponentId?: string;\r\n\tsmarteditElementUuid?: string;\r\n\tcontent?: Payload;\r\n\tinitialDirty?: boolean;\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {authorizationEvictionTag, rarelyChangingContent, Cached, IPermissionsRestServicePair, IPermissionsRestServiceResult, IRestService, IRestServiceFactory, ISessionService, SeInjectable, TypedMap} from \"smarteditcommons\";\r\n\r\n/**\r\n * @ngdoc object\r\n * @name cmsSmarteditServicesModule.object:TypePermissionNames\r\n * @description\r\n * An enum type representing available type permission names for a given item\r\n */\r\nexport enum TypePermissionNames {\r\n\tCREATE = 'create',\r\n\tREAD = 'read',\r\n\tCHANGE = 'change',\r\n\tREMOVE = 'remove'\r\n}\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:TypePermissionsRestService\r\n * \r\n * @description\r\n * Rest Service to retrieve the type permissions.\r\n */\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ TypePermissionsRestService {\r\n\r\n\tprivate readonly URI = \"/permissionswebservices/v1/permissions/principals/:user/types\";\r\n\r\n\tprivate resource: IRestService<IPermissionsRestServiceResult>;\r\n\r\n\tconstructor(\r\n\t\tprivate $log: angular.ILogService,\r\n\t\tprivate $q: angular.IQService,\r\n\t\tprivate sessionService: ISessionService,\r\n\t\trestServiceFactory: IRestServiceFactory) {\r\n\t\tthis.resource = restServiceFactory.get<IPermissionsRestServiceResult>(this.URI);\r\n\t}\r\n\r\n\t/** \r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasCreatePermissionForTypes\r\n\t * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\r\n\t *\r\n\t * @description\r\n\t * Determines if the current user has CREATE access to the given types.\r\n\t * \r\n\t * @param {String[]} types The codes of all types.\r\n\t * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and \r\n\t * value (true if the user has CREATE access to the type or false otherwise).\r\n\t */\r\n\thasCreatePermissionForTypes(types: string[]): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this._getPermissionsForTypesAndName(types, TypePermissionNames.CREATE);\r\n\t}\r\n\r\n\t/** \r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasReadPermissionForTypes\r\n\t * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\r\n\t *\r\n\t * @description\r\n\t * Determines if the current user has READ access to the given types.\r\n\t * \r\n\t * @param {String[]} types The codes of all types.\r\n\t * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and \r\n\t * value (true if the user has READ access to the type or false otherwise).\r\n\t */\r\n\thasReadPermissionForTypes(types: string[]): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this._getPermissionsForTypesAndName(types, TypePermissionNames.READ);\r\n\t}\r\n\r\n\t/** \r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasUpdatePermissionForTypes\r\n\t * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\r\n\t *\r\n\t * @description\r\n\t * Determines if the current user has CHANGE access to the given types.\r\n\t * \r\n\t * @param {String[]} types The codes of all types.\r\n\t * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and \r\n\t * value (true if the user has CHANGE access to the type or false otherwise).\r\n\t */\r\n\thasUpdatePermissionForTypes(types: string[]): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this._getPermissionsForTypesAndName(types, TypePermissionNames.CHANGE);\r\n\t}\r\n\r\n\t/** \r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasDeletePermissionForTypes\r\n\t * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\r\n\t *\r\n\t * @description\r\n\t * Determines if the current user has REMOVE access to the given types.\r\n\t * \r\n\t * @param {String[]} types The codes of all types.\r\n\t * @returns {angular.IPromise<TypedMap<boolean>>} A promise that resolves to a TypedMap object with key (the code) and \r\n\t * value (true if the user has REMOVE access to the type or false otherwise).\r\n\t */\r\n\thasDeletePermissionForTypes(types: string[]): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this._getPermissionsForTypesAndName(types, TypePermissionNames.REMOVE);\r\n\t}\r\n\r\n\t/** \r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:TypePermissionsRestService#hasAllPermissionsForTypes\r\n\t * @methodOf cmsSmarteditServicesModule.service:TypePermissionsRestService\r\n\t *\r\n\t * @description\r\n\t * Determines if the current user has READ, CREATE, CHANGE, REMOVE access to the given types.\r\n\t * \r\n\t * @param {String[]} types The codes of all types.\r\n\t * @returns {angular.IPromise<TypedMap<TypedMap<boolean>>>} A promise that resolves to a TypedMap of TypedMap object with key (the code) and \r\n\t * value (true if the user has corresponding access to the type or false otherwise).\r\n\t * {\r\n\t *  \"typeA\": {\"read\": true, \"change\": false, \"create\": true, \"remove\": true},\r\n\t *  \"typeB\": {\"read\": true, \"change\": false, \"create\": true, \"remove\": false}\r\n\t * }\r\n\t */\r\n\thasAllPermissionsForTypes(types: string[]): angular.IPromise<TypedMap<TypedMap<boolean>>> {\r\n\t\tconst initialMap: TypedMap<TypedMap<boolean>> = {};\r\n\r\n\t\treturn this._getAllPermissionsForTypes(types).then((response: IPermissionsRestServiceResult[]) => {\r\n\t\t\treturn response.reduce((map: TypedMap<TypedMap<boolean>>, permissionsResult: IPermissionsRestServiceResult) => {\r\n\t\t\t\tif (permissionsResult.permissions) {\r\n\t\t\t\t\tmap[permissionsResult.id] = {};\r\n\t\t\t\t\tmap[permissionsResult.id][TypePermissionNames.READ] = this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.READ);\r\n\t\t\t\t\tmap[permissionsResult.id][TypePermissionNames.CHANGE] = this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.CHANGE);\r\n\t\t\t\t\tmap[permissionsResult.id][TypePermissionNames.CREATE] = this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.CREATE);\r\n\t\t\t\t\tmap[permissionsResult.id][TypePermissionNames.REMOVE] = this._getPermissionByNameAndResult(permissionsResult, TypePermissionNames.REMOVE);\r\n\t\t\t\t}\r\n\t\t\t\treturn map;\r\n\t\t\t}, initialMap);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getPermissionByNameAndResult(permissionsResult: IPermissionsRestServiceResult, permissionName: string): boolean {\r\n\t\treturn JSON.parse(permissionsResult.permissions.find((permission: IPermissionsRestServicePair) => permission.key === permissionName).value);\r\n\t}\r\n\r\n\tprivate _getPermissionsForTypesAndName(types: string[], permissionName: string): angular.IPromise<TypedMap<boolean>> {\r\n\t\treturn this._getAllPermissionsForTypes(types).then((response: IPermissionsRestServiceResult[]) => {\r\n\t\t\treturn response.reduce((map: TypedMap<boolean>, permissionsResult: IPermissionsRestServiceResult) => {\r\n\t\t\t\tif (permissionsResult.permissions) {\r\n\t\t\t\t\tmap[permissionsResult.id] = this._getPermissionByNameAndResult(permissionsResult, permissionName);\r\n\t\t\t\t}\r\n\t\t\t\treturn map;\r\n\t\t\t}, {} as TypedMap<boolean>);\r\n\t\t});\r\n\t}\r\n\r\n\t@Cached({actions: [rarelyChangingContent], tags: [authorizationEvictionTag]})\r\n\tprivate _getAllPermissionsForTypes(types: string[]): angular.IPromise<IPermissionsRestServiceResult[]> {\r\n\t\tif (types.length <= 0) {\r\n\t\t\treturn this.$q.when([]);\r\n\t\t}\r\n\t\treturn this.sessionService.getCurrentUsername().then((user: string) => {\r\n\t\t\tif (!user) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\treturn this.resource.get({\r\n\t\t\t\tuser,\r\n\t\t\t\ttypes: types.join(','),\r\n\t\t\t\tpermissionNames: TypePermissionNames.CREATE + ',' + TypePermissionNames.CHANGE + ',' + TypePermissionNames.READ + ',' + TypePermissionNames.REMOVE\r\n\t\t\t}).then((response: any) => {\r\n\t\t\t\treturn response.permissionsList || [];\r\n\t\t\t}, (error: any) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tthis.$log.error(`TypePermissionsRestService - no composed types ${types} exist`);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.$q.reject(error);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport * from './workflowEvictionTags';\r\nexport * from './slotEvictionTags';","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {EvictionTag} from 'smarteditcommons';\r\n\r\nexport const slotEvictionTag = new EvictionTag({event: \"SLOT_UPDATE_EVENT\"});","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {EvictionTag} from 'smarteditcommons';\r\n\r\nexport const workflowCompletedEvictionTag = new EvictionTag({event: \"WORKFLOW_FINISHED_EVENT\"});\r\n\r\nexport const workflowTasksMenuOpenedEvictionTag = new EvictionTag({event: \"WORKFLOW_TASKS_MENU_OPENED_EVENT\"});","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('componentServiceModule', [\n        'smarteditServicesModule',\n        'cmsSmarteditServicesModule',\n        'resourceLocationsModule',\n        'slotRestrictionsServiceModule'\n    ])\n\n    /**\n     * @ngdoc service\n     * @name componentMenuModule.ComponentService\n     *\n     * @description\n     * Service which manages component types and items\n     */\n    .service('ComponentService', function(\n        $q,\n        restServiceFactory,\n        TYPES_RESOURCE_URI,\n        PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI,\n        CONTEXT_CATALOG,\n        CONTEXT_CATALOG_VERSION,\n        cmsitemsRestService,\n        catalogService,\n        slotRestrictionsService,\n        pageInfoService,\n        pageContentSlotsComponentsRestService,\n        typePermissionsRestService) {\n\n        var restServiceForTypes = restServiceFactory.get(TYPES_RESOURCE_URI);\n        var restServiceForItems = cmsitemsRestService;\n        var restServiceForAddExistingComponent = restServiceFactory.get(PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI);\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#createNewComponent\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description given a component info and the component payload, a new componentItem is created and added to a slot\n         *\n         * @param {Object} componentInfo The basic information of the ComponentType to be created and added to the slot.\n         * @param {String} componentInfo.componenCode componenCode of the ComponentType to be created and added to the slot.\n         * @param {String} componentInfo.name name of the new component to be created.\n         * @param {String} componentInfo.pageId pageId used to identify the current page template.\n         * @param {String} componentInfo.slotId slotId used to identify the slot in the current template.\n         * @param {String} componentInfo.position position used to identify the position in the slot in the current template.\n         * @param {String} componentInfo.type type of the component being created.\n         * @param {Object} componentPayload payload of the new component to be created.\n         */\n        this.createNewComponent = function(componentInfo, componentPayload) {\n\n            //FIXME fix naming of slotId\n            var _payload = {};\n            _payload.name = componentInfo.name;\n            _payload.slotId = componentInfo.targetSlotId;\n            _payload.pageId = componentInfo.pageId;\n            _payload.position = componentInfo.position;\n            _payload.typeCode = componentInfo.componentType;\n            _payload.itemtype = componentInfo.componentType;\n            _payload.catalogVersion = componentInfo.catalogVersionUuid;\n\n            if (typeof componentPayload === \"object\") {\n                for (var property in componentPayload) {\n                    if (componentPayload.hasOwnProperty(property)) {\n                        _payload[property] = componentPayload[property];\n                    }\n                }\n            } else if (componentPayload) {\n                throw \"ComponentService.createNewComponent() - Illegal componentPayload - [\" + componentPayload + \"]\";\n            }\n\n            return restServiceForItems.create(_payload);\n\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#updateComponent\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description Given a component info and the payload related to an existing component, the latter will be updated with the new supplied values.\n         *\n         * @param {Object} componentPayload of the new component to be created, including the info.\n         * @param {String} componentPayload.componenCode of the ComponentType to be created and added to the slot.\n         * @param {String} componentPayload.name of the new component to be created.\n         * @param {String} componentPayload.pageId used to identify the current page template.\n         * @param {String} componentPayload.slotId used to identify the slot in the current template.\n         * @param {String} componentPayload.position used to identify the position in the slot in the current template.\n         * @param {String} componentPayload.type of the component being created.\n         */\n        this.updateComponent = function(componentPayload) {\n            return restServiceForItems.update(componentPayload);\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#addExistingComponent\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description add an existing component item to a slot\n         *\n         * @param {String} pageId used to identify the page containing the slot in the current template.\n         * @param {String} componentId used to identify the existing component which will be added to the slot.\n         * @param {String} slotId used to identify the slot in the current template.\n         * @param {String} position used to identify the position in the slot in the current template.\n         */\n        this.addExistingComponent = function(pageId, componentId, slotId, position) {\n\n            var _payload = {};\n            _payload.pageId = pageId;\n            _payload.slotId = slotId;\n            _payload.componentId = componentId;\n            _payload.position = position;\n\n            return restServiceForAddExistingComponent.save(_payload);\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadComponentTypes\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description all component types are retrieved\n         */\n        this.loadComponentTypes = function() {\n            return restServiceForTypes.get({\n                category: 'COMPONENT'\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#getSupportedComponentTypesForCurrentPage\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description Fetches all component types supported by the system, then filters this list\n         * using the restricted component types for all the slots on the current page.\n         *\n         * @returns {Array} A promise resolving to the component types that can be added to the current page\n         */\n        this.getSupportedComponentTypesForCurrentPage = function() {\n\n            return $q.all([\n                this.loadComponentTypes(),\n                slotRestrictionsService.getAllComponentTypesSupportedOnPage()\n            ]).then(function(values) {\n                var supportedComponentTypes = values[1];\n                var componentTypes = values[0].componentTypes.filter(function(componentType) {\n                    return supportedComponentTypes.indexOf(componentType.code) > -1;\n                });\n\n                var componentTypeCodes = componentTypes.map(function(componentType) {\n                    return componentType.code;\n                });\n\n                return typePermissionsRestService.hasCreatePermissionForTypes(componentTypeCodes).then(function(permissionResult) {\n                    return componentTypes.filter(function(componentType) {\n                        return permissionResult[componentType.code];\n                    });\n                });\n            }.bind(this));\n        }.bind(this);\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadComponentItem\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description load a component identified by its id\n         */\n        this.loadComponentItem = function(id) {\n            return restServiceForItems.getById(id);\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadPagedComponentItems\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description all existing component items for the current catalog are retrieved in the form of pages\n         * used for pagination especially when the result set is very large.\n         * \n         * @param {String} mask the search string to filter the results.\n         * @param {String} pageSize the number of elements that a page can contain.\n         * @param {String} page the current page number.\n         */\n        this.loadPagedComponentItems = function(mask, pageSize, page) {\n\n            return catalogService.retrieveUriContext().then(function(uriContext) {\n                var requestParams = {\n                    pageSize: pageSize,\n                    currentPage: page,\n                    mask: mask,\n                    sort: 'name',\n                    typeCode: 'AbstractCMSComponent',\n                    catalogId: uriContext[CONTEXT_CATALOG],\n                    catalogVersion: uriContext[CONTEXT_CATALOG_VERSION]\n                };\n\n                return restServiceForItems.get(requestParams);\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentMenuModule.ComponentService#loadPagedComponentItemsByCatalogVersion\n         * @methodOf componentMenuModule.ComponentService\n         *\n         * @description all existing component items for the provided content catalog are retrieved in the form of pages\n         * used for pagination especially when the result set is very large.\n         * \n         * @param {Object} payload The payload that contains the information of the page of components to load\n         * @param {String} payload.catalogId the id of the catalog for which to retrieve the component items. \n         * @param {String} payload.catalogVersion the id of the catalog version for which to retrieve the component items. \n         * @param {String} payload.mask the search string to filter the results.\n         * @param {String} payload.pageSize the number of elements that a page can contain.\n         * @param {String} payload.page the current page number.\n         * \n         * @returns {Promise} A promise resolving to a page of component items retrieved from the provided catalog version. \n         */\n        this.loadPagedComponentItemsByCatalogVersion = function(payload) {\n            var requestParams = {\n                pageSize: payload.pageSize,\n                currentPage: payload.page,\n                mask: payload.mask,\n                sort: 'name',\n                typeCode: 'AbstractCMSComponent',\n                catalogId: payload.catalogId,\n                catalogVersion: payload.catalogVersion\n            };\n\n            return restServiceForItems.get(requestParams);\n        };\n\n        this.getSlotsForComponent = function(componentUuid) {\n            var slotIds = [];\n            return this._getContentSlotsForComponents().then(function(allSlotsToComponents) {\n                Object.keys(allSlotsToComponents).forEach(function(slotId) {\n                    if (allSlotsToComponents[slotId].find(function(component) {\n                            return component.uuid === componentUuid;\n                        })) {\n                        slotIds.push(slotId);\n                    }\n                });\n                return slotIds;\n            }.bind(this));\n        };\n\n        this._getContentSlotsForComponents = function() {\n            return pageInfoService.getPageUID().then(function(pageId) {\n                return pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageId);\n            });\n        };\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n\r\nimport {\r\n\tpageChangeEvictionTag,\r\n\trarelyChangingContent,\r\n\tCached,\r\n\tICatalogService,\r\n\tIPageInfoService,\r\n\tIRestService,\r\n\tIRestServiceFactory,\r\n\tSeInjectable\r\n} from 'smarteditcommons';\r\nimport {\r\n\tCmsitemsRestService,\r\n\tPage\r\n} from '../dao/cmswebservices/sites/CmsitemsRestService';\r\nimport {IPageContentSlotsComponentsRestService} from '../dao/cmswebservices/IPageContentSlotsComponentsRestService';\r\nimport {CMSItem, CMSItemStructure, ICMSComponent} from '../dtos';\r\n\r\nexport interface LoadPagedComponentsRequestPayload {\r\n\tpage: number;\r\n\tpageSize: number;\r\n\tmask: string;\r\n\ttypeCode: string;\r\n\tcatalogId: string;\r\n\tcatalogVersion: string;\r\n}\r\n\r\nexport interface LoadPagedComponentTypesRequestPayload {\r\n\tcatalogId: string;\r\n\tcatalogVersion: string;\r\n\tpageId: string;\r\n\tpageSize: number;\r\n\tcurrentPage: number;\r\n\tmask: string;\r\n}\r\n\r\nexport interface ComponentInfo {\r\n\tname: string;\r\n\tslotId: string;\r\n\tpageId: string;\r\n\tposition: number;\r\n\ttypeCode: string;\r\n\titemtype: string;\r\n\tcatalogVersion: string;\r\n\ttargetSlotId?: string;\r\n\tcomponentType?: string;\r\n\tcatalogVersionUuid?: string;\r\n}\r\n\r\n/**\r\n * @ngdoc service\r\n * @name componentMenuModule.ComponentService\r\n *\r\n * @description\r\n * Service which manages component types and items\r\n */\r\n\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ ComponentService {\r\n\tprivate pageComponentTypesRestService: IRestService<Page<CMSItemStructure>>;\r\n\tprivate restServiceForAddExistingComponent: IRestService<void>;\r\n\r\n\tconstructor(\r\n\t\tprivate restServiceFactory: IRestServiceFactory,\r\n\t\tprivate cmsitemsRestService: CmsitemsRestService,\r\n\t\tprivate catalogService: ICatalogService,\r\n\t\tprivate pageInfoService: IPageInfoService,\r\n\t\tprivate pageContentSlotsComponentsRestService: IPageContentSlotsComponentsRestService,\r\n\t\tprivate CONTEXT_CATALOG: string,\r\n\t\tprivate CONTEXT_CATALOG_VERSION: string,\r\n\t\tprivate PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI: string\r\n\r\n\t) {\r\n\t\tconst pageComponentTypesRestServiceURI =\r\n\t\t\t'/cmssmarteditwebservices/v1/catalogs/:catalogId/versions/:catalogVersion/pages/:pageId/types';\r\n\t\tthis.pageComponentTypesRestService = this.restServiceFactory.get(\r\n\t\t\tpageComponentTypesRestServiceURI\r\n\t\t);\r\n\r\n\t\tthis.restServiceForAddExistingComponent = this.restServiceFactory.get(\r\n\t\t\tthis.PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI\r\n\t\t);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#createNewComponent\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description given a component info and the component payload, a new componentItem is created and added to a slot\r\n     *\r\n     * @param {Object} componentInfo The basic information of the ComponentType to be created and added to the slot.\r\n     * @param {String} componentInfo.componenCode componenCode of the ComponentType to be created and added to the slot.\r\n     * @param {String} componentInfo.name name of the new component to be created.\r\n     * @param {String} componentInfo.pageId pageId used to identify the current page template.\r\n     * @param {String} componentInfo.slotId slotId used to identify the slot in the current template.\r\n     * @param {String} componentInfo.position position used to identify the position in the slot in the current template.\r\n     * @param {String} componentInfo.type type of the component being created.\r\n     * @param {Object} componentPayload payload of the new component to be created.\r\n     */\r\n\tcreateNewComponent(componentInfo: ComponentInfo, componentPayload: CMSItem): angular.IPromise<CMSItem> {\r\n\t\tconst _payload: CMSItem = {\r\n\t\t\tname: componentInfo.name,\r\n\t\t\tslotId: componentInfo.targetSlotId,\r\n\t\t\tpageId: componentInfo.pageId,\r\n\t\t\tposition: componentInfo.position,\r\n\t\t\ttypeCode: componentInfo.componentType,\r\n\t\t\titemtype: componentInfo.componentType,\r\n\t\t\tcatalogVersion: componentInfo.catalogVersionUuid,\r\n\t\t\tuid: '',\r\n\t\t\tuuid: ''\r\n\t\t};\r\n\r\n\t\tif (typeof componentPayload === 'object') {\r\n\t\t\tfor (const property in componentPayload) {\r\n\t\t\t\tif (componentPayload.hasOwnProperty(property)) {\r\n\t\t\t\t\t_payload[property] = componentPayload[property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (componentPayload) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`ComponentService.createNewComponent() - Illegal componentPayload - [${componentPayload}]`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this.cmsitemsRestService.create(_payload);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#updateComponent\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description Given a component info and the payload related to an existing component, the latter will be updated with the new supplied values.\r\n     *\r\n     * @param {Object} componentPayload of the new component to be created, including the info.\r\n     * @param {String} componentPayload.componenCode of the ComponentType to be created and added to the slot.\r\n     * @param {String} componentPayload.name of the new component to be created.\r\n     * @param {String} componentPayload.pageId used to identify the current page template.\r\n     * @param {String} componentPayload.slotId used to identify the slot in the current template.\r\n     * @param {String} componentPayload.position used to identify the position in the slot in the current template.\r\n     * @param {String} componentPayload.type of the component being created.\r\n     */\r\n\tupdateComponent(componentPayload: CMSItem): angular.IPromise<CMSItem> {\r\n\t\treturn this.cmsitemsRestService.update(componentPayload);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#addExistingComponent\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description add an existing component item to a slot\r\n     *\r\n     * @param {String} pageId used to identify the page containing the slot in the current template.\r\n     * @param {String} componentId used to identify the existing component which will be added to the slot.\r\n     * @param {String} slotId used to identify the slot in the current template.\r\n     * @param {String} position used to identify the position in the slot in the current template.\r\n     */\r\n\taddExistingComponent(\r\n\t\tpageId: string,\r\n\t\tcomponentId: string,\r\n\t\tslotId: string,\r\n\t\tposition: number\r\n\t): angular.IPromise<void> {\r\n\t\treturn this.restServiceForAddExistingComponent.save({\r\n\t\t\tpageId,\r\n\t\t\tslotId,\r\n\t\t\tcomponentId,\r\n\t\t\tposition\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#getSupportedComponentTypesForCurrentPage\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description Fetches all component types that are applicable to the current page.\r\n     *\r\n     * @param {Object} payload The payload that contains the information of the component types to load\r\n     * @returns {Promise} A promise resolving to a page of component types applicable to the current page.\r\n     */\r\n\t@Cached({actions: [rarelyChangingContent], tags: [pageChangeEvictionTag]})\r\n\tgetSupportedComponentTypesForCurrentPage(\r\n\t\tpayload: LoadPagedComponentTypesRequestPayload\r\n\t): angular.IPromise<Page<CMSItemStructure>> {\r\n\t\treturn this.pageComponentTypesRestService.get(payload as any).then(function(response: any) {\r\n\t\t\tresponse.results = response.componentTypes || [];\r\n\t\t\treturn response;\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#loadComponentItem\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description load a component identified by its id\r\n     */\r\n\tloadComponentItem(id: string): angular.IPromise<CMSItem> {\r\n\t\treturn this.cmsitemsRestService.getById(id);\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#loadPagedComponentItems\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description all existing component items for the current catalog are retrieved in the form of pages\r\n     * used for pagination especially when the result set is very large.\r\n     *\r\n     * @param {String} mask the search string to filter the results.\r\n     * @param {String} pageSize the number of elements that a page can contain.\r\n     * @param {String} page the current page number.\r\n     */\r\n\tloadPagedComponentItems(\r\n\t\tmask: string,\r\n\t\tpageSize: number,\r\n\t\tpage: number\r\n\t): angular.IPromise<CMSItem | Page<CMSItem>> {\r\n\t\treturn this.catalogService.retrieveUriContext().then((uriContext) => {\r\n\t\t\tconst requestParams = {\r\n\t\t\t\tpageSize,\r\n\t\t\t\tcurrentPage: page,\r\n\t\t\t\tmask,\r\n\t\t\t\tsort: 'name',\r\n\t\t\t\ttypeCode: 'AbstractCMSComponent',\r\n\t\t\t\tcatalogId: uriContext[this.CONTEXT_CATALOG],\r\n\t\t\t\tcatalogVersion: uriContext[this.CONTEXT_CATALOG_VERSION],\r\n\t\t\t\titemSearchParams: ''\r\n\t\t\t};\r\n\r\n\t\t\treturn this.cmsitemsRestService.get(requestParams);\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name componentMenuModule.ComponentService#loadPagedComponentItemsByCatalogVersion\r\n     * @methodOf componentMenuModule.ComponentService\r\n     *\r\n     * @description all existing component items for the provided content catalog are retrieved in the form of pages\r\n     * used for pagination especially when the result set is very large.\r\n     *\r\n     * @param {Object} payload The payload that contains the information of the page of components to load\r\n     * @param {String} payload.catalogId the id of the catalog for which to retrieve the component items.\r\n     * @param {String} payload.catalogVersion the id of the catalog version for which to retrieve the component items.\r\n     * @param {String} payload.mask the search string to filter the results.\r\n     * @param {String} payload.pageSize the number of elements that a page can contain.\r\n     * @param {String} payload.page the current page number.\r\n     *\r\n     * @returns {Promise} A promise resolving to a page of component items retrieved from the provided catalog version.\r\n     */\r\n\tloadPagedComponentItemsByCatalogVersion(\r\n\t\tpayload: LoadPagedComponentsRequestPayload\r\n\t): angular.IPromise<Page<CMSItem>> {\r\n\t\tconst requestParams = {\r\n\t\t\tpageSize: payload.pageSize,\r\n\t\t\tcurrentPage: payload.page,\r\n\t\t\tmask: payload.mask,\r\n\t\t\tsort: 'name',\r\n\t\t\ttypeCode: 'AbstractCMSComponent',\r\n\t\t\tcatalogId: payload.catalogId,\r\n\t\t\tcatalogVersion: payload.catalogVersion,\r\n\t\t\titemSearchParams: ''\r\n\t\t};\r\n\r\n\t\treturn this.cmsitemsRestService.get(requestParams);\r\n\t}\r\n\r\n\tgetSlotsForComponent(componentUuid: string): angular.IPromise<string[]> {\r\n\t\tconst slotIds: string[] = [];\r\n\t\treturn this._getContentSlotsForComponents().then(function(allSlotsToComponents: any) {\r\n\t\t\tconst keys: string[] = Object.keys(allSlotsToComponents);\r\n\t\t\tkeys.forEach(function(slotId: string) {\r\n\t\t\t\tif (allSlotsToComponents[slotId].find(function(component: ICMSComponent) {\r\n\t\t\t\t\treturn component.uuid === componentUuid;\r\n\t\t\t\t})) {\r\n\t\t\t\t\tslotIds.push(slotId);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn slotIds;\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\tprivate _getContentSlotsForComponents(): angular.IPromise<any> {\r\n\t\treturn this.pageInfoService.getPageUID().then((pageId) => {\r\n\t\t\treturn this.pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageId);\r\n\t\t});\r\n\t}\r\n}\r\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name componentVisibilityAlertServiceInterfaceModule\n *\n * @description\n * This module defines the componentVisibilityAlertServiceInterfaceModule Angular component\n * and its associated service. It uses the cmsContextualAlertModule to display\n * a contextual alert whenever a component get either hidden or restricted.\n */\nangular.module(\"componentVisibilityAlertServiceInterfaceModule\", [])\n\n    /**\n     * @ngdoc service\n     * @name componentVisibilityAlertServiceInterfaceModule.service:componentVisibilityAlertServiceInterface\n     *\n     * @description\n     * The componentVisibilityAlertServiceInterface is used by external modules to check\n     * on a component visibility and trigger the display of a contextual alert when\n     * the component is either hidden or restricted.\n     */\n    .factory('ComponentVisibilityAlertServiceInterface', function() {\n\n        var ComponentVisibilityAlertServiceInterface = function() {};\n\n        /**\n         * @ngdoc method\n         * @name componentVisibilityAlertServiceInterfaceModule.service:componentVisibilityAlertServiceInterface#checkAndAlertOnComponentVisibility\n         * @methodOf componentVisibilityAlertServiceInterfaceModule.service:componentVisibilityAlertServiceInterface\n         *\n         * @description\n         * Method checks on a component visibility and triggering the display of a\n         * contextual alert when the component is either hidden or restricted. This\n         * method defines a custom Angular controller which will get passed to and\n         * consumed by the contextual alert.\n         *\n         * @param {Object} component A JSON object containing the specific configuration to be applied on the actionableAlert.\n         * @param {String} component.componentId Uuid of the cmsItem\n         * @param {String} component.componentType Type of the cmsItem\n         * @param {String} component.catalogVersion CatalogVersion uuid of the cmsItem\n         * @param {String} component.restricted Boolean stating whether a restriction is applied to the cmsItem.\n         * @param {String} component.slotId Id of the slot where the cmsItem was added or modified.\n         * @param {String} component.visibility Boolean stating whether the cmsItem is rendered.\n         */\n        ComponentVisibilityAlertServiceInterface.prototype.checkAndAlertOnComponentVisibility = function() {};\n\n        return ComponentVisibilityAlertServiceInterface;\n\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as angular from 'angular';\r\nimport {ICMSComponent} from 'cmscommons';\r\n\r\n/**\r\n * @internal\r\n * @name cmsSmarteditServicesModule.service:componentSharedService\r\n * \r\n * @description\r\n * Service used to determine if a component is shared.  \r\n */\r\nexport abstract class IComponentSharedService {\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @name cmsSmarteditServicesModule.service:componentSharedService#isComponentShared\r\n\t * @methodOf cmsSmarteditServicesModule.service:componentSharedService\r\n\t *\r\n\t * @description\r\n\t * This method is used to determine if a component is shared. \r\n\t * A component is considered shared if it is used in two or more content slots. \r\n\t *\r\n\t * @param {String|ICMSComponent} component The component for which to check if it is shared or not. \r\n\t *\r\n\t * @returns {angular.IPromise<boolean>} A promise that resolves to a boolean value. True if the component is shared. False, otherwise. \r\n\t */\r\n\tisComponentShared(component: string | ICMSComponent): angular.IPromise<boolean> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport * from './pages';\r\nexport * from './cache/tags';\r\nexport * from './IContextAwareEditableItemService';\r\nexport * from './componentService';\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {IExperience, ISharedDataService, SeInjectable} from \"smarteditcommons\";\r\n\r\n/** @internal */\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ VersionExperienceInterceptor implements angular.IHttpInterceptor {\r\n\r\n\tprivate static MODE_DEFAULT: string = 'DEFAULT';\r\n\tprivate static MODE_PREVIEW_VERSION: string = 'PREVIEWVERSION';\r\n\tprivate static PREVIEW_DATA_TYPE: string = 'PreviewData';\r\n\r\n\tconstructor(\r\n\t\tprivate TYPES_RESOURCE_URI: string,\r\n\t\tprivate interceptorHelper: any,\r\n\t\tprivate sharedDataService: ISharedDataService) {\r\n\r\n\t\tthis.request = this.request.bind(this);\r\n\t}\r\n\r\n\trequest(config: angular.IRequestConfig) {\r\n\r\n\t\tif (this.isGET(config) && this.isPreviewDataTypeResourceEndpoint(config.url)) {\r\n\t\t\treturn this.interceptorHelper.handleRequest(config, () => {\r\n\t\t\t\treturn this.sharedDataService.get('experience').then((experience: IExperience) => {\r\n\t\t\t\t\tif (experience.versionId) {\r\n\t\t\t\t\t\tconfig.url = config.url.replace(VersionExperienceInterceptor.MODE_DEFAULT, VersionExperienceInterceptor.MODE_PREVIEW_VERSION);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn config;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn config;\r\n\t}\r\n\r\n\tprivate isGET(config: angular.IRequestConfig): boolean {\r\n\t\treturn config.method === \"GET\";\r\n\t}\r\n\r\n\tprivate isPreviewDataTypeResourceEndpoint(url: string): boolean {\r\n\t\treturn url.indexOf(this.TYPES_RESOURCE_URI) > -1 && url.indexOf(VersionExperienceInterceptor.PREVIEW_DATA_TYPE) > -1;\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as angular from 'angular';\r\nimport {diNameUtils, SeModule} from 'smarteditcommons';\r\nimport {VersionExperienceInterceptor} from './VersionExperienceInterceptor';\r\n\r\n@SeModule({\r\n\timports: [\r\n\t\t'interceptorHelperModule'\r\n\t],\r\n\tproviders: [VersionExperienceInterceptor],\r\n\tconfig: ($httpProvider: angular.IHttpProvider) => {\r\n\t\t'ngInject';\r\n\t\t$httpProvider.interceptors.push(diNameUtils.buildServiceName(VersionExperienceInterceptor));\r\n\t}\r\n})\r\n\rexport class /* @ngInject */ VersionExperienceInterceptorModule {}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {SeInjectable} from 'smarteditcommons';\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:CMSModesService\r\n *\r\n * @description\r\n * General methods for cms modes.\r\n */\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ CMSModesService {\r\n\r\n\tpublic static readonly BASIC_PERSPECTIVE_KEY: string = 'se.cms.perspective.basic';\r\n\tpublic static readonly ADVANCED_PERSPECTIVE_KEY: string = 'se.cms.perspective.advanced';\r\n\tpublic static readonly VERSIONING_PERSPECTIVE_KEY: string = 'se.cms.perspective.versioning';\r\n\r\n\tconstructor(private perspectiveService: any) {}\r\n\r\n    /** \r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:CMSModesService#isVersioningPerspectiveActive\r\n     * @methodOf cmsSmarteditServicesModule.service:CMSModesService\r\n     *\r\n     * @description\r\n     * Returns a promise that resolves to a boolean which is true if the current perspective loaded is versioning, false otherwise.\r\n     * \r\n     * @returns {Promise<boolean>} the promise that resolves to a boolean\r\n     */\r\n\tisVersioningPerspectiveActive(): Promise<boolean> {\r\n\t\treturn this.perspectiveService.getActivePerspectiveKey().then((activePerspectiveKey: string) => {\r\n\t\t\treturn activePerspectiveKey === CMSModesService.VERSIONING_PERSPECTIVE_KEY;\r\n\t\t});\r\n\t}\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {CmsApprovalStatus, CMSItem, ICMSPage} from '../../dtos';\r\nimport {Page} from '../../dao';\r\nimport {IUriContext} from 'smarteditcommons';\r\n\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:PageService\r\n *\r\n * @description\r\n * The pageServiceModule provides services for dealing with CMS page objects\r\n *\r\n */\r\nexport abstract class IPageService {\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getPageById\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Retrieves the page corresponding to the given page UID in the current contextual\r\n\t * site + catalog + catalog version.\r\n\t *\r\n\t * @param {String} pageUid The identifier of the page\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} A promise that resolves to the page corresponding to this uid.\r\n\t */\r\n\tpublic getPageById(pageUid: string): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getCurrentPageInfo\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Retrieves the page information of the page identified by the given uuid.\r\n\t *\r\n\t * @param {String} uuid The unique identifier of the page\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} A promise that resolves to the page corresponding to the given uuid.\r\n\t *\r\n\t */\r\n\tpublic getPageByUuid(uuid: string): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getCurrentPageInfo\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Retrieves the page information of the page that is currently loaded.\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} A promise that resolves to a CMS Item object containing\r\n\t * information related to the current page\r\n\t */\r\n\tpublic getCurrentPageInfo(): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getCurrentPageInfoByVersion\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Retrieves a version, as identified by the provided version id, of the page information that is currently loaded.\r\n\t *\r\n\t * @param {String} versionId The ID of the page version to load.\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} A promise that resolves to a CMS Item object containing\r\n\t * information related to the version selected of the current page\r\n\t */\r\n\tpublic getCurrentPageInfoByVersion(\r\n\t\tversionId: string\r\n\t): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#isPagePrimary\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Determines if a page belonging to the current contextual site+catalog+catalogversion is primary.\r\n\t *\r\n\t * @param {String} pageUid The UID of the page.\r\n\t *\r\n\t * @returns {Promise<boolean>} A promise that resolves to true if the page is primary, false otherwise.\r\n\t */\r\n\tpublic isPagePrimary(pageUid: string): angular.IPromise<boolean> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#isPagePrimaryWithContext\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Determines if a page belonging to the provided contextual site+catalog+catalogversion is primary.\r\n\t *\r\n\t * @param {String} pageUid The UID of the page.\r\n\t * @param {IUriContext} uriContext The uriContext for the pageId\r\n\t *\r\n\t * @returns {Promise<boolean>} A promise that resolves to true if the page is primary, false otherwise.\r\n\t */\r\n\tpublic isPagePrimaryWithContext(\r\n\t\tpageUid: string,\r\n\t\turiContext: IUriContext\r\n\t): angular.IPromise<boolean> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getPrimaryPage\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Retrieves the primary page of the given variation page in the current site+catalog+catalogversion.\r\n\t *\r\n\t * @param {String} variationPageId The UID of the variation page for which to find its primary page.\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} A promise that resolves to the page object or undefined if no primary page was found.\r\n\t */\r\n\tpublic getPrimaryPage(variationPageUid: string): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getPrimaryPagesForPageType\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Fetches a list of pages for for a given site+catalog+catalogversion\r\n\t *\r\n\t * @param {String} pageTypeCode A page type code to filter pages by\r\n\t * @param {Object} uriParams A {@link resourceLocationsModule.object:UriContext UriContext}\r\n\t *\r\n\t * @returns {Promise<ICMSPage[]>} A promise that resolves to an array of pages or a an empty array\r\n\t */\r\n\tpublic getPrimaryPagesForPageType(\r\n\t\tpageTypeCode: string,\r\n\t\turiParams: IUriContext\r\n\t): angular.IPromise<ICMSPage[]> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#primaryPageForPageTypeExists\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Returns true if primary page exists for a given page type\r\n\t *\r\n\t * @param {String} pageTypeCode A page type code to filter pages by\r\n\t * @param {Object} uriParams An optional {@link resourceLocationsModule.object:UriContext UriContext}\r\n\t *\r\n\t * @returns {Promise<boolean>} A promise that resolves to true if the page exists, false otherwise.\r\n\t */\r\n\tpublic primaryPageForPageTypeExists(\r\n\t\tpageTypeCode: string,\r\n\t\turiParams?: IUriContext\r\n\t): angular.IPromise<boolean> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name cmsSmarteditServicesModule.service:PageService#getPaginatedPrimaryPagesForPageType\r\n     * @methodOf cmsSmarteditServicesModule.service:PageService\r\n     *\r\n     * @description\r\n     * Fetches a pagination page for list of pages for a given site+catalog+catalogversion and page\r\n     *\r\n     * @param {String} pageTypeCode A page type code to filter pages by\r\n     * @param {Object} [uriParams] An optional {@link resourceLocationsModule.object:UriContext UriContext}\r\n     * @param {Object} [fetchPageParams] An optional Fetch Page strategy parameters. If not provided it will return results for the first page only.\r\n     * @param {Object} [fetchPageParams.currentPage=0]\r\n     * @param {Object} [fetchPageParams.pageSize=10]\r\n     *\r\n     * @returns {Promise<Page<ICMSPage>>} A promise that resolves to pagination with array of pages\r\n     */\r\n\tpublic getPaginatedPrimaryPagesForPageType(\r\n\t\tpageTypeCode: string,\r\n\t\turiParams?: IUriContext,\r\n\t\tfetchPageParams?: {\r\n\t\t\tsearch: string;\r\n\t\t\tpageSize: number;\r\n\t\t\tcurrentPage: number;\r\n\t\t}\r\n\t): angular.IPromise<Page<CMSItem>> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#getVariationPages\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Retrieves the variation pages of the given primary page in the current site+catalog+catalogversion.\r\n\t *\r\n\t * @param {String} primaryPageId The UID of the primary page.\r\n\t *\r\n\t * @returns {Promise<ICMSPage[]>} A promise that resolves an array of variation pages or an empty list if none are found.\r\n\t */\r\n\tpublic getVariationPages(\r\n\t\tprimaryPageUid: string\r\n\t): angular.IPromise<ICMSPage[]> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#updatePageById\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Updates the page corresponding to the given page UID with the payload provided for the current site+catalog+catalogversion.\r\n\t *\r\n\t * @param {String} pageUid The UID of the page\r\n\t * @param {ICMSPage} payload The information to update the page with.\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} A promise that resolves to the JSON page object as it now exists in the backend\r\n\t */\r\n\tpublic updatePageById(\r\n\t\tpageUid: string,\r\n\t\tpayload: ICMSPage\r\n\t): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#forcePageApprovalStatus\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * This method will forcefully update the page approval status (as long as the current user has the right permissions) of the page loaded\r\n\t * in the current context to the given status.\r\n\t *\r\n\t * @returns {Promise<ICMSPage>} If request is successful, it returns a promise that resolves with the updated CMS Item object. If the\r\n\t * request fails, it resolves with errors from the backend.\r\n\t */\r\n\tpublic forcePageApprovalStatus(\r\n\t\tnewPageStatus: CmsApprovalStatus\r\n\t): angular.IPromise<ICMSPage> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#isPageApproved\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * This method is used to determine whether the given page is approved (and can be synched).\r\n\t *\r\n\t * @param {string|ICMSPage} pageParam The page to check.\r\n\t *\r\n\t * @returns {Promise<boolean>} A promise that resolves to a boolean. If the page is already approved it will return true.\r\n\t * False, otherwise.\r\n\t */\r\n\tpublic isPageApproved(\r\n\t\tpageParam: string | ICMSPage\r\n\t): angular.IPromise<boolean> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:PageService#buildUriContextForCurrentPage\r\n\t * @methodOf cmsSmarteditServicesModule.service:PageService\r\n\t *\r\n\t * @description\r\n\t * Returns the uriContext populated with the siteId, catalogId and catalogVersion taken from $routeParams and fallback to the currentExperience\r\n\t * Note: From the page list, $routeParams are defined. From the storefront, $routeParams are undefined.\r\n\t *\r\n\t * @return {angular.IPromise<IUriContext>} promise resolve to the uri context\r\n\t */\r\n\tpublic buildUriContextForCurrentPage(): angular.IPromise<IUriContext> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport {IPageService} from './IPageService';","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name removeComponentServiceInterfaceModule\n * @description\n * # The removeComponentServiceInterfaceModule\n *\n * Provides a service with the ability to remove a component from a slot.\n */\nangular.module('removeComponentServiceInterfaceModule', [])\n    /**\n     * @ngdoc service\n     * @name removeComponentServiceInterfaceModule.service:RemoveComponentServiceInterface\n     * @description\n     * Service interface specifying the contract used to remove a component from a slot.\n     *\n     * This class serves as an interface and should be extended, not instantiated.\n     */\n    .factory('RemoveComponentServiceInterface', function() {\n        function RemoveComponentServiceInterface() {}\n\n        /**\n         * @ngdoc method\n         * @name removeComponentServiceInterfaceModule.service:RemoveComponentServiceInterface#removeComponent\n         * @methodOf removeComponentServiceInterfaceModule.service:RemoveComponentServiceInterface\n         *\n         * @description\n         * Removes the component specified by the given ID from the component specified by the given ID.\n         *\n         * @param {String} slotId The ID of the slot from which to remove the component.\n         * @param {String} componentId The ID of the component to remove from the slot.\n         */\n        RemoveComponentServiceInterface.prototype.removeComponent = function() {};\n\n        return RemoveComponentServiceInterface;\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name synchronizationServiceModule\n * @description\n *\n * The synchronization module contains the service necessary to perform catalog synchronization.\n *\n * The {@link synchronizationServiceModule.service:synchronizationService synchronizationService} \n * calls backend API in order to get synchronization status or trigger a catalog synchronization between two catalog versions.\n *\n */\nangular.module('synchronizationServiceModule', ['smarteditServicesModule', 'resourceLocationsModule', 'alertServiceModule', 'timerModule', 'legacySmarteditCommonsModule', 'cmsConstantsModule'])\n    /**\n     * @ngdoc object\n     * @name synchronizationServiceModule.object:CATALOG_SYNC_INTERVAL_IN_MILLISECONDS\n     * @description\n     * This object defines an injectable Angular constant that determines the frequency to update catalog synchronization information. \n     * Value given in milliseconds. \n     */\n    .constant('CATALOG_SYNC_INTERVAL_IN_MILLISECONDS', 5000)\n    /**\n     * @ngdoc service\n     * @name synchronizationServiceModule.service:synchronizationService\n     * @description\n     *\n     * The synchronization service manages RESTful calls to the synchronization service's backend API.\n     * \n     */\n    .service('synchronizationService', function(restServiceFactory, timerService, $q, $translate, alertService, authenticationService, operationContextService, crossFrameEventService, OPERATION_CONTEXT, CATALOG_SYNC_INTERVAL_IN_MILLISECONDS, SYNCHRONIZATION_EVENT) {\n\n        // Constants\n        var BASE_URL = \"/cmswebservices\";\n        var SYNC_JOB_INFO_BY_TARGET_URI = '/cmswebservices/v1/catalogs/:catalog/synchronizations/targetversions/:target';\n        var SYNC_JOB_INFO_BY_SOURCE_AND_TARGET_URI = '/cmswebservices/v1/catalogs/:catalog/versions/:source/synchronizations/versions/:target';\n\n        // Variables\n        var intervalHandle = {};\n        var syncRequested = [];\n        var syncJobInfoByTargetRestService = restServiceFactory.get(SYNC_JOB_INFO_BY_TARGET_URI);\n        var syncJobInfoBySourceAndTargetRestService = restServiceFactory.get(SYNC_JOB_INFO_BY_SOURCE_AND_TARGET_URI, 'catalog');\n\n        operationContextService.register(SYNC_JOB_INFO_BY_TARGET_URI, OPERATION_CONTEXT.CMS);\n        operationContextService.register(SYNC_JOB_INFO_BY_SOURCE_AND_TARGET_URI, OPERATION_CONTEXT.CMS);\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#updateCatalogSync\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to synchronize a catalog between two catalog versions.\n         * It sends the {@link SYNCHRONIZATION_EVENT.CATALOG_SYNCHRONIZED} event if successful.\n         *\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.updateCatalogSync = function(catalog) {\n            var jobKey = this._getJobKey(catalog.catalogId, catalog.sourceCatalogVersion, catalog.targetCatalogVersion);\n            this.addCatalogSyncRequest(jobKey);\n\n            return syncJobInfoBySourceAndTargetRestService.update({\n                'catalog': catalog.catalogId,\n                'source': catalog.sourceCatalogVersion,\n                'target': catalog.targetCatalogVersion\n            }).then(function(response) {\n                return response;\n            }.bind(this), function(reason) {\n                var translationErrorMsg = $translate.instant('sync.running.error.msg', {\n                    catalogName: catalog.name\n                });\n                if (reason.statusText === 'Conflict') {\n                    alertService.showDanger({\n                        message: translationErrorMsg\n                    });\n                }\n                return false;\n            }.bind(this));\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#getCatalogSyncStatus\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to get the status of the last synchronization job between two catalog versions. \n         * \n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.getCatalogSyncStatus = function(catalog) {\n            if (catalog.sourceCatalogVersion) {\n                return this.getSyncJobInfoBySourceAndTarget(catalog);\n            } else {\n                return this.getLastSyncJobInfoByTarget(catalog);\n            }\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#getCatalogSyncStatus\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to get the status of the last synchronization job between two catalog versions. \n         * \n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.getSyncJobInfoBySourceAndTarget = function(catalog) {\n            return syncJobInfoBySourceAndTargetRestService.get({\n                'catalog': catalog.catalogId,\n                'source': catalog.sourceCatalogVersion,\n                'target': catalog.targetCatalogVersion\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#getCatalogSyncStatus\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method is used to get the status of the last synchronization job. \n         * \n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.getLastSyncJobInfoByTarget = function(catalog) {\n            return syncJobInfoByTargetRestService.get({\n                'catalog': catalog.catalogId,\n                'target': catalog.targetCatalogVersion\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#stopAutoGetSyncData\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method starts the auto synchronization status update in a catalog between two given catalog versions.\n         *\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.startAutoGetSyncData = function(catalog, callback) {\n            var catalogId = catalog.catalogId;\n            var sourceCatalogVersion = catalog.sourceCatalogVersion;\n            var targetCatalogVersion = catalog.targetCatalogVersion;\n\n            var jobKey = this._getJobKey(catalogId, sourceCatalogVersion, targetCatalogVersion);\n\n            var syncJobTimer = timerService.createTimer(this._autoSyncCallback.bind(this, catalog, callback, jobKey), CATALOG_SYNC_INTERVAL_IN_MILLISECONDS);\n            syncJobTimer.start();\n\n            intervalHandle[jobKey] = syncJobTimer;\n        };\n\n        this._autoSyncCallback = function(catalog, callback, jobKey) {\n            authenticationService.isAuthenticated(BASE_URL).then(function(response) {\n                if (!response) {\n                    this.stopAutoGetSyncData(catalog);\n                }\n                this.getCatalogSyncStatus(catalog)\n                    .then(this.syncRequestedCallback(catalog))\n                    .then(callback)\n                    .then(function() {\n                        if (!intervalHandle[jobKey]) {\n                            this.startAutoGetSyncData(catalog, callback);\n                        }\n                    }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * Method sends {@link SYNCHRONIZATION_EVENT.CATALOG_SYNCHRONIZED} event when synchronization process is finished.\n         * It also stops polling if the job is not needed anymore (i.e. was marked with discardWhenNextSynced = true).\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         */\n        this.syncRequestedCallback = function(catalog) {\n            var jobKey = this._getJobKey(catalog.catalogId, catalog.sourceCatalogVersion, catalog.targetCatalogVersion);\n            return function(response) {\n                if (this.catalogSyncInProgress(jobKey)) {\n                    if (this.catalogSyncFinished(response)) {\n                        this.removeCatalogSyncRequest(jobKey);\n                        crossFrameEventService.publish(SYNCHRONIZATION_EVENT.CATALOG_SYNCHRONIZED, catalog);\n                    }\n\n                    if ((intervalHandle[jobKey].discardWhenNextSynced && this.catalogSyncFinished(response)) || this.catalogSyncAborted(response)) {\n                        intervalHandle[jobKey].stop();\n                        intervalHandle[jobKey] = undefined;\n                        this.removeCatalogSyncRequest(jobKey);\n                    }\n                }\n                return response;\n            }.bind(this);\n        };\n\n        this.catalogSyncInProgress = function(jobKey) {\n            return syncRequested.indexOf(jobKey) > -1;\n        };\n\n        this.catalogSyncFinished = function(response) {\n            return response.syncStatus === \"FINISHED\";\n        };\n\n        this.catalogSyncAborted = function(response) {\n            return response.syncStatus === \"ABORTED\";\n        };\n\n        this.removeCatalogSyncRequest = function(jobKey) {\n            var index = syncRequested.indexOf(jobKey);\n            if (index > -1) {\n                syncRequested.splice(index, 1);\n            }\n        };\n\n        this.addCatalogSyncRequest = function(jobKey) {\n            if (syncRequested.indexOf(jobKey) === -1) {\n                syncRequested.push(jobKey);\n            }\n        };\n\n        /**\n         * @ngdoc method\n         * @name synchronizationServiceModule.service:synchronizationService#stopAutoGetSyncData\n         * @methodOf synchronizationServiceModule.service:synchronizationService\n         *\n         * @description\n         * This method stops the auto synchronization status update in a catalog between two given catalog versions\n         * or it marks the job with discardWhenNextSynced = true if there is a syncrhonization in progress. If the job is\n         * marked with discardWhenNextSynced = true then it will be discarded when the synchronization process is finished or aborted.\n         *\n         * @param {Object} catalog An object that contains the information about the catalog to be synchronized.\n         * @param {String} catalog.catalogId The ID of the catalog to synchronize. \n         * @param {String=} catalog.sourceCatalogVersion The name of the source catalog version. \n         * @param {String} catalog.targetCatalogVersion The name of the target catalog version.\n         */\n        this.stopAutoGetSyncData = function(catalog) {\n            var jobKey = this._getJobKey(catalog.catalogId, catalog.sourceCatalogVersion, catalog.targetCatalogVersion);\n            if (intervalHandle[jobKey]) {\n                if (syncRequested.indexOf(jobKey) > -1) {\n                    intervalHandle[jobKey].discardWhenNextSynced = true;\n                } else {\n                    intervalHandle[jobKey].stop();\n                    intervalHandle[jobKey] = undefined;\n                }\n            }\n        };\n\n        this._getJobKey = function(catalogId, sourceCatalogVersion, targetCatalogVersion) {\n            return catalogId + \"_\" + sourceCatalogVersion + \"_\" + targetCatalogVersion;\n        };\n    });\n","angular.module('cmscommonsTemplates', []).run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('web/features/cmscommons/components/synchronize/synchronizationPanelTemplate.html',\n    \"<div class=\\\"se-sync-panel\\\">\\n\" +\n    \"    <div class=\\\"se-sync-panel__sync-status\\\"\\n\" +\n    \"        data-ng-if=\\\"sync.headerTemplateUrl\\\"\\n\" +\n    \"        data-ng-include=\\\"sync.headerTemplateUrl\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <y-message data-ng-if=\\\"sync.message\\\"\\n\" +\n    \"        data-type=\\\"{{sync.message.type}}\\\"\\n\" +\n    \"        data-message-id=\\\"sync-panel-message-{{$index}}\\\">\\n\" +\n    \"        <message-description>\\n\" +\n    \"            {{sync.message.description}}\\n\" +\n    \"        </message-description>\\n\" +\n    \"    </y-message>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"se-sync-panel__sync-info\\\"\\n\" +\n    \"        data-ng-show=\\\"sync.showItemList\\\">\\n\" +\n    \"        <div data-ng-if=\\\"sync.isLoading\\\">\\n\" +\n    \"            <div class=\\\"spinner-sm spinner-light\\\">Loading...</div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div data-ng-if=\\\"!sync.isLoading\\\"\\n\" +\n    \"            data-ng-repeat=\\\"dependency in sync.getRows()\\\"\\n\" +\n    \"            data-ng-class=\\\"{active: $index==0, 'se-sync-panel--item__external': dependency.isExternal}\\\"\\n\" +\n    \"            class=\\\"se-sync-panel__sync-info__row\\\">\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"se-sync-panel__info-checkbox fd-form__item\\\">\\n\" +\n    \"                <input type=\\\"checkbox\\\"\\n\" +\n    \"                    class=\\\"fd-form__control\\\"\\n\" +\n    \"                    data-ng-if=\\\"!dependency.isExternal\\\"\\n\" +\n    \"                    data-ng-model=\\\"dependency.selected\\\"\\n\" +\n    \"                    data-ng-disabled=\\\"sync.isDisabled(dependency)\\\"\\n\" +\n    \"                    data-ng-change=\\\"sync.selectionChange($index)\\\"\\n\" +\n    \"                    id=\\\"sync-info__checkbox_{{$index}}\\\">\\n\" +\n    \"                <label data-ng-if=\\\"$index===0\\\"\\n\" +\n    \"                    for=\\\"sync-info__checkbox_{{$index}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__info-checkbox-label se-sync-panel__info-checkbox-label--select-all fd-form__label\\\"\\n\" +\n    \"                    title=\\\"{{::dependency.selectAll | translate}}\\\">\\n\" +\n    \"                    {{::dependency.selectAll | translate}}</label>\\n\" +\n    \"\\n\" +\n    \"                <label data-ng-if=\\\"$index!==0 && !dependency.isExternal\\\"\\n\" +\n    \"                    for=\\\"sync-info__checkbox_{{$index}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__info-checkbox-label fd-form__label\\\"\\n\" +\n    \"                    title=\\\"{{::dependency.name | translate}}\\\">\\n\" +\n    \"                    {{::dependency.name | translate}}</label>\\n\" +\n    \"\\n\" +\n    \"                <label data-ng-if=\\\"$index!==0 && dependency.isExternal\\\"\\n\" +\n    \"                    data-y-popover\\n\" +\n    \"                    data-trigger=\\\"'hover'\\\"\\n\" +\n    \"                    data-template=\\\"sync.getTemplateInfoForExternalComponent()\\\"\\n\" +\n    \"                    for=\\\"sync-info__checkbox_{{$index}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__info-checkbox-label fd-form__label\\\">\\n\" +\n    \"                    {{::dependency.name | translate}}\\n\" +\n    \"                </label>\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <span data-ng-if=\\\"sync.buildInfoTemplate(dependency)\\\"\\n\" +\n    \"                data-y-popover\\n\" +\n    \"                data-trigger=\\\"'hover'\\\"\\n\" +\n    \"                data-title=\\\"sync.getInfoTitle(dependency)\\\"\\n\" +\n    \"                data-template=\\\"sync.buildInfoTemplate(dependency)\\\"\\n\" +\n    \"                class=\\\"pull-right se-sync-panel__sync-info__right-icon\\\"\\n\" +\n    \"                data-ng-class=\\\"{'se-sync-panel--icon-globe': dependency.isExternal} \\\">\\n\" +\n    \"                <span data-status=\\\"{{dependency.status}}\\\"\\n\" +\n    \"                    data-ng-if=\\\"!dependency.isExternal\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__sync-info-icon\\\"\\n\" +\n    \"                    data-ng-class=\\\"{\\n\" +\n    \"                        'sap-icon--accept':sync.isInSync(dependency), \\n\" +\n    \"                        'sap-icon--message-warning':!sync.isInSync(dependency)}\\\"></span>\\n\" +\n    \"                <span data-ng-if=\\\"dependency.isExternal\\\"\\n\" +\n    \"                    class=\\\"sap-icon--globe\\\"></span>\\n\" +\n    \"            </span>\\n\" +\n    \"\\n\" +\n    \"            <span data-ng-if=\\\"!sync.buildInfoTemplate(dependency)\\\"\\n\" +\n    \"                class=\\\"pull-right se-sync-panel__sync-info__right-icon\\\">\\n\" +\n    \"                <span data-status=\\\"{{dependency.status}}\\\"\\n\" +\n    \"                    class=\\\"se-sync-panel__sync-info-icon\\\"\\n\" +\n    \"                    data-ng-class=\\\"{\\n\" +\n    \"                        'sap-icon--accept':sync.isInSync(dependency), \\n\" +\n    \"                        'sap-icon--message-warning':!sync.isInSync(dependency)}\\\"></span>\\n\" +\n    \"            </span>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"se-sync-panel__footer\\\"\\n\" +\n    \"        data-ng-if=\\\"sync.showSyncButton\\\">\\n\" +\n    \"        <button class=\\\"fd-button--emphasized se-sync-panel__footer__btn se-sync-panel__sync-btn\\\"\\n\" +\n    \"            data-ng-disabled=\\\"sync.isSyncButtonDisabled()\\\"\\n\" +\n    \"            data-ng-click=\\\"sync.syncItems()\\\"\\n\" +\n    \"            data-translate=\\\"se.cms.actionitem.page.sync\\\"></button>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n}]);\n","var map = {\n\t\"./components/externalComponent/externalComponentButton.js\": \"./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentButton.js\",\n\t\"./components/externalComponent/externalComponentDecorator.js\": \"./jsTarget/web/features/cmssmartedit/components/externalComponent/externalComponentDecorator.js\",\n\t\"./components/slotShared/slotSharedButton.js\": \"./jsTarget/web/features/cmssmartedit/components/slotShared/slotSharedButton.js\",\n\t\"./components/slotSharedDisabled/externalSlotDisabledDecorator.js\": \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecorator.js\",\n\t\"./components/slotSharedDisabled/sharedSlotDisabledDecorator.js\": \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecorator.js\",\n\t\"./components/slotSharedDisabled/slotDisabledComponent.js\": \"./jsTarget/web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledComponent.js\",\n\t\"./components/slotUnshared/slotUnsharedButton.js\": \"./jsTarget/web/features/cmssmartedit/components/slotUnshared/slotUnsharedButton.js\",\n\t\"./components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js\": \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenu.js\",\n\t\"./components/slotVisibility/slotVisibilityButton.js\": \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityButton.js\",\n\t\"./components/slotVisibility/slotVisibilityComponent.js\": \"./jsTarget/web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponent.js\",\n\t\"./components/synchronize/slots/slotSyncButton.js\": \"./jsTarget/web/features/cmssmartedit/components/synchronize/slots/slotSyncButton.js\",\n\t\"./services/componentInfoService.js\": \"./jsTarget/web/features/cmssmartedit/services/componentInfoService.js\",\n\t\"./services/componentVisibilityAlertService.js\": \"./jsTarget/web/features/cmssmartedit/services/componentVisibilityAlertService.js\",\n\t\"./services/contextualMenuDropdownService.js\": \"./jsTarget/web/features/cmssmartedit/services/contextualMenuDropdownService.js\",\n\t\"./services/dragAndDrop/cmsDragAndDropService.js\": \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/cmsDragAndDropService.js\",\n\t\"./services/dragAndDrop/componentEditingFacadeService.js\": \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/componentEditingFacadeService.js\",\n\t\"./services/dragAndDrop/slotRestrictionsService.js\": \"./jsTarget/web/features/cmssmartedit/services/dragAndDrop/slotRestrictionsService.js\",\n\t\"./services/editorEnablerService.js\": \"./jsTarget/web/features/cmssmartedit/services/editorEnablerService.js\",\n\t\"./services/pageContentSlotsService.js\": \"./jsTarget/web/features/cmssmartedit/services/pageContentSlotsService.js\",\n\t\"./services/removeComponentService.js\": \"./jsTarget/web/features/cmssmartedit/services/removeComponentService.js\",\n\t\"./services/slotSharedService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotSharedService.js\",\n\t\"./services/slotSynchronizationService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotSynchronizationService.js\",\n\t\"./services/slotUnsharedService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotUnsharedService.js\",\n\t\"./services/slotVisibilityService.js\": \"./jsTarget/web/features/cmssmartedit/services/slotVisibilityService.js\",\n\t\"./templates.js\": \"./jsTarget/web/features/cmssmartedit/templates.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./jsTarget/web/features/cmssmartedit sync recursive \\\\.js$\";","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {UpgradeModule} from '@angular/upgrade/static';\r\nimport {NgModule} from '@angular/core';\r\nimport {SyncIndicatorDecorator} from 'cmssmartedit/components/synchronize/slots/SyncIndicatorDecorator';\r\nimport {diBridgeUtils, SeEntryModule} from 'smarteditcommons';\r\nimport './components/contextualSlotDropdown.scss';\r\n\r\n@SeEntryModule('cmssmartedit')\r\n@NgModule({\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tUpgradeModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSyncIndicatorDecorator\r\n\t],\r\n\tentryComponents: [\r\n\t\tSyncIndicatorDecorator\r\n\t],\r\n\tproviders: [\r\n\t\tdiBridgeUtils.upgradeProvider('$q'),\r\n\t\tdiBridgeUtils.upgradeProvider('catalogService'),\r\n\t\tdiBridgeUtils.upgradeProvider('slotSynchronizationService'),\r\n\t\tdiBridgeUtils.upgradeProvider('crossFrameEventService'),\r\n\t\tdiBridgeUtils.upgradeProvider('pageInfoService'),\r\n\t\tdiBridgeUtils.upgradeProvider('SYNCHRONIZATION_STATUSES'),\r\n\t\tdiBridgeUtils.upgradeProvider('SYNCHRONIZATION_POLLING')\r\n\t]\r\n})\r\nexport class CmssmarteditModule {}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {SeModule} from 'smarteditcommons';\r\nimport {SlotSynchronizationPanel} from './synchronize/slots/SlotSynchronizationPanel';\r\nimport {CmsSmarteditServicesModule} from '../services';\r\nimport {SharedComponentButton} from \"./sharedComponent/sharedComponentButton\";\r\n\r\n@SeModule({\r\n\timports: [\r\n\t\t'synchronizationPanelModule',\r\n\t\t'slotSynchronizationServiceModule',\r\n\t\t'pageContentSlotsServiceModule',\r\n\t\tCmsSmarteditServicesModule,\r\n\r\n\t],\r\n\tdeclarations: [SlotSynchronizationPanel, SharedComponentButton]\r\n})\r\n\rexport class /* @ngInject */ CmsComponentsModule {}\r\n","\nvar content = require(\"!!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./contextualSlotDropdown.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./contextualSlotDropdown.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./contextualSlotDropdown.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('externalComponentButtonModule', ['l10nModule', 'smarteditServicesModule'])\n    .controller('externalComponentButtonController', function(l10nFilter, catalogService) {\n\n        this.$onInit = function() {\n            this.isReady = false;\n\n            return catalogService.getCatalogVersionByUuid(this.catalogVersionUuid).then(function(catalogVersion) {\n                this.catalogVersion = l10nFilter(catalogVersion.catalogName) + ' (' + catalogVersion.version + ')';\n                this.isReady = true;\n            }.bind(this));\n\n        };\n\n    })\n    .component('externalComponentButton', {\n        templateUrl: 'externalComponentButtonTemplate.html',\n        controller: 'externalComponentButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            catalogVersionUuid: '<'\n        }\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('externalComponentDecoratorModule', ['functionsModule', 'cmsSmarteditServicesModule', 'yPopoverModule'])\n    .controller('externalComponentDecoratorController', function($element, $translate, $log, l10nFilter, CONTENT_SLOT_TYPE, componentHandlerService, catalogService, cMSModesService) {\n\n        this.$onInit = function() {\n\n            var parentSlotIdForComponent = componentHandlerService.getParentSlotForComponent($element);\n            this.isExtenalSlot = componentHandlerService.isExternalComponent(parentSlotIdForComponent, CONTENT_SLOT_TYPE);\n            this.isReady = false;\n\n            cMSModesService.isVersioningPerspectiveActive().then(function(isActive) {\n                this.isVersioningPerspective = isActive;\n                catalogService.getCatalogVersionByUuid(this.componentAttributes.smarteditCatalogVersionUuid).then(function(catalogVersion) {\n                    this.catalogVersionText = l10nFilter(catalogVersion.catalogName) + ' (' + catalogVersion.version + ')';\n                    this.isReady = true;\n                }.bind(this), function() {\n                    $log.error('externalComponentDecorator - cannot find catalog version for uuid', this.componentAttributes.smarteditCatalogVersionUuid);\n                }.bind(this));\n            }.bind(this));\n\n        };\n\n        this.getTooltipTemplate = function() {\n            return \"<div class='external-component-decorator__tooltip'>\" + $translate.instant('se.cms.from.external.catalog.version', {\n                catalogVersion: this.catalogVersionText\n            }) + \"</div>\";\n        };\n    })\n    .directive('externalComponentDecorator', function() {\n        return {\n            templateUrl: 'externalComponentDecoratorTemplate.html',\n            restrict: 'C',\n            transclude: true,\n            replace: false,\n            controller: 'externalComponentDecoratorController',\n            controllerAs: 'ctrl',\n            scope: {},\n            bindToController: {\n                active: '=',\n                componentAttributes: '<'\n            }\n        };\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport {CmsComponentsModule} from './cmsComponentsModule';","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {ISeComponent, SeComponent} from 'smarteditcommons';\r\nimport {IContextAwareEditableItemService} from \"cmscommons/services\";\r(window as any).__smartedit__.addDecoratorPayload('SeComponent', 'SharedComponentButton', {\r\n\ttemplateUrl: 'sharedComponentButtonTemplate.html',\r\n\tinputs: ['smarteditComponentId']\r\n});\r\n\r\n@SeComponent({\r\n\ttemplateUrl: 'sharedComponentButtonTemplate.html',\r\n\tinputs: ['smarteditComponentId']\r\n})\r\n\rexport class /* @ngInject */ SharedComponentButton implements ISeComponent {\r\n\r\n\tpublic smarteditComponentId: string;\r\n\tpublic isReady = false;\r\n\tpublic message: string;\r\n\r\n\tconstructor(\r\n\t\tprivate contextAwareEditableItemService: IContextAwareEditableItemService\r\n\t) {}\r\n\r\n\t$onInit() {\r\n\t\tthis.contextAwareEditableItemService.isItemEditable(this.smarteditComponentId).then((isEditable) => {\r\n\t\t\tthis.isReady = true;\r\n\t\t\tthis.message = `se.cms.contextmenu.shared.component.info.msg${isEditable ? '.editable' : ''}`;\r\n\t\t});\r\n\t}\r\n\r\n}","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotSharedButtonModule', ['slotSharedServiceModule', 'translationServiceModule', 'smarteditServicesModule', 'seConstantsModule', 'hasOperationPermissionModule'])\n    .controller('slotSharedButtonController', function(slotSharedService, $window, crossFrameEventService, EVENT_OUTER_FRAME_CLICKED) {\n        this.slotSharedFlag = false;\n        this.buttonName = 'slotSharedButton';\n        this.isPopupOpened = false;\n        this.isPopupOpenedPreviousValue = false;\n\n        this.$onInit = function() {\n\n            this.slotAttributes = {\n                smarteditComponentId: this.componentAttributes.smarteditComponentId,\n                contentSlotUuid: this.componentAttributes.smarteditComponentUuid,\n                componentType: this.componentAttributes.smarteditComponentType,\n                catalogVersionUuid: this.componentAttributes.smarteditCatalogVersionUuid\n            };\n\n            slotSharedService.isSlotShared(this.slotId).then(function(result) {\n                this.slotSharedFlag = result;\n            }.bind(this));\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isPopupOpened = false;\n            }.bind(this));\n        };\n\n        this.$doCheck = function() {\n            if (this.isPopupOpenedPreviousValue !== this.isPopupOpened) {\n                this.setRemainOpen({\n                    button: this.buttonName,\n                    remainOpen: this.isPopupOpened\n                });\n                this.isPopupOpenedPreviousValue = this.isPopupOpened;\n            }\n        };\n\n        this.convertToNonSharedSlotAndCloneComponents = function() {\n            slotSharedService.convertSharedSlotToNonSharedSlot(this.slotAttributes, true).then(function() {\n                this.isPopupOpened = false;\n                $window.location.reload();\n            }.bind(this));\n        };\n\n        this.convertToNonSharedSlotAndRemoveComponents = function() {\n            slotSharedService.convertSharedSlotToNonSharedSlot(this.slotAttributes, false).then(function() {\n                this.isPopupOpened = false;\n                $window.location.reload();\n            }.bind(this));\n        };\n\n        this.$onDestroy = function() {\n            this.unregFn();\n        };\n    })\n    .component('slotSharedButton', {\n        templateUrl: 'slotSharedButtonTemplate.html',\n        controller: 'slotSharedButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotId: '@',\n            componentAttributes: '<'\n        }\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('externalSlotDisabledDecoratorModule', ['slotDisabledDecoratorModule'])\n    .directive('externalSlotDisabledDecorator', function() {\n        return {\n            templateUrl: 'externalSlotDisabledDecoratorTemplate.html',\n            transclude: true,\n            restrict: 'C',\n            controllerAs: 'ctrl',\n            controller: function() {},\n            scope: {},\n            bindToController: {\n                active: '=',\n                componentAttributes: '<'\n            }\n        };\n    });\n","\nvar content = require(\"!!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./popovers.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./popovers.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/css-loader/dist/cjs.js?{\\\"sourceMap\\\":true,\\\"url\\\":true}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/postcss-loader/src/index.js?{\\\"config\\\":{\\\"path\\\":\\\"./smartedit-build/config/\\\"}}!../../../../../../../../npm-ancillary/npmancillary/resources/npm/node_modules/fast-sass-loader/lib/index.js?{\\\"data\\\":\\\"@import \\\\\\\"se-variables\\\\\\\";\\\",\\\"includePaths\\\":[\\\"/Users/i323932/Documents/work/1905/maintenance/hybris/bin/modules/smartedit/smartedit/smartedit-build/styles\\\"]}!./popovers.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('sharedSlotDisabledDecoratorModule', ['slotDisabledDecoratorModule'])\n    .directive('sharedSlotDisabledDecorator', function() {\n        return {\n            templateUrl: 'sharedSlotDisabledDecoratorTemplate.html',\n            transclude: true,\n            restrict: 'C',\n            controllerAs: 'ctrl',\n            controller: function() {},\n            scope: {},\n            bindToController: {\n                active: '=',\n                componentAttributes: '<'\n            }\n        };\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotDisabledDecoratorModule', ['yPopoverModule', 'l10nModule', 'cmsSmarteditServicesModule'])\n    .controller('slotDisabledComponentController', function($translate, pageInfoService, catalogService, l10nFilter, cMSModesService) {\n\n        var DEFAULT_DECORATOR_MSG = \"se.cms.sharedslot.decorator.label\";\n        var EXTERNAL_SLOT_DECORATOR_MSG = \"se.cms.externalsharedslot.decorator.label\";\n\n        var DEFAULT_DECORATOR_MSG_VERSIONING_MODE = \"se.cms.versioning.shared.slot.from.label\";\n        var EXTERNAL_SLOT_DECORATOR_MSG_VERSIONING_MODE = \"se.cms.versioning.global.shared.slot.from.label\";\n\n        var ICONS_CLASSES = {\n            GLOBE: 'hyicon-globe',\n            LOCK: 'hyicon-lock',\n            HOVERED: 'hyicon-linked'\n        };\n\n        this.$onInit = function() {\n\n            this.isReady = false;\n            this._checkIfSlotIsInherited();\n            this._getSourceCatalogName();\n            this._isVersioningPerspectiveActive();\n        };\n\n        this._checkIfSlotIsInherited = function() {\n            var componentCatalogVersion = this.componentAttributes.smarteditCatalogVersionUuid;\n            pageInfoService.getCatalogVersionUUIDFromPage().then(function(uuid) {\n                this.isExternalSlot = componentCatalogVersion !== uuid;\n            }.bind(this));\n        };\n\n        this._getSourceCatalogName = function() {\n            var catalogVersionUUID = this.componentAttributes.smarteditCatalogVersionUuid;\n            catalogService.getCatalogVersionByUuid(catalogVersionUUID).then(function(catalogVersion) {\n                this.catalogName = catalogVersion.catalogName;\n            }.bind(this));\n        };\n\n        this._isVersioningPerspectiveActive = function() {\n            cMSModesService.isVersioningPerspectiveActive().then(function(isActive) {\n                this.isVersioningPerspective = isActive;\n                this.isReady = true;\n            }.bind(this));\n        };\n\n        this.getPopoverMessage = function() {\n\n            var msgToLocalize;\n            if (this.isVersioningPerspective) {\n                msgToLocalize = (this.isExternalSlot) ? EXTERNAL_SLOT_DECORATOR_MSG_VERSIONING_MODE : DEFAULT_DECORATOR_MSG_VERSIONING_MODE;\n            } else {\n                msgToLocalize = (this.isExternalSlot) ? EXTERNAL_SLOT_DECORATOR_MSG : DEFAULT_DECORATOR_MSG;\n            }\n\n            var msgParams = {\n                catalogName: l10nFilter(this.catalogName),\n                slotId: this.componentAttributes.smarteditComponentId\n            };\n\n            return $translate.instant(msgToLocalize, msgParams);\n        };\n\n        this.getSlotIconClass = function() {\n            var iconClass = \"\";\n            if (this.active) {\n                iconClass = (this.isExternalSlot) ? ICONS_CLASSES.GLOBE : ICONS_CLASSES.HOVERED;\n            } else if (this.isExternalSlot !== undefined) {\n                iconClass = (this.isExternalSlot) ? ICONS_CLASSES.GLOBE : ICONS_CLASSES.HOVERED;\n            }\n\n            return iconClass;\n        };\n\n        this.getOuterSlotClass = function() {\n            return this.getSlotIconClass() === ICONS_CLASSES.GLOBE ? 'disabled-shared-slot__icon--outer-globe' : '';\n        }.bind(this);\n    })\n    .component('slotDisabledComponent', {\n        templateUrl: 'slotDisabledTemplate.html',\n        controller: 'slotDisabledComponentController',\n        controllerAs: 'ctrl',\n        bindings: {\n            active: '=',\n            componentAttributes: '<'\n        }\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotUnsharedButtonModule', ['slotUnsharedServiceModule', 'translationServiceModule', 'confirmationModalServiceModule', 'smarteditServicesModule', 'seConstantsModule', 'hasOperationPermissionModule'])\n    .controller('slotUnsharedButtonController', function($scope, $window, EVENT_OUTER_FRAME_CLICKED, slotUnsharedService, confirmationModalService, crossFrameEventService) {\n\n        this.revertToSharedSlot = function() {\n\n            var message = {\n                title: 'se.cms.slot.unshared.revert.to.shared.title',\n                templateUrl: 'revertToSharedSlotConfirmationTemplate.html'\n            };\n\n            confirmationModalService.confirm(message).then(function() {\n                slotUnsharedService.revertToSharedSlot(this.slotUuid).then(function() {\n                    this.isPopupOpened = false;\n                    $window.location.reload();\n                }.bind(this));\n            }.bind(this));\n\n        };\n\n        this.$onInit = function() {\n\n            this.slotUnsharedFlag = false;\n            this.buttonName = 'slotUnsharedButton';\n            this.isPopupOpened = false;\n            this.isPopupOpenedOldValue = this.isPopupOpened;\n\n            slotUnsharedService.isSlotUnshared(this.slotUid).then(function(result) {\n                this.slotUnsharedFlag = result;\n            }.bind(this));\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isPopupOpened = false;\n            }.bind(this));\n        };\n\n        this.$doCheck = function() {\n\n            if (this.isPopupOpenedOldValue !== this.isPopupOpened) {\n                this.isPopupOpenedOldValue = this.isPopupOpened;\n                this.setRemainOpen({\n                    button: this.buttonName,\n                    remainOpen: this.isPopupOpened\n                });\n            }\n\n        };\n\n        this.$onDestroy = function() {\n            this.unregFn();\n        };\n\n    })\n    .component('slotUnsharedButton', {\n        templateUrl: 'slotUnsharedButtonTemplate.html',\n        controller: 'slotUnsharedButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotUuid: '@',\n            slotUid: '@'\n        }\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name hiddenComponentMenuModule\n * @description\n *\n * This module contains the component used to display a menu for hidden components. \n */\nangular.module('hiddenComponentMenuModule', ['yPopupOverlayModule', 'yLoDashModule'])\n    /**\n     * @ngdoc object\n     * @name hiddenComponentMenuModule.HIDDEN_COMPONENT_OPENED_EVENT\n     *\n     * @description\n     * The name of the event triggered whenever a menu is opened on a hidden component. \n     */\n    .constant('HIDDEN_COMPONENT_OPENED_EVENT', 'HIDDEN_COMPONENT_OPENED_EVENT')\n    .controller('hiddenComponentMenuController', function(lodash, hiddenComponentMenuService, systemEventService, componentHandlerService, HIDDEN_COMPONENT_OPENED_EVENT, CONTENT_SLOT_TYPE) {\n\n        // --------------------------------------------------------------------------------------\n        // Lifecycle methods\n        // --------------------------------------------------------------------------------------\n        this.$onInit = function() {\n\n            var slot = componentHandlerService.getOriginalComponent(this.slotId, CONTENT_SLOT_TYPE);\n            this.slotUuid = componentHandlerService.getUuid(slot);\n\n            this.isMenuOpen = false;\n\n            hiddenComponentMenuService.getItemsForHiddenComponent(this.component, this.slotId).then(function(hiddenComponentMenu) {\n                this.configuration = lodash.cloneDeep(hiddenComponentMenu.configuration);\n                this.configuration.slotUuid = this.slotUuid;\n                this.menuItems = lodash.cloneDeep(hiddenComponentMenu.buttons);\n            }.bind(this));\n\n            this.unRegRemoveComponentOpenedEvent = systemEventService.subscribe(HIDDEN_COMPONENT_OPENED_EVENT, this.onOtherMenuOpening);\n        };\n\n        this.$onDestroy = function() {\n            this.unRegRemoveComponentOpenedEvent();\n        };\n\n        this.popupConfig = {\n            templateUrl: 'hiddenComponentMenuItemsTemplate.html',\n            halign: 'left',\n            valign: 'bottom'\n        };\n\n        // --------------------------------------------------------------------------------------\n        // Event Handlers\n        // --------------------------------------------------------------------------------------\n        this.onButtonClick = function($event) {\n            $event.stopPropagation();\n\n            this.isMenuOpen = !this.isMenuOpen;\n            if (this.isMenuOpen) {\n                systemEventService.publishAsync(HIDDEN_COMPONENT_OPENED_EVENT, {\n                    componentId: this.component.uid,\n                    slotId: this.slotId\n                });\n            }\n        }.bind(this);\n\n        this.onMenuHide = function() {\n            this.isMenuOpen = false;\n        }.bind(this);\n\n        this.onOtherMenuOpening = function(eventId, eventData) {\n            var isSameComponent = this.component.uid === eventData.componentId;\n            var isSameSlot = this.slotId === eventData.slotId;\n\n            if (!isSameComponent || !isSameSlot) {\n                this.isMenuOpen = false;\n            }\n        }.bind(this);\n\n        this.executeItemCallback = function(item, $event) {\n            if (item.action) {\n                item.action.callback(this.configuration, $event);\n                this.isMenuOpen = false;\n            }\n        };\n    })\n    /**\n     * @ngdoc directive\n     * @name hiddenComponentMenuModule.directive:hiddenComponentMenu\n     *\n     * @description\n     * The hidden component menu is a component used by the slot contextual menu to display a menu on hidden components.\n     */\n    .component('hiddenComponentMenu', {\n        templateUrl: 'hiddenComponentMenuTemplate.html',\n        transclude: false,\n        controller: 'hiddenComponentMenuController',\n        controllerAs: 'ctrl',\n        bindings: {\n            component: '<',\n            slotId: '<'\n        }\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotVisibilityButtonModule\n * @description\n *\n * The slot visibility button module provides a directive and controller to manage the button within the slot contextual menu \n * and the hidden component list, which is also part of the dropdown menu associated with the directive's template.     \n */\nangular.module('slotVisibilityButtonModule', ['cmssmarteditTemplates', 'slotVisibilityServiceModule', 'slotVisibilityComponentModule', 'seConstantsModule'])\n\n    /**\n     * @ngdoc controller\n     * @name slotVisibilityButtonModule.controller:slotVisibilityButtonController\n     *\n     * @description\n     * The slot visibility button controller is responsible for enabling and disabling the hidden components button, \n     * as well as displaying the hidden components list. It also provides functions to open and close the hidden component list.\n     *\n     * @param {Object} slotVisibilityService slot visibility service instance\n     * @param {Object} $scope current scope instance\n     */\n    .controller('slotVisibilityButtonController', function(\n        slotVisibilityService,\n        $scope,\n        sharedDataService,\n        $translate,\n        crossFrameEventService,\n        EVENT_OUTER_FRAME_CLICKED\n    ) {\n        this.buttonName = 'slotVisibilityButton';\n        this.eyeOnImageClass = 'sap-icon--show';\n        this.eyeOffImageClass = 'sap-icon--hide';\n        this.eyeImageClass = this.eyeOffImageClass;\n        this.buttonVisible = false;\n        this.hiddenComponents = [];\n        this.isComponentListOpened = false;\n\n        $scope.$watch('ctrl.isComponentListOpened', function(newValue, oldValue) {\n            this.eyeImageClass = newValue ? this.eyeOnImageClass : this.eyeOffImageClass;\n\n            if (newValue !== oldValue) {\n                this.setRemainOpen({\n                    button: this.buttonName,\n                    remainOpen: this.isComponentListOpened\n                });\n            }\n        }.bind(this));\n\n        this.markExternalComponents = function(experience, hiddenComponents) {\n            hiddenComponents.forEach(function(hiddenComponent) {\n                hiddenComponent.isExternal = hiddenComponent.catalogVersion !== experience.pageContext.catalogVersionUuid;\n            });\n        };\n\n        this.getTemplateInfoForExternalComponent = function() {\n            return \"<div>\" + $translate.instant('se.cms.slotvisibility.external.component') + \"</div>\";\n        };\n\n        this.onInsideClick = function($event) {\n            $event.stopPropagation();\n        };\n\n        this.$onInit = function() {\n            slotVisibilityService.getHiddenComponents(this.slotId).then(function(hiddenComponents) {\n                sharedDataService.get('experience').then(function(experience) {\n                    this.hiddenComponents = hiddenComponents;\n                    this.markExternalComponents(experience, this.hiddenComponents);\n                    this.hiddenComponentCount = hiddenComponents.length;\n                    if (this.hiddenComponentCount > 0) {\n                        this.buttonVisible = true;\n                    }\n                }.bind(this));\n            }.bind(this));\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isComponentListOpened = false;\n            }.bind(this));\n        };\n\n        this.$onDestroy = function() {\n            this.unregFn();\n        };\n\n    })\n    /**\n     * @ngdoc directive\n     * @name slotVisibilityButtonModule.directive:slotVisibilityButton\n     *\n     * @description\n     * The slot visibility button component is used inside the slot contextual menu and provides a button \n     * image that displays the number of hidden components, as well as a dropdown menu of hidden component.\n     *\n     * The directive expects that the parent, the slot contextual menu, has a setRemainOpen function and a \n     * slotId value on the parent's scope. setRemainOpen is used to send a command to the parent to leave \n     * the slot contextual menu open.\n     */\n    .component('slotVisibilityButton', {\n        templateUrl: 'slotVisibilityButtonTemplate.html',\n        transclude: true,\n        controller: 'slotVisibilityButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotId: '@',\n            initButton: '@'\n        }\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotVisibilityComponentModule\n *\n * @description\n * The slot visibility component module provides a directive and controller to display the hidden components of a specified content slot.\n *\n * @requires componentVisibilityAlertServiceModule\n * @requires editorModalServiceModule\n */\nangular.module('slotVisibilityComponentModule', [\n        \"componentVisibilityAlertServiceModule\",\n        \"cmsSmarteditServicesModule\",\n        \"catalogVersionPermissionModule\",\n        \"hiddenComponentMenuModule\"\n    ])\n\n    .controller('slotVisibilityComponentController', function(\n        $injector,\n        componentVisibilityAlertService,\n        editorModalService,\n        catalogService,\n        catalogVersionPermissionService,\n        componentSharedService,\n        domain\n    ) {\n        this.openEditorModal = function() {\n            editorModalService.openAndRerenderSlot(\n                this.component.typeCode,\n                this.component.uuid,\n                \"visible\"\n            ).then(function(item) {\n                componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                    itemId: item.uuid,\n                    itemType: item.itemtype,\n                    catalogVersion: item.catalogVersion,\n                    restricted: item.restricted,\n                    slotId: this.slotId,\n                    visible: item.visible\n                });\n            }.bind(this));\n        };\n\n        this.$onInit = function() {\n            this.isReady = false;\n            this.imageRoot = domain + '/cmssmartedit/images';\n            componentSharedService.isComponentShared(this.component).then(function(isShared) {\n                this.isSharedComponent = isShared;\n            }.bind(this));\n\n            catalogService.getCatalogVersionByUuid(this.component.catalogVersion).then(function(catalogVersionObj) {\n                catalogVersionPermissionService.hasWritePermission(catalogVersionObj.catalogId, catalogVersionObj.version).then(function(isWritable) {\n\n                    this.readOnly = !isWritable || this.component.isExternal;\n                    this.componentVisibilitySwitch = this.component.visible ? 'se.cms.component.visibility.status.on' : 'se.cms.component.visibility.status.off';\n                    this.componentRestrictionsCount = '(' + (this.component.restrictions ? this.component.restrictions.length : 0) + ')';\n                    this.isReady = true;\n\n                }.bind(this));\n            }.bind(this));\n        };\n    })\n\n    /**\n     * @ngdoc directive\n     * @name slotVisibilityComponentModule.directive:slotVisibilityComponent\n     *\n     * @description\n     * The slot visibility component directive is used to display information about a specified hidden component.\n     * It receives the component on its scope and it binds it to its own controller.\n     */\n    .component('slotVisibilityComponent', {\n        templateUrl: 'slotVisibilityComponentTemplate.html',\n        transclude: false,\n        controller: 'slotVisibilityComponentController',\n        controllerAs: 'ctrl',\n        bindings: {\n            component: '=',\n            slotId: '@',\n            componentId: '@'\n        }\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {IAlertServiceType, IPageInfoService, ISeComponent, SeComponent} from \"smarteditcommons\";\r\nimport {IPageService, SlotStatus} from 'cmscommons';\r(window as any).__smartedit__.addDecoratorPayload('SeComponent', 'SlotSynchronizationPanel', {\r\n\ttemplateUrl: 'slotSynchronizationPanelTemplate.html',\r\n\tinputs: ['slotId']\r\n});\r\n\r\n@SeComponent({\r\n\ttemplateUrl: 'slotSynchronizationPanelTemplate.html',\r\n\tinputs: ['slotId']\r\n})\r\n\rexport class /* @ngInject */ SlotSynchronizationPanel implements ISeComponent {\r\n\r\n\tprivate synchronizationPanelApi: any;\r\n\tprivate slotId: string;\r\n\r\n\tconstructor(\r\n\t\tprivate pageService: IPageService,\r\n\t\tprivate pageInfoService: IPageInfoService,\r\n\t\tprivate slotSynchronizationService: any,\r\n\t\tprivate pageContentSlotsService: any,\r\n\t\tprivate $translate: angular.translate.ITranslateService\r\n\t) {\r\n\t}\r\n\r\n\tpublic getApi($api: any): void {\r\n\t\tthis.synchronizationPanelApi = $api;\r\n\t}\r\n\r\n\tpublic getSyncStatus = (): angular.IPromise<any> => {\r\n\t\treturn this.pageInfoService.getPageUID().then((pageId: string) => {\r\n\t\t\treturn this.slotSynchronizationService.getSyncStatus(pageId, this.slotId).then((syncStatus: any) => {\r\n\t\t\t\treturn this.isSyncDisallowed().then((isDisallowed: boolean) => {\r\n\t\t\t\t\tif (isDisallowed) {\r\n\t\t\t\t\t\tthis.disableSync();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn syncStatus;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic performSync = (itemsToSync: any[]): angular.IPromise<void> => {\r\n\t\treturn this.slotSynchronizationService.performSync(itemsToSync);\r\n\t}\r\n\r\n\tprivate isSyncDisallowed(): angular.IPromise<boolean> {\r\n\t\treturn this.isPageSlot().then((isPageSlot: boolean) => {\r\n\t\t\treturn this.isPageApproved().then((isPageApproved: boolean) => {\r\n\t\t\t\treturn isPageSlot && !isPageApproved;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate isPageSlot(): angular.IPromise<boolean> {\r\n\t\treturn this.pageContentSlotsService.getSlotStatus(this.slotId).then((slotStatus: SlotStatus) => {\r\n\t\t\treturn slotStatus === SlotStatus.PAGE || slotStatus === SlotStatus.OVERRIDE;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate isPageApproved(): angular.IPromise<boolean> {\r\n\t\treturn this.pageInfoService.getPageUUID().then((pageUuid: string) => {\r\n\t\t\treturn this.pageService.isPageApproved(pageUuid);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate disableSync(): void {\r\n\t\tthis.synchronizationPanelApi.setMessage({\r\n\t\t\ttype: IAlertServiceType.WARNING,\r\n\t\t\tdescription: this.$translate.instant('se.cms.synchronization.slot.disabled.msg')\r\n\t\t});\r\n\t\tthis.synchronizationPanelApi.disableItemList(true);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {Component, Inject} from '@angular/core';\r\nimport {\r\n\tAbstractDecorator,\r\n\tCrossFrameEventService,\r\n\tICatalogService,\r\n\tIPageInfoService,\r\n\tSeDecorator,\r\n\tTypedMap\r\n} from 'smarteditcommons';\r(window as any).__smartedit__.addDecoratorPayload('Component', 'SyncIndicatorDecorator', {\r\n\tselector: 'sync-indicator',\r\n\ttemplate: require('./SyncIndicatorDecoratorTemplate.html'),\r\n});\r\n\r\n@SeDecorator()\r\n@Component({\r\n\tselector: 'sync-indicator',\r\n\ttemplate: require('./SyncIndicatorDecoratorTemplate.html'),\r\n})\r\n\rexport class /* @ngInject */ SyncIndicatorDecorator extends AbstractDecorator {\r\n\r\n\tpublic pageUUID: string;\r\n\tpublic syncStatus: TypedMap<string>;\r\n\tpublic isVersionNonActive = false;\r\n\r\n\tprivate unRegisterSyncPolling: () => void;\r\n\r\n\tconstructor(\r\n\t\t@Inject(\"$q\") private $q: angular.IQService,\r\n\t\t@Inject(\"catalogService\") private catalogService: ICatalogService,\r\n\t\t@Inject(\"slotSynchronizationService\") private slotSynchronizationService: any,\r\n\t\t@Inject(\"crossFrameEventService\") private crossFrameEventService: CrossFrameEventService,\r\n\t\t@Inject(\"pageInfoService\") private pageInfoService: IPageInfoService,\r\n\t\t@Inject(\"SYNCHRONIZATION_STATUSES\") private SYNCHRONIZATION_STATUSES: TypedMap<string>,\r\n\t\t@Inject(\"SYNCHRONIZATION_POLLING\") private SYNCHRONIZATION_POLLING: TypedMap<string>) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// initial sync status is set to unavailable until the first fetch\r\n\t\tthis.syncStatus = {\r\n\t\t\tstatus: this.SYNCHRONIZATION_STATUSES.UNAVAILABLE\r\n\t\t};\r\n\r\n\t\tthis.pageInfoService.getPageUUID().then((pageUUID: string) => {\r\n\t\t\tthis.pageUUID = pageUUID;\r\n\t\t\tthis.unRegisterSyncPolling = this.crossFrameEventService.subscribe(this.SYNCHRONIZATION_POLLING.FAST_FETCH, this.fetchSyncStatus.bind(this));\r\n\r\n\t\t\tthis.catalogService.isContentCatalogVersionNonActive().then((isNonActive) => {\r\n\t\t\t\tthis.isVersionNonActive = isNonActive;\r\n\t\t\t\tif (this.isVersionNonActive) {\r\n\t\t\t\t\tthis.fetchSyncStatus();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.unRegisterSyncPolling) {\r\n\t\t\tthis.unRegisterSyncPolling();\r\n\t\t}\r\n\t}\r\n\r\n\tfetchSyncStatus() {\r\n\t\treturn this.isVersionNonActive ? this.slotSynchronizationService.getSyncStatus(this.pageUUID, this.componentAttributes.smarteditComponentId).then((response: TypedMap<string>) => {\r\n\t\t\tthis.syncStatus = response;\r\n\t\t}, () => {\r\n\t\t\tthis.syncStatus.status = this.SYNCHRONIZATION_STATUSES.UNAVAILABLE;\r\n\t\t}) : this.$q.when();\r\n\t}\r\n\r\n}\r\n","module.exports = \"<div class=\\\"sync-indicator-decorator\\\"\\n    [ngClass]=\\\"syncStatus.status\\\"\\n    [attr.sync-status]=\\\"syncStatus.status\\\">\\n    <ng-content class=\\\"se-wrapper-data\\\"></ng-content>\\n</div>\"","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotSyncButtonModule', ['slotSynchronizationServiceModule', 'seConstantsModule', 'cmsComponentsModule'])\n    .controller('slotSyncButtonController', function($scope, $translate, SYNCHRONIZATION_POLLING, SYNCHRONIZATION_STATUSES, EVENT_OUTER_FRAME_CLICKED, catalogService, slotSynchronizationService, pageInfoService, crossFrameEventService) {\n\n        $scope.$watch('ctrl.isPopupOpened', function() {\n            this.setRemainOpen({\n                button: this.buttonName,\n                remainOpen: this.isPopupOpened\n            });\n        }.bind(this));\n\n        this.statusIsInSync = function(syncStatus) {\n            return syncStatus.status && syncStatus.status === SYNCHRONIZATION_STATUSES.IN_SYNC;\n        };\n\n        this.getSyncStatus = function() {\n            pageInfoService.getPageUUID().then(function(pageUUID) {\n                slotSynchronizationService.getSyncStatus(pageUUID, this.slotId).then(function(syncStatus) {\n                    this.isSlotInSync = this.statusIsInSync(syncStatus);\n                    this.newPageIsNotSynchronized = !syncStatus.lastSyncStatus;\n                    this.ready = true;\n                }.bind(this));\n            }.bind(this));\n        }.bind(this);\n\n        this.updateStatus = function(evenId, syncStatus) {\n            var slotSyncStatus = (syncStatus.selectedDependencies || []).concat(syncStatus.sharedDependencies || []).find(function(slot) {\n                return slot.itemId === this.slotId;\n            }.bind(this)) || {};\n            this.isSlotInSync = this.statusIsInSync(slotSyncStatus);\n        };\n\n        var updateStatusCallback = this.getSyncStatus;\n\n        this.$onInit = function() {\n\n            this.buttonName = 'slotSyncButton';\n            this.isPopupOpened = false;\n            this.newPageIsNotSynchronized = false;\n            this.ready = false;\n\n            this.isSlotInSync = true;\n            this.getSyncStatus();\n            this.unRegisterSyncPolling = crossFrameEventService.subscribe(SYNCHRONIZATION_POLLING.FAST_FETCH, updateStatusCallback);\n            this.newPageIsNotSynchronizedTemplate = \"<div class='se-popover--inner-content'>\" + $translate.instant(\"se.cms.slot.sync.from.page.level\") + \"</div>\";\n\n            this.unregFn = crossFrameEventService.subscribe(EVENT_OUTER_FRAME_CLICKED, function() {\n                this.isPopupOpened = false;\n            }.bind(this));\n        };\n\n        this.$onDestroy = function() {\n            this.unRegisterSyncPolling();\n            this.unregFn();\n        };\n\n    })\n    .component('slotSyncButton', {\n        templateUrl: 'slotSyncButtonTemplate.html',\n        controller: 'slotSyncButtonController',\n        controllerAs: 'ctrl',\n        bindings: {\n            setRemainOpen: '&',\n            slotId: '@'\n        }\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {\r\n\tpageChangeEvictionTag,\r\n\trarelyChangingContent,\r\n\tCached,\r\n\tGatewayProxied,\r\n\tInvalidateCache,\r\n\tIPageInfoService,\r\n\tIRestService,\r\n\tIRestServiceFactory,\r\n\tSeInjectable,\r\n\tTypedMap\r\n} from 'smarteditcommons';\r\nimport {IPageContentSlotsComponentsRestService} from 'cmscommons/dao/cmswebservices/IPageContentSlotsComponentsRestService';\r\nimport {slotEvictionTag, ICMSComponent} from 'cmscommons';\r\nimport * as lo from 'lodash';\r\nimport {cmsitemsEvictionTag} from 'cmscommons/dao/cmswebservices/sites/CmsitemsRestService';\r\n\r\ninterface PageContentSlotComponent {\r\n\tpageId: string;\r\n\tslotId: string;\r\n\tcomponentId: string;\r\n\tcomponentUuid: string;\r\n\tposition: number;\r\n}\r\n\r\ninterface PageContentSlotComponentResponse {\r\n\tpageContentSlotComponentList: PageContentSlotComponent[];\r\n}\r\n\r\ninterface CMSItemsResponse {\r\n\tresponse: ICMSComponent[];\r\n}\r\n\r\n@GatewayProxied('clearCache', 'getSlotsToComponentsMapForPageUid')\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ PageContentSlotsComponentsRestService extends IPageContentSlotsComponentsRestService {\r\n\r\n\tprivate pagesContentSlotsComponentsRestService: IRestService<PageContentSlotComponentResponse>;\r\n\r\n\tconstructor(\r\n\t\trestServiceFactory: IRestServiceFactory,\r\n\t\tprivate pageInfoService: IPageInfoService,\r\n\t\tprivate cmsitemsRestService: any,\r\n\t\tprivate lodash: lo.LoDashStatic,\r\n\t\tPAGE_CONTEXT_SITE_ID: string,\r\n\t\tPAGE_CONTEXT_CATALOG: string,\r\n\t\tPAGE_CONTEXT_CATALOG_VERSION: string,\r\n\t) {\r\n\t\tsuper();\r\n\r\n\t\tconst contentSlotContainerResourceURI = `/cmswebservices/v1/sites/${PAGE_CONTEXT_SITE_ID}/catalogs/${PAGE_CONTEXT_CATALOG}/versions/${PAGE_CONTEXT_CATALOG_VERSION}/pagescontentslotscomponents?pageId=:pageId`;\r\n\t\tthis.pagesContentSlotsComponentsRestService = restServiceFactory.get<PageContentSlotComponentResponse>(contentSlotContainerResourceURI);\r\n\t}\r\n\r\n\t@InvalidateCache(slotEvictionTag)\r\n\tclearCache(): void {\r\n\t\treturn;\r\n\t}\r\n\r\n\tgetComponentsForSlot(slotUuid: string): angular.IPromise<ICMSComponent[]> {\r\n\t\treturn this.pageInfoService.getPageUID().then((pageUID: string) => {\r\n\t\t\treturn this.getSlotsToComponentsMapForPageUid(pageUID).then((slotsToComponentsMap: TypedMap<ICMSComponent[]>) => {\r\n\t\t\t\treturn slotsToComponentsMap[slotUuid] || [];\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * Returns a list of pageContentSlotsComponents associated to a page.\r\n\t *\r\n\t * @param {string} pageUid The uid of the page to retrieve the content slots to components map.\r\n\t * @return {Promise} A promise that resolves to the pagesContentSlotsComponents for the page in context.\r\n\t */\r\n\tgetSlotsToComponentsMapForPageUid(pageUid: string): angular.IPromise<TypedMap<ICMSComponent[]>> {\r\n\t\treturn this.getCachedSlotsToComponentsMapForPageUid(pageUid).then((response) => {\r\n\t\t\treturn this.lodash.cloneDeep(response);\r\n\t\t});\r\n\t}\r\n\r\n\t@Cached({actions: [rarelyChangingContent], tags: [cmsitemsEvictionTag, pageChangeEvictionTag, slotEvictionTag]})\r\n\tprivate getCachedSlotsToComponentsMapForPageUid(pageUid: string): angular.IPromise<TypedMap<ICMSComponent[]>> {\r\n\t\treturn this.pagesContentSlotsComponentsRestService.get({\r\n\t\t\tpageId: pageUid\r\n\t\t}).then(({pageContentSlotComponentList}: PageContentSlotComponentResponse) => {\r\n\t\t\tlet componentUuids = pageContentSlotComponentList.map((pageContentSlotComponent: PageContentSlotComponent) => pageContentSlotComponent.componentUuid);\r\n\t\t\tcomponentUuids = Array.from(new Set(componentUuids));\r\n\r\n\t\t\treturn this.cmsitemsRestService.getByIds(componentUuids).then((components: CMSItemsResponse) => {\r\n\t\t\t\t// load all components as ComponentUuid-Component map\r\n\t\t\t\tconst allComponentsMap = (components.response || []).reduce((map: TypedMap<ICMSComponent>, component: ICMSComponent) => {\r\n\t\t\t\t\tmap[component.uuid] = component;\r\n\t\t\t\t\treturn map;\r\n\t\t\t\t}, {} as TypedMap<ICMSComponent>);\r\n\r\n\t\t\t\t// load all components as SlotUuid-Component[] map\r\n\t\t\t\tconst allSlotsToComponentsMap: TypedMap<ICMSComponent[]> = pageContentSlotComponentList.reduce((map: TypedMap<ICMSComponent[]>, pageContentSlotComponent: PageContentSlotComponent) => {\r\n\t\t\t\t\tmap[pageContentSlotComponent.slotId] = map[pageContentSlotComponent.slotId] || [];\r\n\t\t\t\t\tif (allComponentsMap[pageContentSlotComponent.componentUuid]) {\r\n\t\t\t\t\t\tmap[pageContentSlotComponent.slotId].push(allComponentsMap[pageContentSlotComponent.componentUuid]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn map;\r\n\t\t\t\t}, {} as TypedMap<ICMSComponent[]>);\r\n\r\n\t\t\t\treturn allSlotsToComponentsMap;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nfunction importAll(requireContext: any) {\r\n\trequireContext\r\n\t\t.keys()\r\n\t\t.forEach((key: any) => {\r\n\t\t\trequireContext(key);\r\n\t\t});\r\n}\r\n\r\nexport function doImport() {\r\n\timportAll(require.context('./', true, /\\.js$/));\r\n\timportAll(require.context('../cmscommons', true, /\\.js$/));\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport * from './legacyCmssmartedit';\r\nexport * from './cmssmartedit';\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {doImport as doImport1} from './forcedImports';\r\ndoImport1();\r\n\r\nimport * as angular from 'angular';\r\nimport {ComponentUpdatedEventInfo, CrossFrameEventService, IContextualMenuButton, IContextualMenuConfiguration, IFeatureService, IPageInfoService, SeModule, TypedMap} from 'smarteditcommons';\r\nimport {AssetsService} from 'cmscommons';\r\nimport {CmsSmarteditServicesModule, ComponentSharedService} from 'cmssmartedit/services';\r\nimport {CmsComponentsModule} from 'cmssmartedit/components';\r\nimport {TypePermissionsRestService} from 'cmscommons/services/TypePermissionsRestService';\r\nimport \"./components/slotSharedDisabled/popovers.scss\";\r\n\r\n@SeModule({\r\n\timports: [\r\n\t\tCmsSmarteditServicesModule,\r\n\t\tCmsComponentsModule,\r\n\t\t'cmsResourceLocationsModule',\r\n\t\t'resourceLocationsModule',\r\n\t\t'decoratorServiceModule',\r\n\t\t'removeComponentServiceModule',\r\n\t\t'experienceInterceptorModule',\r\n\t\t'editorEnablerServiceModule',\r\n\t\t'alertServiceModule',\r\n\t\t'translationServiceModule',\r\n\t\t'slotVisibilityButtonModule',\r\n\t\t'slotVisibilityServiceModule',\r\n\t\t'cmssmarteditTemplates',\r\n\t\t'cmscommonsTemplates',\r\n\t\t'smarteditServicesModule',\r\n\t\t'slotSharedButtonModule',\r\n\t\t'cmsDragAndDropServiceModule',\r\n\t\t'slotSyncButtonModule',\r\n\t\t'confirmationModalServiceModule',\r\n\t\t'sharedSlotDisabledDecoratorModule',\r\n\t\t'externalSlotDisabledDecoratorModule',\r\n\t\t'slotRestrictionsServiceModule',\r\n\t\t'slotSharedServiceModule',\r\n\t\t'contextualMenuDropdownServiceModule',\r\n\t\t'externalComponentDecoratorModule',\r\n\t\t'externalComponentButtonModule',\r\n\t\t'componentEditingFacadeModule',\r\n\t\t'slotUnsharedButtonModule',\r\n\t\t'componentInfoServiceModule'\r\n\t],\r\n\tinitialize: (\r\n\t\t$rootScope: angular.IRootScopeService,\r\n\t\t$q: angular.IQService,\r\n\t\t$translate: angular.translate.ITranslateService,\r\n\t\talertService: any,\r\n\t\tassetsService: AssetsService,\r\n\t\tcmsDragAndDropService: any,\r\n\t\tcomponentHandlerService: any,\r\n\t\tpageInfoService: IPageInfoService,\r\n\t\tconfirmationModalService: any,\r\n\t\tcontextualMenuService: any,\r\n\t\tdecoratorService: any,\r\n\t\teditorEnablerService: any,\r\n\t\tfeatureService: IFeatureService,\r\n\t\tremoveComponentService: any,\r\n\t\tslotRestrictionsService: any,\r\n\t\tslotSharedService: any,\r\n\t\tslotVisibilityService: any,\r\n\t\tcomponentEditingFacade: any,\r\n\t\tcmsitemsRestService: any,\r\n\t\tcomponentInfoService: any,\r\n\t\tcomponentSharedService: ComponentSharedService,\r\n\t\tcrossFrameEventService: CrossFrameEventService,\r\n\t\tEVENT_SMARTEDIT_COMPONENT_UPDATED: string,\r\n\t\ttypePermissionsRestService: TypePermissionsRestService) => {\r\n\t\t'ngInject';\r\n\t\teditorEnablerService.enableForComponents(['^((?!Slot).)*$']);\r\n\r\n\t\tdecoratorService.addMappings({\r\n\t\t\t'^((?!Slot).)*$': ['se.contextualMenu', 'externalComponentDecorator'],\r\n\t\t\t'^.*Slot$': ['se.slotContextualMenu', 'se.basicSlotContextualMenu', 'syncIndicator', 'sharedSlotDisabledDecorator', 'externalSlotDisabledDecorator']\r\n\t\t});\r\n\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'externalcomponentbutton',\r\n\t\t\tpriority: 100,\r\n\t\t\tnameI18nKey: 'se.cms.contextmenu.title.externalcomponent',\r\n\t\t\ti18nKey: 'se.cms.contextmenu.title.externalcomponentbutton',\r\n\t\t\tregexpKeys: ['^((?!Slot).)*$'],\r\n\t\t\tcondition: (configuration: IContextualMenuConfiguration) => {\r\n\t\t\t\tconst slotId: string = componentHandlerService.getParentSlotForComponent(configuration.element);\r\n\r\n\t\t\t\treturn slotRestrictionsService.isSlotEditable(slotId).then((isSlotEditable: boolean) => {\r\n\t\t\t\t\tif (!isSlotEditable) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst smarteditCatalogVersionUuid = configuration.componentAttributes && configuration.componentAttributes.smarteditCatalogVersionUuid;\r\n\t\t\t\t\tif (smarteditCatalogVersionUuid) {\r\n\t\t\t\t\t\treturn pageInfoService.getCatalogVersionUUIDFromPage().then((uuid: string) => {\r\n\t\t\t\t\t\t\treturn smarteditCatalogVersionUuid !== uuid;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn componentHandlerService.isExternalComponent(configuration.componentId, configuration.componentType);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taction: {\r\n\t\t\t\ttemplate: '<external-component-button data-catalog-version-uuid=\"ctrl.componentAttributes.smarteditCatalogVersionUuid\"></external-component-button>'\r\n\t\t\t},\r\n\t\t\tdisplayClass: 'externalcomponentbutton',\r\n\t\t\tdisplayIconClass: 'hyicon hyicon-globe',\r\n\t\t\tdisplaySmallIconClass: 'hyicon hyicon-globe'\r\n\t\t} as IContextualMenuButton);\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'se.cms.dragandropbutton',\r\n\t\t\tpriority: 200,\r\n\t\t\tnameI18nKey: 'se.cms.contextmenu.title.dragndrop',\r\n\t\t\ti18nKey: 'se.cms.contextmenu.title.dragndrop',\r\n\t\t\tregexpKeys: ['^((?!Slot).)*$'],\r\n\t\t\tcondition: (configuration: IContextualMenuConfiguration) => {\r\n\t\t\t\tconst slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\r\n\t\t\t\treturn slotRestrictionsService.isSlotEditable(slotId).then(function(slotEditable: boolean) {\r\n\t\t\t\t\tif (slotEditable) {\r\n\t\t\t\t\t\treturn typePermissionsRestService.hasUpdatePermissionForTypes([configuration.componentType]).then(function(hasUpdatePermission: TypedMap<boolean>) {\r\n\t\t\t\t\t\t\treturn hasUpdatePermission[configuration.componentType];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taction: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\tmousedown: () => {\r\n\t\t\t\t\t\tcmsDragAndDropService.update();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdisplayClass: 'movebutton',\r\n\t\t\tdisplayIconClass: 'sap-icon--move',\r\n\t\t\tdisplaySmallIconClass: 'sap-icon--move',\r\n\t\t\tpermissions: ['se.context.menu.drag.and.drop.component']\r\n\t\t});\r\n\r\n\t\tfeatureService.register({\r\n\t\t\tkey: 'se.cms.html5DragAndDrop',\r\n\t\t\tnameI18nKey: 'se.cms.dragAndDrop.name',\r\n\t\t\tdescriptionI18nKey: 'se.cms.dragAndDrop.description',\r\n\t\t\tenablingCallback: () => {\r\n\t\t\t\tcmsDragAndDropService.register();\r\n\t\t\t\tcmsDragAndDropService.apply();\r\n\t\t\t},\r\n\t\t\tdisablingCallback: () => {\r\n\t\t\t\tcmsDragAndDropService.unregister();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'se.cms.sharedcomponentbutton',\r\n\t\t\tpriority: 300,\r\n\t\t\tnameI18nKey: 'se.cms.contextmenu.title.shared.component',\r\n\t\t\ti18nKey: 'se.cms.contextmenu.title.shared.component',\r\n\t\t\tregexpKeys: ['^((?!Slot).)*$'],\r\n\t\t\tcondition: (configuration: IContextualMenuConfiguration) => {\r\n\t\t\t\tconst slotId = componentHandlerService.getParentSlotForComponent(configuration.element);\r\n\r\n\t\t\t\treturn slotRestrictionsService.isSlotEditable(slotId).then((slotEditable: boolean) => {\r\n\t\t\t\t\tif (!slotEditable) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn componentSharedService.isComponentShared(configuration.componentAttributes.smarteditComponentUuid);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taction: {\r\n\t\t\t\ttemplate: `<shared-component-button data-smartedit-component-id=\"ctrl.componentAttributes.smarteditComponentId\"></shared-component-button>`\r\n\t\t\t},\r\n\t\t\tdisplayClass: 'shared-component-button',\r\n\t\t\tdisplayIconClass: 'sap-icon--chain-link',\r\n\t\t\tdisplaySmallIconClass: 'sap-icon--chain-link',\r\n\t\t\tpermissions: []\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'se.cms.remove',\r\n\t\t\tpriority: 500,\r\n\t\t\tcustomCss: 'se-contextual-more-menu__item--delete',\r\n\t\t\ti18nKey: 'se.cms.contextmenu.title.remove',\r\n\t\t\tnameI18nKey: 'se.cms.contextmenu.title.remove',\r\n\t\t\tregexpKeys: ['^((?!Slot).)*$'],\r\n\t\t\tcondition: (configuration: IContextualMenuConfiguration) => {\r\n\t\t\t\tif (!configuration.isComponentHidden) {\r\n\t\t\t\t\tconst slotId: string = componentHandlerService.getParentSlotForComponent(configuration.element);\r\n\t\t\t\t\treturn slotRestrictionsService.isSlotEditable(slotId).then(function(slotEditable: boolean) {\r\n\t\t\t\t\t\tif (slotEditable) {\r\n\t\t\t\t\t\t\treturn typePermissionsRestService.hasDeletePermissionForTypes([configuration.componentType]).then(function(hasDeletePermission: TypedMap<boolean>) {\r\n\t\t\t\t\t\t\t\treturn hasDeletePermission[configuration.componentType];\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn typePermissionsRestService.hasDeletePermissionForTypes([configuration.componentType]).then(function(hasDeletePermission: TypedMap<boolean>) {\r\n\t\t\t\t\treturn hasDeletePermission[configuration.componentType];\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taction: {\r\n\t\t\t\tcallback: (configuration: IContextualMenuConfiguration, $event: Event) => {\r\n\r\n\t\t\t\t\tlet slotOperationRelatedId: string;\r\n\t\t\t\t\tlet slotOperationRelatedType: string;\r\n\r\n\t\t\t\t\tif (configuration.element) {\r\n\t\t\t\t\t\tslotOperationRelatedId = componentHandlerService.getSlotOperationRelatedId(configuration.element);\r\n\t\t\t\t\t\tslotOperationRelatedType = componentHandlerService.getSlotOperationRelatedType(configuration.element);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tslotOperationRelatedId = (configuration.containerId) ? configuration.containerId : configuration.componentId;\r\n\t\t\t\t\t\tslotOperationRelatedType = (configuration.containerId && configuration.containerType) ? configuration.containerType : configuration.componentType;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst message: any = {};\r\n\t\t\t\t\tmessage.description = \"se.cms.contextmenu.removecomponent.confirmation.message\";\r\n\t\t\t\t\tmessage.title = \"se.cms.contextmenu.removecomponent.confirmation.title\";\r\n\r\n\t\t\t\t\tconfirmationModalService.confirm(message).then(() => {\r\n\t\t\t\t\t\tremoveComponentService.removeComponent({\r\n\t\t\t\t\t\t\tslotId: configuration.slotId,\r\n\t\t\t\t\t\t\tslotUuid: configuration.slotUuid,\r\n\t\t\t\t\t\t\tcomponentId: configuration.componentId,\r\n\t\t\t\t\t\t\tcomponentType: configuration.componentType,\r\n\t\t\t\t\t\t\tcomponentUuid: configuration.componentAttributes.smarteditComponentUuid,\r\n\t\t\t\t\t\t\tslotOperationRelatedId,\r\n\t\t\t\t\t\t\tslotOperationRelatedType\r\n\t\t\t\t\t\t}).then(\r\n\t\t\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\t\t\tslotVisibilityService.reloadSlotsInfo();\r\n\r\n\t\t\t\t\t\t\t\t// This is necessary in case the component was used more than once in the page. If so, those instances need to be updated. \r\n\t\t\t\t\t\t\t\tcrossFrameEventService.publish(EVENT_SMARTEDIT_COMPONENT_UPDATED, {\r\n\t\t\t\t\t\t\t\t\tcomponentId: configuration.componentId,\r\n\t\t\t\t\t\t\t\t\tcomponentType: configuration.componentType,\r\n\t\t\t\t\t\t\t\t\trequiresReplayingDecorators: true\r\n\t\t\t\t\t\t\t\t} as ComponentUpdatedEventInfo);\r\n\r\n\t\t\t\t\t\t\t\t$translate('se.cms.alert.component.removed.from.slot', {\r\n\t\t\t\t\t\t\t\t\tcomponentID: slotOperationRelatedId,\r\n\t\t\t\t\t\t\t\t\tslotID: configuration.slotId\r\n\t\t\t\t\t\t\t\t}).then(function(translation: string) {\r\n\t\t\t\t\t\t\t\t\talertService.showSuccess({\r\n\t\t\t\t\t\t\t\t\t\tmessage: translation\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t$event.preventDefault();\r\n\t\t\t\t\t\t\t\t\t$event.stopPropagation();\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdisplayClass: 'removebutton',\r\n\t\t\tdisplayIconClass: 'sap-icon--decline',\r\n\t\t\tdisplaySmallIconClass: 'sap-icon--decline',\r\n\t\t\tpermissions: ['se.context.menu.remove.component']\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'se.slotContextualMenuVisibility',\r\n\t\t\tnameI18nKey: 'slotcontextmenu.title.visibility',\r\n\t\t\tregexpKeys: ['^.*ContentSlot$'],\r\n\t\t\taction: {templateUrl: 'slotVisibilityWidgetTemplate.html'},\r\n\t\t\tpermissions: ['se.slot.context.menu.visibility']\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'se.slotSharedButton',\r\n\t\t\tnameI18nKey: 'slotcontextmenu.title.shared.button',\r\n\t\t\tregexpKeys: ['^.*Slot$'],\r\n\t\t\taction: {templateUrl: 'slotSharedTemplate.html'},\r\n\t\t\tpermissions: ['se.slot.context.menu.shared.icon']\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'slotUnsharedButton',\r\n\t\t\tnameI18nKey: 'slotcontextmenu.title.unshared.button',\r\n\t\t\tregexpKeys: ['^.*Slot$'],\r\n\t\t\taction: {templateUrl: 'slotUnsharedButtonWrapperTemplate.html'},\r\n\t\t\tpermissions: ['se.slot.context.menu.unshared.icon']\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'se.slotSyncButton',\r\n\t\t\tnameI18nKey: 'slotcontextmenu.title.sync.button',\r\n\t\t\tregexpKeys: ['^.*Slot$'],\r\n\t\t\taction: {templateUrl: 'slotSyncTemplate.html'},\r\n\t\t\tpermissions: ['se.sync.slot.context.menu']\r\n\t\t});\r\n\r\n\t\tfeatureService.addDecorator({\r\n\t\t\tkey: 'syncIndicator',\r\n\t\t\tnameI18nKey: 'syncIndicator',\r\n\t\t\tpermissions: ['se.sync.slot.indicator']\r\n\t\t});\r\n\r\n\t\tfeatureService.register({\r\n\t\t\tkey: 'disableSharedSlotEditing',\r\n\t\t\tnameI18nKey: 'se.cms.disableSharedSlotEditing',\r\n\t\t\tdescriptionI18nKey: 'se.cms.disableSharedSlotEditing.description',\r\n\t\t\tenablingCallback: () => {\r\n\t\t\t\tslotSharedService.setSharedSlotEnablementStatus(true);\r\n\t\t\t},\r\n\t\t\tdisablingCallback: () => {\r\n\t\t\t\tslotSharedService.setSharedSlotEnablementStatus(false);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfeatureService.addDecorator({\r\n\t\t\tkey: 'sharedSlotDisabledDecorator',\r\n\t\t\tnameI18nKey: 'se.cms.shared.slot.disabled.decorator',\r\n\t\t\t// only show that the slot is shared if it is not already external\r\n\t\t\tdisplayCondition: (componentType: string, componentId: string) => {\r\n\t\t\t\treturn Promise.all([slotRestrictionsService.isSlotEditable(componentId), componentHandlerService.isExternalComponent(componentId, componentType), slotSharedService.isSlotShared(componentId)]).then(function(response: boolean[]) {\r\n\t\t\t\t\treturn !response[0] && !response[1] && response[2];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfeatureService.addDecorator({\r\n\t\t\tkey: 'externalSlotDisabledDecorator',\r\n\t\t\tnameI18nKey: 'se.cms.external.slot.disabled.decorator',\r\n\t\t\tdisplayCondition: (componentType: string, componentId: string) => {\r\n\t\t\t\treturn Promise.resolve(componentHandlerService.isExternalComponent(componentId, componentType));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfeatureService.addDecorator({\r\n\t\t\tkey: 'externalComponentDecorator',\r\n\t\t\tnameI18nKey: 'se.cms.external.component.decorator',\r\n\t\t\tdisplayCondition: (componentType: string, componentId: string) => {\r\n\t\t\t\treturn Promise.resolve(componentHandlerService.isExternalComponent(componentId, componentType));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfeatureService.addContextualMenuButton({\r\n\t\t\tkey: 'clonecomponentbutton',\r\n\t\t\tpriority: 600,\r\n\t\t\tnameI18nKey: 'se.cms.contextmenu.title.clone.component',\r\n\t\t\ti18nKey: 'se.cms.contextmenu.title.clone.component',\r\n\t\t\tregexpKeys: ['^((?!Slot).)*$'],\r\n\t\t\tcondition: (configuration: IContextualMenuConfiguration) => {\r\n\t\t\t\tconst componentUuid = configuration.componentAttributes.smarteditComponentUuid;\r\n\t\t\t\tif (!configuration.isComponentHidden) {\r\n\t\t\t\t\tconst slotId: string = componentHandlerService.getParentSlotForComponent(configuration.element);\r\n\t\t\t\t\treturn slotRestrictionsService.isSlotEditable(slotId).then(function(slotEditable: boolean) {\r\n\t\t\t\t\t\tif (slotEditable) {\r\n\t\t\t\t\t\t\treturn typePermissionsRestService.hasCreatePermissionForTypes([configuration.componentType]).then(function(hasCreatePermission: TypedMap<boolean>) {\r\n\t\t\t\t\t\t\t\tif (hasCreatePermission[configuration.componentType]) {\r\n\t\t\t\t\t\t\t\t\treturn componentInfoService.getById(componentUuid).then((component: any) => {\r\n\t\t\t\t\t\t\t\t\t\treturn component.cloneable;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn $q.when(false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn cmsitemsRestService.getById(componentUuid).then((component: any) => {\r\n\t\t\t\t\treturn component.cloneable;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taction: {\r\n\t\t\t\tcallback: (configuration: IContextualMenuConfiguration) => {\r\n\t\t\t\t\tconst sourcePosition = componentHandlerService.getComponentPositionInSlot(configuration.slotId, configuration.componentAttributes.smarteditComponentId);\r\n\t\t\t\t\tcomponentEditingFacade.cloneExistingComponentToSlot({\r\n\t\t\t\t\t\ttargetSlotId: configuration.slotId,\r\n\t\t\t\t\t\tdragInfo: {\r\n\t\t\t\t\t\t\tcomponentId: configuration.componentAttributes.smarteditComponentId,\r\n\t\t\t\t\t\t\tcomponentType: configuration.componentType,\r\n\t\t\t\t\t\t\tcomponentUuid: configuration.componentAttributes.smarteditComponentUuid\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tposition: sourcePosition + 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdisplayClass: 'clonebutton',\r\n\t\t\tdisplayIconClass: 'sap-icon--duplicate',\r\n\t\t\tdisplaySmallIconClass: 'sap-icon--duplicate',\r\n\t\t\tpermissions: ['se.clone.component']\r\n\t\t});\r\n\t}\r\n})\r\n\rexport class /* @ngInject */ Cmssmartedit {}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {GatewayProxied, SeInjectable} from 'smarteditcommons';\r\nimport {IComponentSharedService, ICMSComponent} from 'cmscommons';\r\n\r\n@GatewayProxied()\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ ComponentSharedService extends IComponentSharedService {\r\n\r\n\tconstructor(\r\n\t\tprivate componentInfoService: any,\r\n\t\tprivate $q: angular.IQService\r\n\t) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tisComponentShared(componentParam: string | ICMSComponent): angular.IPromise<boolean> {\r\n\t\tlet componentPromise: angular.IPromise<ICMSComponent>;\r\n\t\tif (typeof componentParam === 'string') {\r\n\t\t\tcomponentPromise = this.componentInfoService.getById(componentParam);\r\n\t\t} else {\r\n\t\t\tcomponentPromise = this.$q.when(componentParam);\r\n\t\t}\r\n\r\n\t\treturn componentPromise.then((component: ICMSComponent) => {\r\n\t\t\tif (!component.slots) {\r\n\t\t\t\treturn this.$q.reject(\"ComponentSharedService::isComponentShared - Component must have slots property.\");\r\n\t\t\t}\r\n\r\n\t\t\treturn component.slots.length > 1;\r\n\t\t});\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {GatewayProxied, SeInjectable} from \"smarteditcommons\";\r\nimport {IEditorModalService} from \"cmscommons/services/IEditorModalService\";\r\n\r\n@GatewayProxied('open', 'openAndRerenderSlot')\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ EditorModalService extends IEditorModalService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as angular from 'angular';\r\nimport {IContextualMenuButton, IContextualMenuConfiguration, SeInjectable} from 'smarteditcommons';\r\n// import {ContextualMenuService} from 'smartedit';\r\nimport {ContainerInfo, SlotContainerService} from 'cmssmartedit/services/slotContainerService';\r\nimport {IHiddenComponentMenu} from 'cmssmartedit/services/IHiddenComponentMenu';\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService\r\n *\r\n * @description\r\n * This service is used to retrieve menu items that are available to be used with hidden components. \r\n */\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ HiddenComponentMenuService {\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Constants\r\n\t// --------------------------------------------------------------------------------------\r\n\tprivate readonly MENU_ITEM_EXTERNAL = 'externalcomponentbutton';\r\n\tprivate readonly MENU_ITEM_CLONE = 'clonecomponentbutton';\r\n\tprivate readonly MENU_ITEM_REMOVE = 'se.cms.remove';\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Variables\r\n\t// --------------------------------------------------------------------------------------\r\n\tprivate allowedItems: {[key: string]: boolean} = {};\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// --------------------------------------------------------------------------------------\r\n\tconstructor(private $q: angular.IQService, private contextualMenuService: any, private slotContainerService: SlotContainerService) {\r\n\t\tthis._setDefaultItemsAllowed();\r\n\t}\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Public API\r\n\t// --------------------------------------------------------------------------------------\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#allowItemsInHiddenComponentMenu\r\n\t * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\r\n\t *\r\n\t * @description\r\n\t * This method is used to set the list of items that can be used with hidden components. \r\n\t * \r\n\t * @param {String[]} itemsToAllow The ID of the menu items that can be used with hidden components. \r\n\t * \r\n\t */\r\n\tpublic allowItemsInHiddenComponentMenu(itemsToAllow: string[]): void {\r\n\t\titemsToAllow.forEach((item) => {\r\n\t\t\tthis.allowedItems[item] = true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#removeAllowedItemsInHiddenComponentMenu\r\n\t * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\r\n\t *\r\n\t * @description\r\n\t * This method removes a provided set of allowed menu items if previously allowed. \r\n\t * \r\n\t * @param {String[]} itemsToAllow An array containing the ID's of the menu items that cannot be used any longer with hidden components. \r\n\t *\r\n\t */\r\n\tpublic removeAllowedItemsInHiddenComponentMenu(itemsToDisallow: string[]): void {\r\n\t\titemsToDisallow.forEach((item) => {\r\n\t\t\tdelete this.allowedItems[item];\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#removeAllowedItemsInHiddenComponentMenu\r\n\t * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\r\n\t *\r\n\t * @description\r\n\t * This method retrieves the list of IDs of the menu items that can be used with hidden components. \r\n\t * \r\n\t * @returns {String[]} The list of IDs of the menu items that can be used with hidden components. \r\n\t *\r\n\t */\r\n\tpublic getAllowedItemsInHiddenComponentMenu(): string[] {\r\n\t\treturn Object.keys(this.allowedItems);\r\n\t}\r\n\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:hiddenComponentMenuService#getItemsForHiddenComponent\r\n\t * @methodOf cmsSmarteditServicesModule.service:hiddenComponentMenuService\r\n\t *\r\n\t * @description\r\n\t * This method is used to retrieve the menu items available to be used in the provided component. To do so, \r\n\t * this method retrieves contextual menu items available for the provided component and filters out the ones that cannot\r\n\t * be used in hidden components. For example, assuming that a visible component has 'drag and drop' and 'remove' \r\n\t * contextual menu items, if the component is hidden it should only have the remove button available, since the \r\n\t * drag and drop operation is meaningless if the component is hidden. Hence, this service will retrieve only \r\n\t * the remove item. \r\n\t * \r\n\t * @param {Object} component The hidden component for which to retrieve its menu items. \r\n\t * @param {String} slotId The SmartEdit id of the slot where the component is located. \r\n\t * \r\n\t * @returns {Promise<ContextualMenuItem[]>} Promise that resolves to an array of contextual menu items available for the component \r\n\t * provided. \r\n\t */\r\n\tpublic getItemsForHiddenComponent(component: any, slotId: string): angular.IPromise<IHiddenComponentMenu> {\r\n\t\tthis._validateComponent(component);\r\n\r\n\t\treturn this._buildComponentInfo(slotId, component).then((configuration: IContextualMenuConfiguration) => {\r\n\t\t\treturn this._getAllowedItemsForComponent(component, configuration);\r\n\t\t});\r\n\t}\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Helper Methods\r\n\t// --------------------------------------------------------------------------------------\r\n\tprivate _validateComponent(component: any) {\r\n\t\tif (!component) {\r\n\t\t\tthrow new Error('HiddenComponentMenuService - Component cannot be null.');\r\n\t\t}\r\n\t\tif (!component.uid) {\r\n\t\t\tthrow new Error('HiddenComponentMenuService - Component needs a uid.');\r\n\t\t}\r\n\t\tif (!component.typeCode) {\r\n\t\t\tthrow new Error('HiddenComponentMenuService - Component needs a type code.');\r\n\t\t}\r\n\t\tif (!component.uuid) {\r\n\t\t\tthrow new Error('HiddenComponentMenuService - Component needs a uuid.');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setDefaultItemsAllowed() {\r\n\t\tthis.allowItemsInHiddenComponentMenu([this.MENU_ITEM_EXTERNAL, this.MENU_ITEM_CLONE, this.MENU_ITEM_REMOVE]);\r\n\t}\r\n\r\n\tprivate _buildComponentInfo(slotId: string, component: any): angular.IPromise<IContextualMenuConfiguration> {\r\n\t\treturn this.slotContainerService.getComponentContainer(slotId, component.uuid)\r\n\t\t\t.then((componentContainer: ContainerInfo) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcomponentType: component.typeCode,\r\n\t\t\t\t\tcomponentId: component.uid,\r\n\t\t\t\t\tcomponentAttributes: {\r\n\t\t\t\t\t\tsmarteditCatalogVersionUuid: component.catalogVersion,\r\n\t\t\t\t\t\tsmarteditComponentId: component.uid,\r\n\t\t\t\t\t\tsmarteditComponentType: component.componentType,\r\n\t\t\t\t\t\tsmarteditComponentUuid: component.uuid,\r\n\t\t\t\t\t\tsmarteditElementUuid: null\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontainerType: componentContainer ? componentContainer.containerType : null,\r\n\t\t\t\t\tcontainerId: componentContainer ? componentContainer.containerId : null,\r\n\t\t\t\t\telement: null,\r\n\t\t\t\t\tisComponentHidden: true,\r\n\t\t\t\t\tslotId,\r\n\t\t\t\t\tiLeftBtns: 0\r\n\t\t\t\t} as IContextualMenuConfiguration;\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate _getAllowedItemsForComponent(component: any, configuration: IContextualMenuConfiguration): angular.IPromise<IHiddenComponentMenu> {\r\n\t\tconst buttons: IContextualMenuButton[] = [];\r\n\t\tconst promisesToResolve: angular.IPromise<any>[] = [];\r\n\t\tlet menuItems = this.contextualMenuService.getContextualMenuByType(component.typeCode);\r\n\t\tmenuItems = angular.copy(menuItems);\r\n\r\n\t\t// Get items allowed in all hidden components\r\n\t\tmenuItems.filter((item: IContextualMenuButton) => {\r\n\t\t\treturn this.allowedItems[item.key];\r\n\t\t}).forEach((item: IContextualMenuButton) => {\r\n\r\n\t\t\t// Get items enabled for the current hidden component. \r\n\t\t\tconst deferred = this.$q.defer();\r\n\t\t\tpromisesToResolve.push(deferred.promise);\r\n\r\n\t\t\tthis.$q.when(item.condition ? item.condition(configuration) : true).then((isEnabled: boolean) => {\r\n\t\t\t\tif (isEnabled) {\r\n\t\t\t\t\tbuttons.push(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdeferred.resolve();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn this.$q.all(promisesToResolve).then(() => {\r\n\t\t\treturn {buttons, configuration} as IHiddenComponentMenu;\r\n\t\t});\r\n\t}\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {GatewayProxied, IUriContext, SeInjectable, SystemEventService, TypedMap} from 'smarteditcommons';\r\nimport {ISyncStatus} from 'cmscommons/dtos/ISyncStatus';\r\nimport * as angular from \"angular\";\r\n\r\n@GatewayProxied('getSyncStatus', '_fetchSyncStatus', 'changePollingSpeed', 'registerSyncPollingEvents', 'performSync')\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ SyncPollingService {\r\n\r\n\tconstructor(\r\n\t\tprivate systemEventService: SystemEventService,\r\n\t\tprivate SYNCHRONIZATION_POLLING: TypedMap<any>\r\n\t) {\r\n\t\tthis.registerSyncPollingEvents();\r\n\t}\r\n\r\n\tregisterSyncPollingEvents(): void {\r\n\t\tthis.systemEventService.subscribe(this.SYNCHRONIZATION_POLLING.SPEED_UP, this.changePollingSpeed.bind(this));\r\n\t\tthis.systemEventService.subscribe(this.SYNCHRONIZATION_POLLING.SLOW_DOWN, this.changePollingSpeed.bind(this));\r\n\t}\r\n\r\n\tchangePollingSpeed(eventId: string, itemId?: string): void {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\t_fetchSyncStatus(_pageUUID: string, uriContext: IUriContext): angular.IPromise<ISyncStatus> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetSyncStatus(pageUUID: string, uriContext: IUriContext): angular.IPromise<ISyncStatus> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n\r\n\tperformSync(array: any[], uriContext: IUriContext): angular.IPromise<any> {\r\n\t\t'proxyFunction';\r\n\t\treturn null;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {diNameUtils, SeModule} from 'smarteditcommons';\r\nimport {HiddenComponentMenuService} from './HiddenComponentMenuService';\r\nimport {SlotContainerService} from './slotContainerService';\r\nimport {SyncPollingService} from './SyncPollingServiceInner';\r\nimport {AssetsService, AttributePermissionsRestService, CmsConstantsModule, ComponentService, CMSModesService, CMSTimeService, TypePermissionsRestService} from 'cmscommons';\r\nimport {PageContentSlotsComponentsRestService} from 'cmssmartedit/dao/PageContentSlotsComponentsRestServiceInner';\r\nimport {EditorModalService} from './EditorModalServiceInner';\r\nimport {ComponentSharedService} from './ComponentSharedServiceInner';\r\nimport {PageService} from './pages';\r\nimport {ContextAwareEditableItemService} from \"./contextAwareEditableItem/ContextAwareEditableItemServiceInner\";\r\nimport {cmsitemsUri, CmsitemsRestService} from 'cmscommons/dao/cmswebservices/sites/CmsitemsRestService';\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name cmsSmarteditServicesModule\r\n *\r\n * @description\r\n * Module containing all the services shared within the CmsSmartEdit application.\r\n */\r\n@SeModule({\r\n\timports: [\r\n\t\t'yLoDashModule',\r\n\t\t'smarteditServicesModule',\r\n\t\tCmsConstantsModule\r\n\t],\r\n\tproviders: [\r\n\t\tdiNameUtils.makeValueProvider({cmsitemsUri}),\r\n\t\tCmsitemsRestService,\r\n\t\tEditorModalService,\r\n\t\tSyncPollingService,\r\n\t\tSlotContainerService,\r\n\t\tComponentSharedService,\r\n\t\tHiddenComponentMenuService,\r\n\t\tAssetsService,\r\n\t\tCMSModesService,\r\n\t\tCMSTimeService,\r\n\t\tPageContentSlotsComponentsRestService,\r\n\t\tAttributePermissionsRestService,\r\n\t\tTypePermissionsRestService,\r\n\t\tPageService,\r\n\t\tContextAwareEditableItemService,\r\n\t\tComponentService\r\n\t],\r\n})\r\n\rexport class /* @ngInject */ CmsSmarteditServicesModule {}\r\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('componentInfoServiceModule', [\n        'yjqueryModule',\n        'yLoDashModule',\n        'cmsSmarteditServicesModule',\n        'renderServiceInterfaceModule'\n    ])\n    /**\n     * This service is used to fetch and cache components information. \n     * This service keeps track of components added, edited and removed. It also automatically fetches and caches components when they are visible \n     * in the viewport (and invalidates them). \n     *\n     * This service is intended to be used to improve the performance of the application by reducing the number of xhr calls to the cmsitems api.\n     * Example: \n     * - a component in the overlay that is doing a fetch to the cmsitems api should use this service instead of using cmsitemsRestService.\n     *   When a lot of components are rendered in the overlay we want to avoid one xhr call per component, but instead use this service that is listening\n     *   to the 'OVERLAY_RERENDERED_EVENT' and fetch components information in batch (POST to cmsitems endpoint with an Array of uuids).\n     */\n    .service('componentInfoService', function($log, $q, yjQuery, lodash, crossFrameEventService, cmsitemsRestService, UUID_ATTRIBUTE, EVENTS, OVERLAY_RERENDERED_EVENT, COMPONENT_CREATED_EVENT, COMPONENT_UPDATED_EVENT, COMPONENT_REMOVED_EVENT) {\n        var cachedComponents = {};\n        var deferredMap = {};\n\n        // returns a Promise that will be resolved only if the component was added previously in the overlay and if not will resolve only when the component is added to the overlay.\n        /**\n         * @internal\n         * Returns a Promise that will be resolved with the component identified by the given uuid. \n         * When called this method works like this: \n         * - If the component is in the cache, the promise resolves right away. \n         * - If the component is not in the cache, and the forceRetrieval flag is not set, this method won't call the cmsItem backend API right away. \n         *   Instead, it waits until the component is cached (e.g., it is added to the overlay). \n         * - If the forceRetrieval flag is set, then the method will call the cmsItem backend API right away. \n         * \n         * @param uuid The uuid of the item to retrieve\n         * @param forceRetrieval Boolean flag. It specifies whether to retrieve the cmsItem right away. \n         * \n         */\n        this.getById = function(uuid, forceRetrieval) {\n            if (!forceRetrieval && !cachedComponents[uuid] && !document.querySelectorAll('[' + UUID_ATTRIBUTE + '=\\'' + uuid + '\\']').length) {\n                // For hidden components that are not present in the DOM\n                forceRetrieval = true;\n            }\n            if (cachedComponents[uuid]) {\n                return $q.when(cachedComponents[uuid]);\n            } else if (forceRetrieval) {\n                return cmsitemsRestService.getById(uuid).then(function(data) {\n                    this._resolvePromises(data);\n                    return cachedComponents[uuid];\n                }.bind(this), function(error) {\n                    this._rejectPromises([uuid], error);\n                    throw error;\n                }.bind(this));\n            } else {\n                var deferred = deferredMap[uuid] || $q.defer();\n                if (!deferredMap[uuid]) {\n                    deferredMap[uuid] = deferred;\n                }\n                return deferred.promise;\n            }\n        };\n\n        this._resolvePromises = function(data) {\n            (data.response ? data.response : [data]).forEach(function(component) {\n                cachedComponents[component.uuid] = component;\n                if (deferredMap[component.uuid]) {\n                    deferredMap[component.uuid].resolve(component);\n                    delete deferredMap[component.uuid];\n                }\n            });\n        };\n\n        this._rejectPromises = function(uuids, error) {\n            $log.error('componentInfoService:: getById error:', error.message);\n            uuids.forEach(function(uuid) {\n                if (deferredMap[uuid]) {\n                    deferredMap[uuid].reject(error);\n                    delete deferredMap[uuid];\n                }\n            });\n        };\n\n        this._getComponentsDataByUUIDs = function(uuids) {\n            cmsitemsRestService.getByIds(uuids).then(this._resolvePromises, function(e) {\n                this._rejectPromises(uuids, e);\n            }.bind(this));\n        };\n\n        this._onComponentsAddedToOverlay = function(addedComponentsDomElements) {\n            var uuids = lodash.map(addedComponentsDomElements, function(component) {\n                return yjQuery(component).attr(UUID_ATTRIBUTE);\n            }).filter(function(uuid) {\n                return !lodash.includes(Object.keys(cachedComponents), uuid);\n            });\n            if (uuids.length) {\n                this._getComponentsDataByUUIDs(uuids);\n            }\n        };\n\n        // delete from the cache the components that were removed from the DOM\n        // note: components that are still in the DOM were only removed from the overlay\n        this._onComponentsRemovedFromOverlay = function(removedComponentsDomElements) {\n            removedComponentsDomElements.filter(function(component) {\n                return !yjQuery.find('[' + UUID_ATTRIBUTE + '=\\'' + yjQuery(component).attr(UUID_ATTRIBUTE) + '\\']').length;\n            }).filter(function(component) {\n                return lodash.includes(Object.keys(cachedComponents), yjQuery(component).attr(UUID_ATTRIBUTE));\n            }).map(function(component) {\n                return yjQuery(component).attr(UUID_ATTRIBUTE);\n            }).forEach(function(uuid) {\n                delete cachedComponents[uuid];\n            });\n        };\n\n        this._forceAddComponent = function(cmsComponentToAdd) {\n            this._resolvePromises({\n                response: [\n                    cmsComponentToAdd\n                ]\n            });\n        };\n\n        this._forceRemoveComponent = function(componentToRemove) {\n            delete cachedComponents[componentToRemove.uuid];\n        };\n\n        this._isComponentCached = function(componentUuid) {\n            return !!cachedComponents[componentUuid];\n        };\n\n        this._clearCache = function() {\n            cachedComponents = {};\n            deferredMap = {};\n        };\n\n        // components added & removed from overlay\n        crossFrameEventService.subscribe(OVERLAY_RERENDERED_EVENT, function(evtId, data) {\n            if (data) {\n                if (data.addedComponents && data.addedComponents.length) {\n                    this._onComponentsAddedToOverlay(data.addedComponents);\n                }\n                if (data.removedComponents && data.removedComponents.length) {\n                    this._onComponentsRemovedFromOverlay(data.removedComponents);\n                }\n            }\n        }.bind(this));\n\n        // Components added & removed from storefront page. \n        this._onComponentAdded = function(eventId, data) {\n            this._forceAddComponent(data);\n        };\n\n        this._onComponentRemoved = function(eventId, data) {\n            this._forceRemoveComponent(data);\n        };\n        crossFrameEventService.subscribe(COMPONENT_CREATED_EVENT, this._onComponentAdded.bind(this));\n        crossFrameEventService.subscribe(COMPONENT_UPDATED_EVENT, this._onComponentAdded.bind(this));\n        crossFrameEventService.subscribe(COMPONENT_REMOVED_EVENT, this._onComponentRemoved.bind(this));\n\n        // clear cache\n        crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, this._clearCache.bind(this));\n        crossFrameEventService.subscribe(EVENTS.USER_HAS_CHANGED, this._clearCache.bind(this));\n\n\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module(\"componentVisibilityAlertServiceModule\", [\n        \"componentVisibilityAlertServiceInterfaceModule\"\n    ])\n\n    .factory('componentVisibilityAlertService', function(\n        ComponentVisibilityAlertServiceInterface,\n        extend,\n        gatewayProxy\n    ) {\n\n        var ComponentVisibilityAlertService = function() {\n            this.gatewayId = 'ComponentVisibilityAlertService';\n            gatewayProxy.initForService(this, [\"checkAndAlertOnComponentVisibility\"]);\n        };\n\n        ComponentVisibilityAlertService = extend(ComponentVisibilityAlertServiceInterface, ComponentVisibilityAlertService);\n\n        return new ComponentVisibilityAlertService();\n\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {GatewayProxied, SeInjectable} from \"smarteditcommons\";\r\nimport {IContextAwareEditableItemService} from \"cmscommons\";\r\n\r\n@SeInjectable()\r\n@GatewayProxied()\r\n\rexport class /* @ngInject */ ContextAwareEditableItemService extends IContextAwareEditableItemService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n}\r\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name contextualMenuDropdownServiceModule.contextualMenuDropdownService\n * @description\n * contextualMenuDropdownService is an internal service that provides methods for interaction between\n * Drag and Drop Service and the Contextual Menu.\n */\n\nangular.module('contextualMenuDropdownServiceModule', ['contextualMenuDecoratorModule', 'smarteditServicesModule'])\n    .run(function(contextualMenuDropdownService) {\n        contextualMenuDropdownService._registerIsOpenEvent();\n    })\n\n    /**\n     *  Note: The contextualMenuDropdownService functions as a glue between the Drag and Drop Service and the Contextual Menu.\n     *  The service was created to solve the issue of closing any contextual menu that is open whenever a drag operation is started.\n     *  It does so while keeping the DnD and Contextual Menu services decoupled.\n     */\n    .service('contextualMenuDropdownService', function(systemEventService, CTX_MENU_DROPDOWN_IS_OPEN, CLOSE_CTX_MENU, DRAG_AND_DROP_EVENTS) {\n\n        var unsubscribeFn;\n\n        this._registerIsOpenEvent = function() {\n            systemEventService.subscribe(CTX_MENU_DROPDOWN_IS_OPEN, function() {\n                this._registerDragStarted();\n            }.bind(this));\n        };\n\n        this._registerDragStarted = function() {\n            unsubscribeFn = systemEventService.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, this._triggerCloseOperation);\n        };\n\n        this._triggerCloseOperation = function() {\n            systemEventService.publishAsync(CLOSE_CTX_MENU);\n            if (unsubscribeFn) {\n                unsubscribeFn();\n            }\n        }.bind(this);\n\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n(function() {\n\n    /**\n     * @ngdoc overview\n     * @name cmsDragAndDropServiceModule\n     * @description\n     * # The cmsDragAndDropServiceModule\n     *\n     * The cmsDragAndDropServiceModule contains a service that provides a rich drag and drop experience tailored for CMS operations.\n     *\n     */\n    angular.module('cmsDragAndDropServiceModule', ['yjqueryModule', 'dragAndDropServiceModule', 'yLoDashModule', 'legacySmarteditCommonsModule', 'slotRestrictionsServiceModule', 'componentEditingFacadeModule', 'translationServiceModule', 'removeComponentServiceModule',\n            'cmsSmarteditServicesModule', 'browserServiceModule', 'seConstantsModule'\n        ])\n        /**\n         * @ngdoc object\n         * @name cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n         *\n         * @description\n         * Injectable angular constant<br/>\n         * Constants identifying CMS drag and drop events.\n         *\n         */\n        .constant('DRAG_AND_DROP_EVENTS', {\n            /**\n             * @ngdoc property\n             * @name DRAG_STARTED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when a drag and drop event starts.\n             **/\n            DRAG_STARTED: 'CMS_DRAG_STARTED',\n            /**\n             * @ngdoc property\n             * @name DRAG_STOPPED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when a drag and drop event stops.\n             **/\n            DRAG_STOPPED: 'CMS_DRAG_STOPPED',\n            /**\n             * @ngdoc property\n             * @name DRAG_STOPPED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when onDragOver is triggered.\n             **/\n            DRAG_OVER: 'CMS_DRAG_OVER',\n            /**\n             * @ngdoc property\n             * @name DRAG_STOPPED\n             * @propertyOf cmsDragAndDropServiceModule.object:DRAG_AND_DROP_EVENTS\n             *\n             * @description\n             * Name of event executed when onDragLeave is triggered.\n             **/\n            DRAG_LEAVE: 'CMS_DRAG_LEAVE'\n        })\n        /**\n         * @ngdoc service\n         * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService\n         *\n         * @description\n         * This service provides a rich drag and drop experience tailored for CMS operations.\n         */\n        .service('cmsDragAndDropService', function(\n            $q,\n            $window,\n            $translate,\n            $timeout,\n            yjQuery,\n            lodash,\n            dragAndDropService,\n            componentHandlerService,\n            systemEventService,\n            gatewayFactory,\n            slotRestrictionsService,\n            alertService,\n            assetsService,\n            browserService,\n            componentEditingFacade,\n            waitDialogService,\n            pageContentSlotsComponentsRestService,\n            DRAG_AND_DROP_EVENTS,\n            COMPONENT_REMOVED_EVENT,\n            CONTENT_SLOT_TYPE,\n            OVERLAY_RERENDERED_EVENT,\n            CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS,\n            SMARTEDIT_COMPONENT_PROCESS_STATUS,\n            CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS,\n            COMPONENT_IN_SLOT_STATUS,\n            domain\n        ) {\n            // Constants\n            var CMS_DRAG_AND_DROP_ID = 'se.cms.dragAndDrop';\n\n            var TARGET_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\n            var SOURCE_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type!='ContentSlot'] .movebutton\";\n            var MORE_MENU_SOURCE_SELECTOR = \".movebutton\";\n\n            var SLOT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\n            var COMPONENT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type!='ContentSlot']\";\n            var HINT_SELECTOR = '.overlayDropzone';\n\n            var CSS_CLASSES = {\n                UI_HELPER_OVERLAY: 'overlayDnd',\n                DROPZONE: 'overlayDropzone',\n                DROPZONE_FULL: 'overlayDropzone--full',\n                DROPZONE_TOP: 'overlayDropzone--top',\n                DROPZONE_BOTTOM: 'overlayDropzone--bottom',\n                DROPZONE_LEFT: 'overlayDropzone--left',\n                DROPZONE_RIGHT: 'overlayDropzone--right',\n                DROPZONE_HOVERED: 'overlayDropzone--hovered',\n                DROPZONE_MAY_BE_ALLOWED: 'overlayDropzone--mayBeAllowed',\n                OVERLAY_IN_DRAG_DROP: 'smarteditoverlay_dndRendering',\n                COMPONENT_DRAGGED: 'component_dragged',\n                COMPONENT_DRAGGED_HOVERED: 'component_dragged_hovered',\n                SLOTS_MARKED: 'slot-marked',\n                SLOT_ALLOWED: 'over-slot-enabled',\n                SLOT_NOT_ALLOWED: 'over-slot-disabled',\n                SLOT_MAY_BE_ALLOWED: 'over-slot-maybeenabled'\n            };\n\n            var DEFAULT_DRAG_IMG = '/images/contextualmenu_move_on.png';\n\n            // Variables\n            this._cachedSlots = {};\n            this._highlightedSlot = null;\n            this._highlightedComponent = null;\n            this._highlightedHint = null;\n            this._dragInfo = null;\n\n            this._overlayRenderedUnSubscribeFn = null;\n            this._componentRemovedUnSubscribeFn = null;\n\n            this._gateway = gatewayFactory.createGateway(\"cmsDragAndDrop\");\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#register\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method registers this drag and drop instance in SmartEdit.\n             */\n            this.register = function() {\n                dragAndDropService.register({\n                    id: CMS_DRAG_AND_DROP_ID,\n                    sourceSelector: [SOURCE_SELECTOR, MORE_MENU_SOURCE_SELECTOR], //the source selectors are DnD menus located both inside and outside the more options of the overlay\n                    targetSelector: TARGET_SELECTOR,\n                    startCallback: this.onStart,\n                    dragEnterCallback: this.onDragEnter,\n                    dragOverCallback: this.onDragOver,\n                    dropCallback: this.onDrop,\n                    outCallback: this.onDragLeave,\n                    stopCallback: this.onStop,\n                    enableScrolling: true,\n                    helper: this._getDragImageSrc\n                });\n            };\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#unregister\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method unregisters this drag and drop instance from SmartEdit.\n             */\n            this.unregister = function() {\n                dragAndDropService.unregister([CMS_DRAG_AND_DROP_ID]);\n\n                if (this._overlayRenderedUnSubscribeFn) {\n                    this._overlayRenderedUnSubscribeFn();\n                }\n                if (this._componentRemovedUnSubscribeFn) {\n                    this._componentRemovedUnSubscribeFn();\n                }\n            };\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#apply\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method applies this drag and drop instance in the current page. After this method is executed,\n             * the user can start a drag and drop operation.\n             */\n            this.apply = function() {\n                dragAndDropService.apply(CMS_DRAG_AND_DROP_ID);\n                this._addUIHelpers();\n\n                // Register a listener for every time the overlay is updated.\n                this._overlayRenderedUnSubscribeFn = systemEventService.subscribe(OVERLAY_RERENDERED_EVENT, this._onOverlayUpdate);\n                this._componentRemovedUnSubscribeFn = systemEventService.subscribe(COMPONENT_REMOVED_EVENT, this._onOverlayUpdate);\n\n                this._gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, function(eventId, data) {\n                    dragAndDropService.markDragStarted();\n                    this._initializeDragOperation(data);\n                }.bind(this));\n\n                this._gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STOPPED, function() {\n                    dragAndDropService.markDragStopped();\n                    this._cleanDragOperation();\n                }.bind(this));\n            };\n\n            /**\n             * @ngdoc method\n             * @name cmsDragAndDropServiceModule.service:cmsDragAndDropService#update\n             * @methodOf cmsDragAndDropServiceModule.service:cmsDragAndDropService\n             *\n             * @description\n             * This method updates this drag and drop instance in the current page. It is important to execute\n             * this method every time a draggable or droppable element is added or removed from the page DOM.\n             */\n            this.update = function() {\n                dragAndDropService.update(CMS_DRAG_AND_DROP_ID);\n\n                // Add UI helpers -> They identify the places where you can drop components.\n                this._addUIHelpers();\n\n                // Update cache elements AFTER adding UI Helpers\n                this._cacheElements();\n            };\n\n            // Other Event Handlers\n            this._onOverlayUpdate = function() {\n                this.update();\n                return $q.when();\n            }.bind(this);\n\n            // Drag and Drop Event Handlers\n            this.onStart = function(event) {\n                // Find element\n                var targetElm = this._getSelector(event.target);\n                // when the DnD icon is in the more option dropdown, the targetElm is a span and has no data-component-id. Here we get the closest element (i.e. <contextual-menu-item>)\n                if (!targetElm.attr('data-component-id')) {\n                    targetElm = yjQuery(targetElm).closest('[data-component-id]');\n                }\n                var component = targetElm.closest(COMPONENT_SELECTOR);\n                var slot = component.closest(SLOT_SELECTOR);\n\n                // Here if the component evaluated above exits that means the component has been located and we can fetch its attributes \n                // else it is not located as the DnD option is hidden inside the more option of the contextual menu in which case \n                // we find the component/slot info by accessing attributes of the DnD icon.\n                var componentId = component.length > 0 ? componentHandlerService.getId(component) : targetElm.attr('data-component-id');\n                var componentUuid = component.length > 0 ? componentHandlerService.getSlotOperationRelatedUuid(component) : targetElm.attr('data-component-uuid');\n                var componentType = component.length > 0 ? componentHandlerService.getType(component) : targetElm.attr('data-component-type');\n                var slotOperationRelatedId = component.length > 0 ? componentHandlerService.getSlotOperationRelatedId(component) : targetElm.attr('data-component-id');\n                var slotOperationRelatedType = component.length > 0 ? componentHandlerService.getSlotOperationRelatedType(component) : targetElm.attr('data-component-type');\n\n                var slotId = component.length > 0 ? componentHandlerService.getId(slot) : targetElm.attr('data-slot-id');\n                var slotUuid = component.length > 0 ? componentHandlerService.getId(slot) : targetElm.attr('data-slot-uuid');\n\n                var dragInfo = {\n                    componentId: componentId,\n                    componentUuid: componentUuid,\n                    componentType: componentType,\n                    slotUuid: slotUuid,\n                    slotId: slotId,\n                    slotOperationRelatedId: slotOperationRelatedId,\n                    slotOperationRelatedType: slotOperationRelatedType\n                };\n                component.addClass(CSS_CLASSES.COMPONENT_DRAGGED);\n                this._initializeDragOperation(dragInfo);\n                this._toggleKeepVisibleComponentAndSlot(true);\n            }.bind(this);\n\n            this.onDragEnter = function(event) {\n                this._highlightSlot(event);\n            }.bind(this);\n\n            this.onDragOver = function(event) {\n                this._highlightSlot(event).then(function() {\n                    if (!this._highlightedSlot || !this._highlightedSlot.isAllowed) {\n                        return;\n                    }\n\n                    var slotId = componentHandlerService.getId(this._highlightedSlot.original);\n\n                    // Check which component is highlighted\n                    if (this._highlightedHint && this._isMouseInRegion(event, this._highlightedHint)) {\n                        // If right hint is already highlighted don't do anything.\n                        return;\n                    } else if (this._highlightedHint) {\n                        // Hint is not longer hovered.\n                        this._clearHighlightedHint();\n                    }\n\n                    var cachedSlot = this._cachedSlots[slotId];\n                    if (cachedSlot.components.length > 0) {\n                        // Find the hovered component.\n                        if (!this._highlightedComponent || !this._isMouseInRegion(event, this._highlightedComponent)) {\n                            this._clearHighlightedComponent();\n\n                            lodash.forEach(cachedSlot.components, function(component) {\n                                if (this._isMouseInRegion(event, component)) {\n                                    this._highlightedComponent = component;\n                                    return false;\n                                }\n                            }.bind(this));\n                        }\n\n                        // Find the hint, if any, to highlight.\n                        if (this._highlightedComponent) {\n                            lodash.forEach(this._highlightedComponent.hints, function(hint) {\n                                if (this._isMouseInRegion(event, hint)) {\n                                    this._highlightedHint = hint;\n                                    return false;\n                                }\n                            }.bind(this));\n                        }\n                    }\n\n                    if (this._highlightedComponent && this._highlightedComponent.id === this._dragInfo.slotOperationRelatedId) {\n                        this._highlightedComponent.original.addClass(CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\n                    } else if (this._highlightedHint) {\n                        if (this._highlightedSlot.isAllowed) {\n                            this._highlightedHint.original.addClass(\n                                CSS_CLASSES.DROPZONE_HOVERED\n                            );\n                            if (this._highlightedSlot.mayBeAllowed) {\n                                this._highlightedHint.original.addClass(\n                                    CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED\n                                );\n                            }\n                        }\n                    }\n\n                }.bind(this));\n\n            }.bind(this);\n\n            this.onDrop = function(event) {\n                if (this._highlightedSlot) {\n                    var sourceSlotId = this._dragInfo.slotId;\n                    var targetSlotId = componentHandlerService.getId(this._highlightedSlot.original);\n                    var targetSlotUUId = componentHandlerService.getUuid(this._highlightedSlot.original);\n                    var sourceComponentId = this._dragInfo.componentId;\n                    // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\n                    var sourceSlotOperationRelatedId = this._dragInfo.slotOperationRelatedId || this._dragInfo.componentId;\n                    var componentType = this._dragInfo.slotOperationRelatedType || this._dragInfo.componentType;\n\n                    if (!this._highlightedSlot.isAllowed) {\n                        var translation = $translate.instant(\"se.drag.and.drop.not.valid.component.type\", {\n                            slotUID: targetSlotId,\n                            componentUID: sourceSlotOperationRelatedId\n                        });\n                        alertService.showDanger({\n                            message: translation\n                        });\n                        return;\n                    }\n                    if (this._highlightedHint || this._highlightedSlot.components.length === 0) {\n                        var position = (this._highlightedHint) ? this._highlightedHint.position : 0;\n                        var result;\n\n                        waitDialogService.showWaitModal();\n\n                        if (!sourceSlotId) {\n                            if (!sourceComponentId) {\n                                var slotInfo = {\n                                    targetSlotId: targetSlotId,\n                                    targetSlotUUId: targetSlotUUId\n                                };\n                                var catalogVersionUuid = componentHandlerService.getCatalogVersionUuid(this._highlightedSlot.original);\n                                result = componentEditingFacade.addNewComponentToSlot(slotInfo, catalogVersionUuid, componentType, position);\n                            } else {\n\n                                var dragInfo = {\n                                    componentId: sourceComponentId,\n                                    componentUuid: this._dragInfo.componentUuid,\n                                    componentType: componentType\n                                };\n                                var componentProperties = {\n                                    targetSlotId: targetSlotId,\n                                    dragInfo: dragInfo,\n                                    position: position\n                                };\n\n                                result = this._dragInfo.cloneOnDrop ? componentEditingFacade.cloneExistingComponentToSlot(componentProperties) : componentEditingFacade.addExistingComponentToSlot(targetSlotId, dragInfo, position);\n                            }\n                        } else {\n                            if (sourceSlotId === targetSlotId) {\n                                var currentComponentPos = this._getComponentPositionFromCachedSlot(sourceSlotId, sourceComponentId);\n                                if (currentComponentPos < position) {\n                                    // The current component will be removed from its current position, thus the target\n                                    // position needs to take this into account. \n                                    position--;\n                                }\n\n                            }\n                            result = componentEditingFacade.moveComponent(sourceSlotId, targetSlotId, sourceSlotOperationRelatedId, position);\n                        }\n\n                        result.then(function() {\n                            this._scrollToModifiedSlot(targetSlotId);\n                        }.bind(this), function() {\n                            this.onStop(event);\n                        }.bind(this)).finally(function() {\n                            waitDialogService.hideWaitModal();\n                        });\n                    }\n                }\n            }.bind(this);\n\n            this._getComponentPositionFromCachedSlot = function(slotId, componentId) {\n                var cachedSlot = this._cachedSlots[slotId];\n                var componentsInCachedSlot =\n                    cachedSlot && cachedSlot.components ? cachedSlot.components : [];\n                var cachedComponent = componentsInCachedSlot.find(function(component) {\n                    return componentHandlerService.getId(component.original) === componentId;\n                });\n                var currentComponentPos = cachedComponent ?\n                    cachedComponent.position :\n                    componentHandlerService.getComponentPositionInSlot(slotId, componentId);\n                return currentComponentPos;\n            }.bind(this);\n\n            this.onDragLeave = function(event) {\n                if (this._highlightedSlot) {\n                    var slotId = componentHandlerService.getId(this._highlightedSlot.original);\n                    var cachedSlot = this._cachedSlots[slotId];\n\n                    if (!this._isMouseInRegion(event, cachedSlot)) {\n                        this._clearHighlightedSlot();\n                    }\n\n                }\n            }.bind(this);\n\n            this.onStop = function(event) {\n                var component = this._getSelector(event.target).closest(COMPONENT_SELECTOR);\n                this._toggleKeepVisibleComponentAndSlot(false);\n                this._cleanDragOperation(component);\n                systemEventService.publish(CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS.RESTART_PROCESS);\n            }.bind(this);\n\n            // Helpers\n            /**\n             * This function returns the source of the image used as drag image. Currently, the \n             * image is only returned for Safari; all the other browsers display default images \n             * properly. \n             */\n            this._getDragImageSrc = function() {\n                var imagePath = '';\n                if (browserService.isSafari()) {\n                    imagePath = assetsService.getAssetsRoot() + DEFAULT_DRAG_IMG;\n                }\n                return domain + imagePath;\n            };\n\n\n            this._initializeDragOperation = function(dragInfo) {\n                this._dragInfo = dragInfo;\n                this._cacheElements();\n\n                // Prepare UI\n                var overlay = componentHandlerService.getOverlay();\n                overlay.addClass(CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\n\n                // Send an event to signal that the drag operation is started. Other pieces of SE, like contextual menus\n                // need to be aware.\n                systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STARTED);\n            };\n\n            this._cleanDragOperation = function(draggedComponent) {\n                this._clearHighlightedSlot();\n                if (draggedComponent) {\n                    draggedComponent.removeClass(CSS_CLASSES.COMPONENT_DRAGGED);\n                }\n\n                var overlay = componentHandlerService.getOverlay();\n                overlay.removeClass(CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\n                systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STOPPED);\n\n                this._dragInfo = null;\n                this._cachedSlots = {};\n                this._highlightedSlot = null;\n            };\n\n            this._highlightSlot = function(event) {\n                var slot = yjQuery(event.target).closest(SLOT_SELECTOR);\n                var slotId = componentHandlerService.getId(slot);\n\n                var oldSlotId;\n                if (this._highlightedSlot) {\n                    oldSlotId = componentHandlerService.getId(this._highlightedSlot.original);\n\n                    if (oldSlotId !== slotId) {\n                        this._clearHighlightedSlot();\n                    }\n                }\n\n                if (!this._highlightedSlot || this._highlightedSlot.isAllowed === undefined) {\n                    this._highlightedSlot = this._cachedSlots[slotId];\n\n                    var _dragInfo = lodash.cloneDeep(this._dragInfo);\n                    // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\n                    _dragInfo.componentId = this._dragInfo.slotOperationRelatedId || this._dragInfo.componentId;\n                    _dragInfo.componentType = this._dragInfo.slotOperationRelatedType || this._dragInfo.componentType;\n                    if (_dragInfo.cloneOnDrop) {\n                        delete _dragInfo.componentId;\n                    }\n\n                    return slotRestrictionsService.isComponentAllowedInSlot(this._highlightedSlot, _dragInfo).then(function(isComponentAllowed) {\n                        slotRestrictionsService.isSlotEditable(slotId).then(function(slotIsEditable) {\n                            // The highlighted slot might have changed while waiting for the promise to be resolved.\n                            if (this._highlightedSlot && this._highlightedSlot.id === slotId) {\n                                this._highlightedSlot.isAllowed = (isComponentAllowed && slotIsEditable) || this._dragInfo.slotId === slotId;\n\n                                var isAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.ALLOWED && slotIsEditable;\n                                var mayBeAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED && slotIsEditable;\n\n                                /* Basically the component could be allowed to drop in the slot if the isComponentAllowed status is either ALLOWED or MAYBEALLOWED.\n                                 * But in order to differentiate between ALLOWED and MAYBEALLOWED, we store it in highlightedSlot.isAllowed and highlightedSlot.mayBeAllowed respectively.\n                                 */\n                                this._highlightedSlot.isAllowed = isAllowed || mayBeAllowed;\n                                this._highlightedSlot.mayBeAllowed = mayBeAllowed;\n\n                                if (this._highlightedSlot.isAllowed) {\n                                    slot.addClass(CSS_CLASSES.SLOT_ALLOWED);\n                                    if (mayBeAllowed) {\n                                        slot.addClass(CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\n                                    }\n                                } else {\n                                    slot.addClass(CSS_CLASSES.SLOT_NOT_ALLOWED);\n                                }\n\n                                if (event.type === \"dragenter\" && (!oldSlotId || oldSlotId !== slotId)) {\n                                    if (this._highlightedSlot && this._highlightedSlot.id === slotId) {\n                                        systemEventService.publish(slotId + '_SHOW_SLOT_MENU');\n                                        systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_OVER, slotId); // can be used to perform any actions on encountering a drag over event.\n                                    }\n                                }\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                }\n\n                return $q.when();\n            };\n\n            this._addUIHelpers = function() {\n                var overlay = componentHandlerService.getOverlay();\n\n                // First remove all dropzones.\n                overlay.find('.' + CSS_CLASSES.UI_HELPER_OVERLAY).remove();\n\n                overlay.find(SLOT_SELECTOR).each(function() {\n                    var slot = yjQuery(this);\n                    var slotHeight = slot[0].offsetHeight;\n                    var slotWidth = slot[0].offsetWidth;\n\n                    var components = slot.find(COMPONENT_SELECTOR);\n\n                    if (components.length === 0) {\n                        var uiHelperOverlay = yjQuery(\"<div></div>\");\n                        uiHelperOverlay.addClass(CSS_CLASSES.UI_HELPER_OVERLAY);\n\n                        var uiHelper = yjQuery(\"<div></div>\");\n                        uiHelper.addClass(CSS_CLASSES.DROPZONE);\n                        uiHelper.addClass(CSS_CLASSES.DROPZONE_FULL);\n\n                        uiHelperOverlay.height(slotHeight);\n                        uiHelperOverlay.width(slotWidth);\n\n                        uiHelperOverlay.append(uiHelper);\n                        slot.append(uiHelperOverlay);\n                    } else {\n                        components.each(function() {\n                            var component = yjQuery(this);\n                            var componentHeight = component[0].offsetHeight;\n                            var componentWidth = component[0].offsetWidth;\n\n                            var uiHelperOverlay = yjQuery(\"<div></div>\");\n                            uiHelperOverlay.addClass(CSS_CLASSES.UI_HELPER_OVERLAY);\n\n                            uiHelperOverlay.height(componentHeight);\n                            uiHelperOverlay.width(componentWidth);\n\n                            var firstHelper = yjQuery('<div></div>');\n                            var secondHelper = yjQuery('<div></div>');\n\n                            firstHelper.addClass(CSS_CLASSES.DROPZONE);\n                            secondHelper.addClass(CSS_CLASSES.DROPZONE);\n\n                            if (componentWidth === slotWidth) {\n                                firstHelper.addClass(CSS_CLASSES.DROPZONE_TOP);\n                                secondHelper.addClass(CSS_CLASSES.DROPZONE_BOTTOM);\n                            } else {\n                                firstHelper.addClass(CSS_CLASSES.DROPZONE_LEFT);\n                                secondHelper.addClass(CSS_CLASSES.DROPZONE_RIGHT);\n                            }\n\n                            uiHelperOverlay.append(firstHelper);\n                            uiHelperOverlay.append(secondHelper);\n\n                            component.append(uiHelperOverlay);\n                        });\n                    }\n                });\n            };\n\n            this._cacheElements = function() {\n                var overlay = componentHandlerService.getOverlay();\n                if (!overlay) {\n                    return;\n                }\n\n                var currentService = this;\n                var scrollY = this._getWindowScrolling();\n\n                overlay.find(SLOT_SELECTOR).each(function() {\n                    var slot = yjQuery(this);\n                    var slotId = componentHandlerService.getId(slot);\n                    var slotUuid = componentHandlerService.getUuid(slot);\n\n                    // Fetch all components (visible or not) in each slot to get proper position values.\n                    // The componentHandlerService.getComponentPositionInSlot method is not used here, because it's only based on visible components in the DOM.\n                    pageContentSlotsComponentsRestService.getComponentsForSlot(slotId).then(function(componentsForSlot) {\n                        var cachedSlot = {\n                            id: slotId,\n                            uuid: slotUuid,\n                            original: slot,\n                            components: [],\n                            rect: currentService._getElementRects(slot, scrollY)\n                        };\n\n                        var components = slot.children(COMPONENT_SELECTOR);\n                        if (components.length === 0) {\n                            var hint = slot.find(HINT_SELECTOR);\n                            cachedSlot.hint = (hint.length > 0) ? {\n                                original: hint,\n                                rect: currentService._getElementRects(hint, scrollY)\n                            } : null;\n                        } else {\n\n                            components.each(function(index) {\n                                var component = yjQuery(this);\n                                var positionInSlot = componentsForSlot.findIndex(function(componentInSlot) {\n                                    return (\n                                        componentInSlot.uuid ===\n                                        componentHandlerService.getUuid(component)\n                                    );\n                                });\n                                if (positionInSlot === -1) {\n                                    positionInSlot = index;\n                                }\n                                var cachedComponent = {\n                                    id: componentHandlerService.getSlotOperationRelatedId(component),\n                                    type: componentHandlerService.getSlotOperationRelatedType(component),\n                                    original: component,\n                                    position: positionInSlot,\n                                    hints: [],\n                                    rect: currentService._getElementRects(component, scrollY)\n                                };\n\n                                var positionInComponent = positionInSlot++;\n                                component.find(HINT_SELECTOR).each(function() {\n                                    var hint = yjQuery(this);\n                                    var cachedHint = {\n                                        original: hint,\n                                        position: positionInComponent++,\n                                        rect: currentService._getElementRects(hint, scrollY)\n                                    };\n\n                                    cachedComponent.hints.push(cachedHint);\n                                });\n\n                                cachedSlot.components.push(cachedComponent);\n                            });\n                        }\n\n                        currentService._cachedSlots[cachedSlot.id] = cachedSlot;\n                    });\n\n                });\n            };\n\n            this._clearHighlightedHint = function() {\n                if (this._highlightedHint) {\n                    this._highlightedHint.original.removeClass(CSS_CLASSES.DROPZONE_HOVERED);\n                    this._highlightedHint.original.removeClass(CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED);\n                    this._highlightedHint = null;\n                }\n            };\n\n            this._clearHighlightedComponent = function() {\n                this._clearHighlightedHint();\n                if (this._highlightedComponent) {\n                    this._highlightedComponent.original.removeClass(CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\n                    this._highlightedComponent = null;\n                }\n            };\n\n            this._clearHighlightedSlot = function() {\n                this._clearHighlightedComponent();\n\n                if (this._highlightedSlot) {\n                    this._highlightedSlot.original.removeClass(CSS_CLASSES.SLOT_ALLOWED);\n                    this._highlightedSlot.original.removeClass(CSS_CLASSES.SLOT_NOT_ALLOWED);\n                    this._highlightedSlot.original.removeClass(CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\n                    systemEventService.publish('HIDE_SLOT_MENU');\n                    systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_LEAVE); // can be used to perform any actions on encountering a drag leave event.\n                }\n\n                this._highlightedSlot = null;\n            };\n\n            this._isMouseInRegion = function(event, element) {\n                var boundingRect = element.rect;\n\n                return (event.pageX >= boundingRect.left && event.pageX <= boundingRect.right && event.pageY >= boundingRect.top && event.pageY <= boundingRect.bottom);\n            };\n\n            this._getElementRects = function(element, scrollY) {\n                var baseRect = element[0].getBoundingClientRect();\n                var rect = {\n                    left: baseRect.left,\n                    right: baseRect.right,\n                    bottom: baseRect.bottom + scrollY,\n                    top: baseRect.top + scrollY\n                };\n\n                return rect;\n            };\n\n            this._getWindowScrolling = function() {\n                return ($window.scrollY || $window.pageYOffset);\n            };\n\n            this._scrollToModifiedSlot = function(componentId) {\n                var component = componentHandlerService.getComponentInOverlay(componentId, CONTENT_SLOT_TYPE);\n                if (component && component.length > 0) {\n                    component[0].scrollIntoView();\n                }\n            };\n\n            this._getSelector = function(selector) {\n                return yjQuery(selector);\n            };\n\n            /**\n             * when a PROCESS_COMPONENTS is occuring, it could remove the currently dragged component if this one is not in the viewport.\n             * To avoid having the dragged component and it's slot removed we mark then as \"KEEP_VISIBLE\" when the drag and drop start.\n             * On drag end, an event is sent to call a RESTART_PROCESS to add or remove the components according to their viewport visibility and the component and slot are marked as \"PROCESS\".\n             * Using yjQuery.each() here because of MiniCart component (among other slots/compoents) that have multiple occurences in DOM.\n             */\n            this._toggleKeepVisibleComponentAndSlot = function(keepVisible) {\n                if (this._dragInfo) {\n                    var status = keepVisible ? CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.KEEP_VISIBLE : CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.PROCESS;\n                    yjQuery.each(componentHandlerService.getComponentUnderSlot(this._dragInfo.componentId, this._dragInfo.componentType, this._dragInfo.slotId), function(idx, element) {\n                        element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status;\n                    });\n                    yjQuery.each(componentHandlerService.getComponent(this._dragInfo.slotId, CONTENT_SLOT_TYPE), function(idx, element) {\n                        element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status;\n                    });\n                }\n            };\n        });\n})();\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name componentEditingFacadeModule\n * @description\n * # The componentEditingFacadeModule\n *\n * The componentEditingFacadeModule contains a service with methods that allow adding or removing components in the page.\n *\n */\nangular.module('componentEditingFacadeModule', [\n        'alertServiceModule',\n        'cmsSmarteditServicesModule',\n        'componentVisibilityAlertServiceModule',\n        'cmsSmarteditServicesModule',\n        'renderServiceModule',\n        'slotVisibilityServiceModule',\n        'translationServiceModule',\n        'functionsModule'\n    ])\n    .constant('COMPONENT_CREATED_EVENT', 'COMPONENT_CREATED_EVENT')\n    .constant('COMPONENT_UPDATED_EVENT', 'COMPONENT_UPDATED_EVENT')\n    /**\n     * @ngdoc service\n     * @name componentEditingFacadeModule.service:componentEditingFacade\n     *\n     * @description\n     * This service provides methods that allow adding or removing components in the page.\n     */\n    .service('componentEditingFacade', function($log, $q, $translate, copy, componentService, systemEventService, crossFrameEventService, pageInfoService, restServiceFactory, editorModalService, renderService, alertService, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI, componentVisibilityAlertService, slotVisibilityService, sharedDataService, COMPONENT_CREATED_EVENT, COMPONENT_UPDATED_EVENT, EVENT_SMARTEDIT_COMPONENT_UPDATED) {\n\n        var _contentSlotComponentsRestService;\n\n        function _generateAndAlertSuccessMessage(sourceComponentId, targetSlotId) {\n            alertService.showSuccess({\n                message: \"se.cms.draganddrop.success\",\n                messagePlaceholders: {\n                    sourceComponentId: sourceComponentId,\n                    targetSlotId: targetSlotId\n                }\n            });\n        }\n\n        function _generateAndAlertErrorMessage(sourceComponentId, targetSlotId, requestResponse, alertConf) {\n            if (requestResponse && requestResponse.data && requestResponse.data.errors && requestResponse.data.errors.length > 0) {\n                alertService.showDanger({\n                    message: \"se.cms.draganddrop.error\",\n                    messagePlaceholders: {\n                        sourceComponentId: sourceComponentId,\n                        targetSlotId: targetSlotId,\n                        detailedError: requestResponse.data.errors[0].message\n                    }\n                });\n            } else if (alertConf) {\n                alertService.showDanger(alertConf);\n            }\n        }\n\n        function _renderSlots(slots, sourceComponentId, targetSlotId, showSuccess) {\n            return renderService.renderSlots(slots).then(function() {\n                return slotVisibilityService.reloadSlotsInfo().then(function() {\n                    if (showSuccess) {\n                        _generateAndAlertSuccessMessage(sourceComponentId, targetSlotId);\n                    }\n                    return $q.when();\n                }, function(e) {\n                    $log.error('componentEditingFacadeModule._renderSlots::slotVisibilityService.reloadSlotsInfo');\n                    $log.error(e);\n                    return $q.reject(e);\n                });\n            }, function(e) {\n                $log.error('componentEditingFacadeModule._renderSlots::renderService.renderSlots - targetSlotId:', targetSlotId);\n                $log.error(e);\n                _generateAndAlertErrorMessage(sourceComponentId, targetSlotId, e);\n                return $q.reject(e);\n            });\n        }\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#addNewComponentToSlot\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods adds a new component to the slot and opens a component modal to edit its properties.\n         *\n         * @param {Object} slotInfo The target slot for the new component\n         * @param {Object} slotInfo.targetSlotId The Uid of the slot where to drop the new component.\n         * @param {Object} slotInfo.targetSlotUUId The UUid of the slot where to drop the new component.\n         * @param {String} catalogVersionUuid The catalog version on which to create the new component\n         * @param {String} componentType The type of the new component to add.\n         * @param {Number} position The position in the slot where to add the new component.\n         *\n         */\n        this.addNewComponentToSlot = function(slotInfo, catalogVersionUuid, componentType, position) {\n            var componentAttributes = {\n                smarteditComponentType: componentType,\n                catalogVersionUuid: catalogVersionUuid\n            };\n            return editorModalService.open(componentAttributes, slotInfo.targetSlotUUId, position).then(function(response) {\n                componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                    itemId: response.uuid,\n                    itemType: response.itemtype,\n                    catalogVersion: response.catalogVersion,\n                    restricted: response.restricted,\n                    slotId: slotInfo.targetSlotId,\n                    visible: response.visible\n                });\n\n                crossFrameEventService.publish(COMPONENT_CREATED_EVENT, response);\n                return _renderSlots([slotInfo.targetSlotId], response.uid, slotInfo.targetSlotId, true);\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#addExistingComponentToSlot\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods adds an existing component to the slot and display an Alert whenever the component is either hidden or restricted.\n         *\n         * @param {String} targetSlotId The ID of the slot where to drop the component.\n         * @param {Object} dragInfo The dragInfo object containing the componentId, componentUuid and componentType.\n         * @param {Number} position The position in the slot where to add the component.\n         *\n         */\n        this.addExistingComponentToSlot = function(targetSlotId, dragInfo, position) {\n            return pageInfoService.getPageUID().then(function(pageId) {\n                return componentService.addExistingComponent(pageId, dragInfo.componentId, targetSlotId, position).then(\n                    function() {\n                        return componentService.loadComponentItem(dragInfo.componentUuid).then(function(item) {\n                            componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                                itemId: dragInfo.componentUuid,\n                                itemType: dragInfo.componentType,\n                                catalogVersion: item.catalogVersion,\n                                restricted: item.restricted,\n                                slotId: targetSlotId,\n                                visible: item.visible\n                            });\n\n                            // 1. First update the cache. \n                            systemEventService.publish(COMPONENT_UPDATED_EVENT, item);\n\n                            // 2. Then replay decorators (via EVENT_SMARTEDIT_COMPONENT_UPDATED). \n                            // This is important because there might be existing instances of the component in the page that need to \n                            // be updated. For example, if the component was not shared, it would not show the SharedComponent contextual button.\n                            // However, if a user adds another instance into the page then the component becomes shared. Both instances of the \n                            // component must show that the component is shared now. Thus, the first instance needs to be updated too. \n                            crossFrameEventService.publish(EVENT_SMARTEDIT_COMPONENT_UPDATED, {\n                                componentId: dragInfo.componentId,\n                                componentType: dragInfo.componentType,\n                                componentUuid: dragInfo.componentUuid,\n                                requiresReplayingDecorators: true\n                            });\n\n                            return _renderSlots(targetSlotId, dragInfo.componentId, targetSlotId, true);\n                        }, function(response) {\n                            _generateAndAlertErrorMessage(dragInfo.componentId, targetSlotId, response);\n                            return $q.reject();\n                        });\n                    },\n                    function(response) {\n                        _generateAndAlertErrorMessage(dragInfo.componentId, targetSlotId, response);\n                        return $q.reject();\n                    }\n                );\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#cloneExistingComponentToSlot\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods clones an existing component to the slot by opening a component modal to edit its properties.\n         *\n         * @param {Object} componentProperties The properties of the component required to create a clone\n         * @param {String} componentProperties.targetSlotId The ID of the slot where to drop the component.\n         * @param {Object} componentProperties.dragInfo The dragInfo object containing the componentId, componentUuid and componentType.\n         * @param {Number} componentProperties.position The position in the slot where to add the component.\n         *\n         */\n        this.cloneExistingComponentToSlot = function(componentProperties) {\n            return componentService.loadComponentItem(componentProperties.dragInfo.componentUuid).then(function(_component) {\n                return sharedDataService.get('experience').then(function(experience) {\n                    var component = copy(_component);\n                    // while cloning an existing components, remove some parameters, reset catalogVersion to the version of the page.\n                    // if cloning an existing component, prefix na me and drop restrictions - doing this here will make generic editor dirty and enable save by default\n                    component.componentUuid = component.uuid;\n                    component.cloneComponent = true;\n                    component.catalogVersion = experience.pageContext.catalogVersionUuid;\n                    component.name = $translate.instant('se.cms.component.name.clone.of.prefix') + ' ' + component.name;\n\n                    delete component.uuid;\n                    delete component.uid;\n                    delete component.slots;\n                    delete component.restrictions;\n                    delete component.creationtime;\n                    delete component.modifiedtime;\n\n                    var componentAttributes = {\n                        smarteditComponentType: componentProperties.dragInfo.componentType,\n                        catalogVersionUuid: experience.pageContext.catalogVersionUuid,\n                        content: copy(component),\n                        initialDirty: true\n                    };\n                    return editorModalService.open(componentAttributes, componentProperties.targetSlotId, componentProperties.position).then(function(item) {\n                        componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                            itemId: item.uuid,\n                            itemType: item.itemtype,\n                            catalogVersion: item.catalogVersion,\n                            restricted: item.restricted,\n                            slotId: componentProperties.targetSlotId,\n                            visible: item.visible\n                        });\n\n                        crossFrameEventService.publish(COMPONENT_CREATED_EVENT, item);\n                        return _renderSlots(componentProperties.targetSlotId, item.uid, componentProperties.targetSlotId, true);\n                    });\n                });\n            }, function(response) {\n                _generateAndAlertErrorMessage(componentProperties.dragInfo.componentId, componentProperties.targetSlotId, response);\n                return $q.reject();\n            });\n        };\n\n\n        /**\n         * @ngdoc method\n         * @name componentEditingFacadeModule.service:componentEditingFacade#moveComponent\n         * @methodOf componentEditingFacadeModule.service:componentEditingFacade\n         *\n         * @description\n         * This methods moves a component from two slots in a page.\n         *\n         * @param {String} sourceSlotId The ID of the slot where the component is initially located.\n         * @param {String} targetSlotId The ID of the slot where to drop the component.\n         * @param {String} componentId The ID of the component to add into the slot.\n         * @param {Number} position The position in the slot where to add the component.\n         *\n         */\n        this.moveComponent = function(sourceSlotId, targetSlotId, componentId, position) {\n            var contentSlotComponentsResourceLocation = PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI + '/pages/:pageId/contentslots/:currentSlotId/components/:componentId';\n            _contentSlotComponentsRestService = _contentSlotComponentsRestService || restServiceFactory.get(contentSlotComponentsResourceLocation, 'componentId');\n\n            return pageInfoService.getPageUID().then(function(pageId) {\n                return _contentSlotComponentsRestService.update({\n                    pageId: pageId,\n                    currentSlotId: sourceSlotId,\n                    componentId: componentId,\n                    slotId: targetSlotId,\n                    position: position\n                }).then(\n                    function() {\n                        return _renderSlots([sourceSlotId, targetSlotId], componentId, targetSlotId);\n                    },\n                    function(response) {\n                        _generateAndAlertErrorMessage(componentId, targetSlotId, response, {\n                            message: \"se.cms.draganddrop.move.failed\",\n                            messagePlaceholders: {\n                                slotID: targetSlotId,\n                                componentID: componentId\n                            }\n                        });\n                        return $q.reject();\n                    }\n                );\n            });\n        };\n\n    });\n","/*\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotRestrictionsServiceModule\n * @description\n * # The slotRestrictionsServiceModule\n *\n * The slotRestrictionsServiceModule contains a service that caches and returns the restrictions of a slot in a page. This restrictions determine\n * whether a component of a certain type is allowed or forbidden in a particular slot.\n *\n */\n/* jshint undef:false */\n\nangular\n    .module('slotRestrictionsServiceModule', [\n        'yLoDashModule',\n        'slotSharedServiceModule',\n        'functionsModule',\n        'cmsSmarteditServicesModule'\n    ])\n    .constant('CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT', 100)\n    .constant('COMPONENT_IN_SLOT_STATUS', {\n        ALLOWED: 'allowed',\n        DISALLOWED: 'disallowed',\n        MAYBEALLOWED: 'mayBeAllowed'\n    })\n    /**\n     * @ngdoc service\n     * @name slotRestrictionsServiceModule.service:slotRestrictionsService\n     *\n     * @description\n     * This service provides methods that cache and return the restrictions of a slot in a page. This restrictions determine\n     * whether a component of a certain type is allowed or forbidden in a particular slot.\n     */\n    .service('slotRestrictionsService', function(\n        $log,\n        lodash,\n        isBlank,\n        yjQuery,\n        gatewayProxy,\n        crossFrameEventService,\n        EVENTS,\n        componentHandlerService,\n        pageInfoService,\n        slotSharedService,\n        restServiceFactory,\n        pageContentSlotsComponentsRestService,\n        typePermissionsRestService,\n        CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI,\n        CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT,\n        COMPONENT_IN_SLOT_STATUS,\n        CONTENT_SLOT_TYPE\n    ) {\n        var _slotRestrictions = {};\n        var _currentPageId = null;\n        var _slotsRestrictionsRestService;\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#getAllComponentTypesSupportedOnPage\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         * @deprecated since 2005\n         * @description\n         * This methods retrieves the list of component types droppable in at least one of the slots of the current page\n         * @returns {Promise} A promise containing an array with the component types droppable on the current page\n         */\n        this.getAllComponentTypesSupportedOnPage = function() {\n            var slots = yjQuery(componentHandlerService.getAllSlotsSelector());\n            var slotIds = Array.prototype.slice.call(\n                slots.map(function() {\n                    return componentHandlerService.getId(yjQuery(this));\n                })\n            );\n\n            return Promise.all(\n                slotIds.map(\n                    function(slotId) {\n                        return this.getSlotRestrictions(slotId);\n                    }.bind(this)\n                )\n            ).then(\n                function(arrayOfSlotRestrictions) {\n                    return lodash.flatten(arrayOfSlotRestrictions);\n                },\n                function(error) {\n                    $log.info(error);\n                }\n            );\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#getSlotRestrictions\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         * @description\n         * This methods retrieves the list of restrictions applied to the slot identified by the provided ID.\n         *\n         * @param {String} slotId The ID of the slot whose restrictions to retrieve.\n         * @returns {Promise} A promise containing an array with the restrictions applied to the slot.\n         */\n        this.getSlotRestrictions = function(slotId) {\n            return this._getPageUID(_currentPageId).then(\n                function(pageId) {\n                    _currentPageId = pageId;\n                    var restrictionId = this._getEntryId(_currentPageId, slotId);\n                    if (_slotRestrictions[restrictionId]) {\n                        return Promise.resolve(_slotRestrictions[restrictionId]);\n                    } else if (this._isExternalSlot(slotId)) {\n                        _slotRestrictions[restrictionId] = [];\n                        return Promise.resolve([]);\n                    }\n                    return Promise.resolve();\n                }.bind(this)\n            );\n        };\n\n        this._cacheSlotsRestrictions = function() {\n            var originalSlotIds = componentHandlerService.getAllSlotUids() || [];\n            originalSlotIds = originalSlotIds.filter(\n                function(slotId) {\n                    return !this._isExternalSlot(slotId, CONTENT_SLOT_TYPE);\n                }.bind(this)\n            );\n            var uniqueSlotIds = lodash.uniq(originalSlotIds);\n            var chunks = lodash.chunk(uniqueSlotIds, CONTENT_SLOTS_TYPE_RESTRICTION_FETCH_LIMIT);\n            return this._recursiveFetchSlotsRestrictions(chunks, 0);\n        };\n\n        // Recursively fetch slots restrictions by the number of chunks of slotIds split by fetch limit\n        this._recursiveFetchSlotsRestrictions = function(slotIdsByChunks, chunkIndex) {\n            if (chunkIndex === slotIdsByChunks.length) {\n                return Promise.resolve();\n            }\n            return this._fetchSlotsRestrictions(slotIdsByChunks[chunkIndex]).then(\n                function() {\n                    return this._recursiveFetchSlotsRestrictions(slotIdsByChunks, chunkIndex + 1);\n                }.bind(this)\n            );\n        };\n\n        // Fetch slot restriction and cache them in-memory\n        this._fetchSlotsRestrictions = function(slotIds) {\n            return this._getPageUID(_currentPageId).then(\n                function(pageId) {\n                    _currentPageId = pageId;\n\n                    _slotsRestrictionsRestService =\n                        _slotsRestrictionsRestService ||\n                        restServiceFactory.get(\n                            CONTENT_SLOTS_TYPE_RESTRICTION_RESOURCE_URI,\n                            _currentPageId\n                        );\n\n                    return _slotsRestrictionsRestService\n                        ._saveAndGetArray({\n                            slotIds: slotIds,\n                            pageUid: _currentPageId\n                        })\n                        .then(\n                            function(response) {\n                                var contentSlots = response || [];\n                                contentSlots.forEach(\n                                    function(slot) {\n                                        var restrictionId = this._getEntryId(\n                                            _currentPageId,\n                                            slot.contentSlotUid\n                                        );\n                                        _slotRestrictions[restrictionId] = slot.validComponentTypes;\n                                    }.bind(this)\n                                );\n                                return Promise.resolve();\n                            }.bind(this),\n                            function(error) {\n                                $log.info(error);\n                                return Promise.reject();\n                            }\n                        );\n                }.bind(this)\n            );\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#isComponentAllowedInSlot\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         *\n         * @description\n         * This methods determines whether a component of the provided type is allowed in the slot.\n         *\n         * @param {Object} slot the slot for which to verify if it allows a component of the provided type.\n         * @param {String} slot.id The ID of the slot.\n         * @param {Array} slot.components the list of components contained in the slot, they must contain an \"id\" property.\n         * @param {Object} dragInfo contains the dragged object information\n         * @param {String} dragInfo.componentType The smartedit type of the component being checked.\n         * @param {String} dragInfo.componentId The smartedit id of the component being checked.\n         * @param {String} dragInfo.slotId The smartedit id of the slot from which the component originates\n         * @param {String} dragInfo.cloneOnDrop The boolean that determines if the component should be cloned or not\n         * @returns {Promise} A promise containing COMPONENT_IN_SLOT_STATUS (ALLOWED, DISALLOWED, MAYBEALLOWED) string that determines whether a component of the provided type is allowed in the slot.\n         */\n        this.isComponentAllowedInSlot = function(slot, dragInfo) {\n            return this.getSlotRestrictions(slot.id).then(function(currentSlotRestrictions) {\n                return pageContentSlotsComponentsRestService\n                    .getComponentsForSlot(slot.id)\n                    .then(function(componentsForSlot) {\n                        var isComponentIdAllowed =\n                            slot.id === dragInfo.slotId ||\n                            !componentsForSlot.some(function(component) {\n                                return component.uid === dragInfo.componentId;\n                            });\n\n                        if (isComponentIdAllowed) {\n                            if (currentSlotRestrictions) {\n                                return lodash.includes(\n                                        currentSlotRestrictions,\n                                        dragInfo.componentType\n                                    ) ?\n                                    Promise.resolve(COMPONENT_IN_SLOT_STATUS.ALLOWED) :\n                                    Promise.resolve(COMPONENT_IN_SLOT_STATUS.DISALLOWED);\n                            } else {\n                                return Promise.resolve(COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED);\n                            }\n                        }\n                        return Promise.resolve(COMPONENT_IN_SLOT_STATUS.DISALLOWED);\n                    });\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotRestrictionsServiceModule.service:slotRestrictionsService#isSlotEditable\n         * @methodOf slotRestrictionsServiceModule.service:slotRestrictionsService\n         *\n         * @description\n         * This method determines whether slot is editable or not.\n         *\n         * @param {String} slotId The ID of the slot.\n         *\n         * @returns {Promise} A promise containing a boolean flag that shows whether if the slot is editable or not.\n         */\n        this.isSlotEditable = function(slotId) {\n            return typePermissionsRestService.hasUpdatePermissionForTypes([CONTENT_SLOT_TYPE]).then(\n                function(slotPermissions) {\n                    return slotSharedService.isSlotShared(slotId).then(\n                        function(isShared) {\n                            var result = slotPermissions[CONTENT_SLOT_TYPE];\n                            if (isShared) {\n                                var isExternalSlot = this._isExternalSlot(slotId);\n                                result =\n                                    result &&\n                                    !isExternalSlot &&\n                                    !slotSharedService.areSharedSlotsDisabled();\n                            }\n\n                            return result;\n                        }.bind(this)\n                    );\n                }.bind(this)\n            );\n        };\n\n        this._emptyCache = function() {\n            _slotRestrictions = {};\n            _currentPageId = null;\n        };\n\n        this._getEntryId = function(pageId, slotId) {\n            return pageId + '_' + slotId;\n        };\n\n        this._isExternalSlot = function(slotId) {\n            return componentHandlerService.isExternalComponent(slotId, CONTENT_SLOT_TYPE);\n        };\n\n        this._getPageUID = function(pageUID) {\n            return !isBlank(pageUID) ? Promise.resolve(pageUID) : pageInfoService.getPageUID();\n        };\n\n        crossFrameEventService.subscribe(\n            EVENTS.PAGE_CHANGE,\n            function() {\n                this._emptyCache();\n                this._cacheSlotsRestrictions();\n            }.bind(this)\n        );\n\n        gatewayProxy.initForService(\n            this,\n            ['getAllComponentTypesSupportedOnPage', 'getSlotRestrictions'],\n            'SLOT_RESTRICTIONS'\n        );\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name editorEnablerServiceModule\n * @description\n * # The editorEnablerServiceModule\n *\n * The editor enabler service module provides a service that allows enabling the Edit Component contextual menu item,\n * providing a SmartEdit CMS admin the ability to edit various properties of the given component.\n */\nangular.module(\"editorEnablerServiceModule\", [\n        \"componentVisibilityAlertServiceModule\",\n        \"slotRestrictionsServiceModule\",\n        \"cmsSmarteditServicesModule\"\n    ])\n\n    /**\n     * @ngdoc service\n     * @name editorEnablerServiceModule.service:editorEnablerService\n     *\n     * @description\n     * Convenience service to attach the open editor modal action to the contextual menu of a given component type, or\n     * given regex corresponding to a selection of component types.\n     *\n     * Example: The Edit button is added to the contextual menu of the CMSParagraphComponent, and all types postfixed\n     * with BannerComponent.\n     *\n     * <pre>\n     angular.module('app', ['editorEnablerServiceModule'])\n     .run(function(editorEnablerService) {\n                editorEnablerService.enableForComponents(['CMSParagraphComponent', '*BannerComponent']);\n            });\n     * </pre>\n     */\n    .factory(\"editorEnablerService\", function(\n        COMPONENT_UPDATED_EVENT,\n        systemEventService,\n        componentVisibilityAlertService,\n        componentHandlerService,\n        editorModalService,\n        featureService,\n        slotRestrictionsService\n    ) {\n\n        // Class Definition\n        function EditorEnablerService() {\n\n            this._editButtonCallback = this._editButtonCallback.bind(this);\n        }\n\n        // Private\n\n\n        EditorEnablerService.prototype._key = \"se.cms.edit\";\n\n        EditorEnablerService.prototype._nameI18nKey = \"se.cms.contextmenu.nameI18nKey.edit\";\n\n        EditorEnablerService.prototype._i18nKey = \"se.cms.contextmenu.title.edit\";\n\n        EditorEnablerService.prototype._descriptionI18nKey = \"se.cms.contextmenu.descriptionI18n.edit\";\n\n        EditorEnablerService.prototype._editDisplayClass = \"editbutton\";\n\n        EditorEnablerService.prototype._editDisplayIconClass = \"sap-icon--edit\";\n\n        EditorEnablerService.prototype._editDisplaySmallIconClass = \"sap-icon--edit\";\n\n        EditorEnablerService.prototype._editButtonCallback = function(contextualMenuParams) {\n            var slotUuid = contextualMenuParams.slotUuid;\n\n            if (!this.inUse) {\n                this.inUse = true;\n                editorModalService.open(contextualMenuParams.componentAttributes).then(function(item) {\n                    this.inUse = false;\n                    systemEventService.publish(COMPONENT_UPDATED_EVENT, item);\n                    return componentVisibilityAlertService.checkAndAlertOnComponentVisibility({\n                        itemId: item.uuid,\n                        itemType: item.itemtype,\n                        catalogVersion: item.catalogVersion,\n                        restricted: item.restricted,\n                        slotId: slotUuid,\n                        visible: item.visible\n                    });\n                }.bind(this), function() {\n                    this.inUse = false;\n                }.bind(this));\n            }\n        };\n\n        EditorEnablerService.prototype._condition = function(contextualMenuParams) {\n            var slotId = componentHandlerService.getParentSlotForComponent(contextualMenuParams.element);\n\n            return slotRestrictionsService.isSlotEditable(slotId).then(function(isSlotEditable) {\n                return isSlotEditable && !componentHandlerService.isExternalComponent(contextualMenuParams.componentId, contextualMenuParams.componentType);\n            });\n        };\n\n        // Public\n        /**\n         * @ngdoc method\n         * @name editorEnablerServiceModule.service:editorEnablerService#enableForComponents\n         * @methodOf editorEnablerServiceModule.service:editorEnablerService\n         *\n         * @description\n         * Enables the Edit contextual menu item for the given component types.\n         *\n         * @param {Array} componentTypes The list of component types, as defined in the platform, for which to enable the\n         * Edit contextual menu.\n         */\n        EditorEnablerService.prototype.enableForComponents = function(componentTypes) {\n            var contextualMenuConfig = {\n                key: this._key, // It's the same key as the i18n, however here we're not doing any i18n work.\n                nameI18nKey: this._nameI18nKey,\n                descriptionI18nKey: this._descriptionI18nKey,\n                priority: 400,\n                regexpKeys: componentTypes,\n                displayClass: this._editDisplayClass,\n                displayIconClass: this._editDisplayIconClass,\n                displaySmallIconClass: this._editDisplaySmallIconClass,\n                i18nKey: this._i18nKey,\n                condition: this._condition,\n                permissions: ['se.context.menu.edit.component'],\n                action: {\n                    callback: this._editButtonCallback\n                }\n            };\n\n            featureService.addContextualMenuButton(contextualMenuConfig);\n        };\n\n        // Factory Definition\n        return new EditorEnablerService();\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n// barrel\r\nexport {IHiddenComponentMenu} from './IHiddenComponentMenu';\r\nexport {HiddenComponentMenuService} from './HiddenComponentMenuService';\r\nexport {SlotContainerService} from './slotContainerService';\r\nexport {CmsSmarteditServicesModule} from './cmsSmarteditServicesModule';\r\nexport {ComponentSharedService} from './ComponentSharedServiceInner';\r\n\r\nexport * from './pages';","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotSharedServiceModule.pageContentSlotsService\n * @description\n * pageContentSlotsServiceModule provides methods to load and act on the contentSlots for the page loaded in the storefront.\n */\nangular.module('pageContentSlotsServiceModule', ['resourceModule', 'smarteditServicesModule', 'cmsResourceLocationsModule', 'yLoDashModule'])\n    .service('pageContentSlotsService', function($q, lodash, restServiceFactory, crossFrameEventService, EVENTS, pageInfoService, PAGES_CONTENT_SLOT_RESOURCE_URI) {\n        var pagesContentSlotsResource = restServiceFactory.get(PAGES_CONTENT_SLOT_RESOURCE_URI);\n        var pageContentSlotsPromise;\n\n        this._reloadPageContentSlots = function() {\n            return pageInfoService.getPageUID().then(function(pageId) {\n                pageContentSlotsPromise = pagesContentSlotsResource.get({\n                    pageId: pageId\n                }).then(function(pagesContentSlotsResponse) {\n                    return $q.when(lodash.uniq(pagesContentSlotsResponse.pageContentSlotList || []));\n                });\n                return pageContentSlotsPromise;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#getPageContentSlots\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * This function fetches all the slots of the loaded page.\n         * \n         * @returns {Promise} promise that resolves to a collection of content slots information for the loaded page.\n         */\n        this.getPageContentSlots = function() {\n            return pageContentSlotsPromise ? $q.when(pageContentSlotsPromise) : this._reloadPageContentSlots();\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#getSlotStatus\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * retrieves the slot status of the proved slotId. It can be one of TEMPLATE, PAGE and OVERRIDE.\n         *\n         * @param {String} slotId of the slot\n         * \n         * @returns {Promise} promise that resolves to the status of the slot.\n         */\n        this.getSlotStatus = function(slotId) {\n            return (pageContentSlotsPromise ? $q.when(pageContentSlotsPromise) : this._reloadPageContentSlots()).then(function(pageContentSlots) {\n                var matchedSlotData = lodash.first(pageContentSlots.filter(function(pageContentSlot) {\n                    return pageContentSlot.slotId === slotId;\n                }));\n                return matchedSlotData ? matchedSlotData.slotStatus : undefined;\n            });\n        };\n\n        crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, function() {\n            this._reloadPageContentSlots();\n        }.bind(this));\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport {GatewayProxied, SeInjectable} from \"smarteditcommons\";\r\nimport {IPageService} from 'cmscommons';\r\n\r\n@SeInjectable()\r\n@GatewayProxied()\r\n\rexport class /* @ngInject */ PageService extends IPageService {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n}","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport {PageService} from './PageServiceInner';","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('removeComponentServiceModule', ['smarteditServicesModule', 'renderServiceModule', 'removeComponentServiceInterfaceModule', 'experienceInterceptorModule', 'functionsModule', 'resourceLocationsModule'])\n    .constant('COMPONENT_REMOVED_EVENT', 'componentRemovedEvent')\n    /**\n     * @ngdoc service\n     * @name removeComponentService.removeComponentService\n     *\n     * @description\n     * Service to remove a component from a slot\n     */\n    .factory('removeComponentService', function(crossFrameEventService, restServiceFactory, renderService, extend, gatewayProxy, $q, $log, RemoveComponentServiceInterface, experienceInterceptor, systemEventService, componentInfoService, PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI, COMPONENT_REMOVED_EVENT) {\n        var REMOVE_COMPONENT_CHANNEL_ID = \"RemoveComponent\";\n\n        var RemoveComponentService = function(gatewayId) {\n            this.gatewayId = gatewayId;\n\n            gatewayProxy.initForService(this, [\"removeComponent\"]);\n        };\n\n        RemoveComponentService = extend(RemoveComponentServiceInterface, RemoveComponentService);\n\n        var restServiceForRemoveComponent = restServiceFactory.get(PAGES_CONTENT_SLOT_COMPONENT_RESOURCE_URI + '/contentslots/:slotId/components/:componentId', 'componentId');\n\n        RemoveComponentService.prototype.removeComponent = function(configuration) {\n\n            return restServiceForRemoveComponent.remove({\n                slotId: configuration.slotId,\n                componentId: configuration.slotOperationRelatedId\n            }).then(function() {\n                // This call will come from the cache. \n                return componentInfoService.getById(configuration.componentUuid);\n            }).then(function(component) {\n                systemEventService.publish(COMPONENT_REMOVED_EVENT, component);\n\n                // This will now come from the backend. \n                return componentInfoService.getById(configuration.componentUuid, true);\n            }).then(function(component) {\n                renderService.renderSlots(configuration.slotId);\n\n                return component;\n            });\n\n        };\n\n        return new RemoveComponentService(REMOVE_COMPONENT_CHANNEL_ID);\n\n    });\n","/*\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport interface ContainerInfo {\r\n\tcontainerId: string;\r\n\tcontainerType: string;\r\n\tpageId: string;\r\n\tslotId: string;\r\n\tcomponents: string[];\r\n}\r\nimport {IExperienceService, IRestServiceFactory, SeInjectable} from 'smarteditcommons';\r\n/**\r\n * @ngdoc service\r\n * @name cmsSmarteditServicesModule.service:slotContainerService\r\n *\r\n * @description\r\n * This service allows retrieving information about the containers found in a given page. \r\n */\r\n@SeInjectable()\r\n\rexport class /* @ngInject */ SlotContainerService {\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Variables\r\n\t// --------------------------------------------------------------------------------------\r\n\tprivate containersInPage: ContainerInfo[];\r\n\tprivate containersRestService: any;\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// --------------------------------------------------------------------------------------\r\n\tconstructor(private $q: angular.IQService, private lodash: any, restServiceFactory: IRestServiceFactory, private experienceService: IExperienceService, PAGE_CONTEXT_SITE_ID: string, PAGE_CONTEXT_CATALOG: string, PAGE_CONTEXT_CATALOG_VERSION: string) {\r\n\t\tconst contentSlotContainerResourceURI = `/cmswebservices/v1/sites/${PAGE_CONTEXT_SITE_ID}/catalogs/${PAGE_CONTEXT_CATALOG}/versions/${PAGE_CONTEXT_CATALOG_VERSION}/pagescontentslotscontainers?pageId=:pageId`;\r\n\t\tthis.containersRestService = restServiceFactory.get(contentSlotContainerResourceURI);\r\n\t}\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Public API\r\n\t// --------------------------------------------------------------------------------------\r\n\t/**\r\n\t * @ngdoc method\r\n\t * @name cmsSmarteditServicesModule.service:slotContainerService#getComponentContainer\r\n\t * @methodOf cmsSmarteditServicesModule.service:slotContainerService\r\n\t *\r\n\t * @description\r\n\t * This method is used to retrieve the information about the container holding the provided component.\r\n\t * If the component is not inside a container, the method returns null. \r\n\t * \r\n\t * @param {String} slotId The SmartEdit id of the slot where the component in question is located.\r\n\t * @param {String} componentUuid The UUID of the component as defined in the database.\r\n\t *\r\n\t * @returns {angular.IPromise<ContainerInfo>} A promise that resolves to the information of the container of the component provided. \r\n\t * Will be null if the component is not inside a container. \r\n\t */\r\n\tpublic getComponentContainer(slotId: string, componentUuid: string): angular.IPromise<ContainerInfo> {\r\n\t\treturn this.loadContainersInPageInfo().then((containersInPage: ContainerInfo[]) => {\r\n\t\t\tconst containers = containersInPage.filter((container: ContainerInfo) => {\r\n\t\t\t\treturn container.slotId === slotId && this.lodash.includes(container.components, componentUuid);\r\n\t\t\t});\r\n\r\n\t\t\treturn (containers.length > 0) ? containers[0] : null;\r\n\t\t});\r\n\t}\r\n\r\n\t// --------------------------------------------------------------------------------------\r\n\t// Helper Methods\r\n\t// --------------------------------------------------------------------------------------\r\n\tprivate loadContainersInPageInfo() {\r\n\t\tif (this.containersInPage) {\r\n\t\t\treturn this.$q.when(this.containersInPage);\r\n\t\t} else {\r\n\t\t\treturn this.experienceService.getCurrentExperience().then((experience: any) => {\r\n\t\t\t\treturn this.containersRestService.get({\r\n\t\t\t\t\tpageId: experience.pageId\r\n\t\t\t\t});\r\n\t\t\t}).then((result: any) => {\r\n\t\t\t\tthis.containersInPage = result.pageContentSlotContainerList as ContainerInfo[];\r\n\t\t\t\treturn this.containersInPage;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotSharedServiceModule.slotSharedService\n * @description\n * SlotSharedService provides methods to interact with the backend for shared slot information. \n */\nangular.module('slotSharedServiceModule', ['pageContentSlotsServiceModule', 'yLoDashModule', 'cmsSmarteditServicesModule'])\n    .service('slotSharedService', function(pageContentSlotsService, lodash, cmsitemsRestService, pageInfoService, $translate, confirmationModalService) {\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#isSlotShared\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Checks if the slot is shared and returns true in case slot is shared and returns false if it is not. \n         * Based on this service method the slot shared button is shown or hidden for a particular slotId\n         *\n         * @param {String} slotId of the slot\n         */\n        this.isSlotShared = function(slotId) {\n            return pageContentSlotsService.getPageContentSlots().then(function(pageContentSlots) {\n                var matchedSlotData = lodash.first(pageContentSlots.filter(function(pageContentSlot) {\n                    return pageContentSlot.slotId === slotId;\n                }));\n                return matchedSlotData ? matchedSlotData.slotShared : undefined;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#setSharedSlotEnablementStatus\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Sets the status of the disableSharedSlot feature\n         *\n         * @param {Boolean} status of the disableSharedSlot feature\n         */\n        this.setSharedSlotEnablementStatus = function(status) {\n            this.disableShareSlotStatus = status;\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#isSharedSlotDisabled\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Checks the status of the disableSharedSlot feature\n         *\n         */\n        this.areSharedSlotsDisabled = function() {\n            return this.disableShareSlotStatus;\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotSharedServiceModule.slotSharedService#convertSharedSlotToNonSharedSlot\n         * @methodOf slotSharedServiceModule.slotSharedService\n         *\n         * @description\n         * Converts a shared slot to a non-shared slot.\n         *\n         * @param {Object} componentAttributes Component attributes context\n         * @param {String} componentAttributes.smarteditComponentId SmartEdit componenent Id.\n         * @param {String} componentAttributes.contentSlotUuid Unique identifier of the shared slot.\n         * @param {String} componentAttributes.componentType Type of component.\n         * @param {String} componentAttributes.catalogVersionUuid Catalog version.\n         * @param {Boolean} cloneComponents If set to \"true\", the components in the shared slot will be cloned to the new non-shared slot.\n         * If set to \"false\", the new non-shared slot will be empty.\n         *\n         * @returns {Promise} A promise that resolves to the data that defines the new component.\n         *\n         */\n        this.convertSharedSlotToNonSharedSlot = function(componentAttributes, cloneComponents) {\n            this._validateComponentAttributes(componentAttributes);\n            return this._constructCmsItemParameter(componentAttributes, cloneComponents).then(function(cmsItem) {\n\n                var message = {};\n                message.title = \"se.cms.slot.shared.convert.to.unshared.confirmation.title\";\n                message.description = cloneComponents ? \"se.cms.slot.shared.convert.to.unshared.clone.components.confirmation.message\" : \"se.cms.slot.shared.convert.to.unshared.remove.components.confirmation.message\";\n\n                return confirmationModalService.confirm(message).then(function() {\n                    return cmsitemsRestService.create(cmsItem);\n                });\n\n            });\n        };\n\n        this._constructCmsItemParameter = function(componentAttributes, cloneComponents) {\n            return $translate(\"se.cms.slot.shared.clone\").then(function(cloneText) {\n                return pageInfoService.getPageUID().then(function(pageUid) {\n                    var componentName = pageUid + \"-\" + componentAttributes.smarteditComponentId + \"-\" + cloneText;\n                    var cmsItem = {\n                        name: componentName,\n                        smarteditComponentId: componentAttributes.smarteditComponentId,\n                        contentSlotUuid: componentAttributes.contentSlotUuid,\n                        itemtype: componentAttributes.componentType,\n                        catalogVersion: componentAttributes.catalogVersionUuid,\n                        pageUuid: pageUid,\n                        cloneComponents: cloneComponents\n                    };\n                    return cmsItem;\n                });\n            }.bind(this));\n        };\n\n        this._validateComponentAttributes = function(componentAttributes) {\n            if (!componentAttributes) {\n                throw new Error(\"Parameter: componentAttributes needs to be supplied!\");\n            }\n\n            var validationAttributes = [\"smarteditComponentId\", \"contentSlotUuid\", \"componentType\", \"catalogVersionUuid\"];\n            for (var i = 0; i < validationAttributes.length; i++) {\n                var attribute = validationAttributes[i];\n                if (!componentAttributes[attribute]) {\n                    throw new Error(\"Parameter: componentAttributes.\" + attribute + \" needs to be supplied!\");\n                }\n            }\n        };\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nangular.module('slotSynchronizationServiceModule', [])\n    .constant(\"SYNCHRONIZATION_SLOTS_SELECT_ALL_COMPONENTS_LABEL\", \"se.cms.synchronization.slots.select.all.components\")\n    .service('slotSynchronizationService', function(SYNCHRONIZATION_SLOTS_SELECT_ALL_COMPONENTS_LABEL, syncPollingService) {\n\n        this.getSyncStatus = function(pageUUID, slotId) {\n            return syncPollingService.getSyncStatus(pageUUID).then(function(syncStatus) {\n                var slotSyncStatus = (syncStatus.selectedDependencies || []).concat(syncStatus.sharedDependencies || []).find(function(slot) {\n                    return slot.name === slotId;\n                }) || {};\n                slotSyncStatus.selectAll = SYNCHRONIZATION_SLOTS_SELECT_ALL_COMPONENTS_LABEL;\n                return slotSyncStatus;\n            });\n        };\n\n        this.performSync = function(array, uriContext) {\n            return syncPollingService.performSync(array, uriContext);\n        };\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotUnsharedServiceModule.slotUnsharedService\n * @description\n * slotUnsharedService provides methods to interact with the backend for unshared slot information. \n */\nangular.module('slotUnsharedServiceModule', ['cmsSmarteditServicesModule', 'pageContentSlotsServiceModule'])\n    .service('slotUnsharedService', function($q, cmsitemsRestService, pageContentSlotsService) {\n\n        var SLOT_UNSHARED_STATUS = 'OVERRIDE';\n\n        /**\n         * @ngdoc method\n         * @name slotUnsharedServiceModule.slotUnsharedService#isSlotUnshared\n         * @methodOf slotUnsharedServiceModule.slotUnsharedService\n         *\n         * @description\n         * Checks if the slot is unshared and returns true in case slot is unshared and returns false if it is not. \n         * Based on this service method the slot unshared button is shown or hidden for a particular slotId.\n         *\n         * @param {String} slotId The uid of the slot\n         */\n        this.isSlotUnshared = function(slotId) {\n            return pageContentSlotsService.getSlotStatus(slotId).then(function(slotStatus) {\n                return slotStatus === SLOT_UNSHARED_STATUS;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotUnsharedServiceModule.slotUnsharedService#revertToSharedSlot\n         * @methodOf slotUnsharedServiceModule.slotUnsharedService\n         *\n         * @description\n         * This method is used to revert an unshared slot to a shared slot.\n         * This operation is immutable.\n         *\n         * @param {String} slotUuid The uuid of the slot\n         */\n        this.revertToSharedSlot = function(slotUuid) {\n            return cmsitemsRestService.delete(slotUuid);\n        };\n\n    });\n","/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n/**\n * @ngdoc overview\n * @name slotVisibilityServiceModule\n * @description\n *\n * The slot visibility service module provides factories and services to manage all backend calls and loads an internal\n * structure that provides the necessary data to the slot visibility button and slot visibility component.\n */\nangular.module('slotVisibilityServiceModule', ['resourceModule', 'cmsSmarteditServicesModule'])\n    /**\n     * @ngdoc service\n     * @name slotVisibilityServiceModule.service:slotVisibilityService\n     * @description\n     *\n     * The slotVisibilityService provides methods to reload slot information and manage hidden components.\n     */\n    .service('slotVisibilityService', function(\n        COMPONENT_CREATED_EVENT,\n        COMPONENT_UPDATED_EVENT,\n        COMPONENT_REMOVED_EVENT,\n        $log,\n        crossFrameEventService,\n        componentHandlerService,\n        pageInfoService,\n        pageContentSlotsComponentsRestService\n    ) {\n\n        /**\n         * Function that filters the given SlotsToComponentsMap to return only those components that are hidden in the storefront.\n         * @param {Object} allSlotsToComponentsMap object containing slotId - components list.\n         *\n         * @return {Object} allSlotsToComponentsMap object containing slotId - components list.\n         */\n        var _filterVisibleComponents = function(allSlotsToComponentsMap) {\n\n            //filter allSlotsToComponentsMap to show only hidden components\n            Object.keys(allSlotsToComponentsMap).forEach(function(slotId) {\n\n                var componentsOnDOM = [];\n                componentHandlerService.getOriginalComponentsWithinSlot(slotId).get().forEach(function(component) {\n                    componentsOnDOM.push(componentHandlerService.getId(component));\n                });\n\n                var hiddenComponents = allSlotsToComponentsMap[slotId].filter(function(component) {\n                    return componentsOnDOM.indexOf(component.uid) === -1;\n                });\n\n                allSlotsToComponentsMap[slotId] = hiddenComponents;\n\n            });\n\n            return allSlotsToComponentsMap;\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotVisibilityServiceModule.service:slotVisibilityService#reloadSlotsInfo\n         * @methodOf slotVisibilityServiceModule.service:slotVisibilityService\n         *\n         * @description\n         * Reloads and cache's the pagesContentSlotsComponents for the current page in context.\n         * this method can be called when ever a component is added or modified to the slot so that the pagesContentSlotsComponents is re-evalated.\n         *\n         * @return {Promise} A promise that resolves to the contentSlot - Components [] map for the page in context.\n         */\n        this.reloadSlotsInfo = function() {\n            return pageInfoService.getPageUID().then(function(pageUID) {\n                pageContentSlotsComponentsRestService.clearCache();\n                return pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageUID);\n            }.bind(this), function(e) {\n                $log.error('slotVisibilityService::reloadSlotsInfo - failed call to pageInfoService.getPageUID');\n                throw e;\n            });\n        };\n\n        /**\n         * Function to load slot to component map for the current page in context\n         * \n         * @return {Promise}\n         */\n        var _getSlotToComponentsMap = function() {\n            return pageInfoService.getPageUID().then(function(pageUID) {\n                return pageContentSlotsComponentsRestService.getSlotsToComponentsMapForPageUid(pageUID);\n            }.bind(this), function(e) {\n                $log.error('slotVisibilityService::_getSlotToComponentsMap - failed call to pageInfoService.getPageUID');\n                throw e;\n            });\n        };\n\n        /**\n         * @ngdoc method\n         * @name slotVisibilityServiceModule.service:slotVisibilityService#getHiddenComponents\n         * @methodOf slotVisibilityServiceModule.service:slotVisibilityService\n         *\n         * @description\n         * Returns the list of hidden components for a given slotId\n         *\n         * @param {String} slotId the slot id\n         *\n         * @return {Promise} A promise that resolves to a list of hidden components for the slotId\n         */\n        this.getHiddenComponents = function(slotId) {\n            return _getSlotToComponentsMap().then(_filterVisibleComponents).then(function(hiddenComponentsMap) {\n                return hiddenComponentsMap[slotId] || [];\n            }, function() {\n                return [];\n            });\n        };\n\n        this._clearComponentsCache = function() {\n            pageContentSlotsComponentsRestService.clearCache();\n        };\n\n        crossFrameEventService.subscribe(COMPONENT_CREATED_EVENT, this._clearComponentsCache);\n        crossFrameEventService.subscribe(COMPONENT_UPDATED_EVENT, this._clearComponentsCache);\n        crossFrameEventService.subscribe(COMPONENT_REMOVED_EVENT, this._clearComponentsCache);\n\n    });\n","angular.module('cmssmarteditTemplates', []).run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('web/features/cmssmartedit/components/externalComponent/externalComponentButtonTemplate.html',\n    \"<div class=\\\"se-ctx-menu-btn__msg\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.isReady\\\">\\n\" +\n    \"    {{ctrl.catalogVersion}}\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/externalComponent/externalComponentDecoratorTemplate.html',\n    \"<div data-ng-class=\\\"{\\n\" +\n    \"    'cms-external-component-decorator': !ctrl.isExtenalSlot, \\n\" +\n    \"    'disabled-shared-slot-hovered': ctrl.active && !ctrl.isExtenalSlot, \\n\" +\n    \"    'cms-external-component-decorator--versioning': ctrl.isVersioningPerspective}\\\">\\n\" +\n    \"    <div class=\\\"se-ctx-menu__overlay\\\"\\n\" +\n    \"        data-ng-if=\\\"!ctrl.isExtenalSlot && ctrl.isReady\\\">\\n\" +\n    \"        <span data-ng-if=\\\"!ctrl.active || ctrl.isVersioningPerspective\\\"\\n\" +\n    \"            data-y-popover\\n\" +\n    \"            data-placement=\\\"'bottom'\\\"\\n\" +\n    \"            data-template=\\\"ctrl.getTooltipTemplate()\\\"\\n\" +\n    \"            data-trigger=\\\"'hover'\\\"\\n\" +\n    \"            class=\\\"sap-icon--globe se-ctx-menu-element__btn\\\"\\n\" +\n    \"            data-ng-class=\\\"{'sap-icon--globe--version': ctrl.isVersioningPerspective}\\\"></span>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"se-wrapper-data\\\"\\n\" +\n    \"        data-ng-class=\\\"{'disabled-shared-slot-versioning-mode': ctrl.isVersioningPerspective && !ctrl.isExtenalSlot}\\\"\\n\" +\n    \"        data-ng-transclude>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/sharedComponent/sharedComponentButtonTemplate.html',\n    \"<div class=\\\"se-ctx-menu-btn__msg\\\">\\n\" +\n    \"    <div class=\\\"se-ctx-menu-btn__msg-title\\\"\\n\" +\n    \"        data-translate=\\\"se.cms.contextmenu.shared.component.info.title\\\"></div>\\n\" +\n    \"    <div data-ng-if=\\\"$ctrl.isReady\\\"\\n\" +\n    \"        class=\\\"se-ctx-menu-btn__msg-description\\\">\\n\" +\n    \"        {{ $ctrl.message | translate }}\\n\" +\n    \"    </div>\\n\" +\n    \"    <div data-ng-if=\\\"!$ctrl.isReady\\\">\\n\" +\n    \"        <div class=\\\"spinner-sm spinner-light\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotShared/slotSharedButtonTemplate.html',\n    \"<div class=\\\"se-shared-slot-button-template\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.slotSharedFlag\\\">\\n\" +\n    \"    <div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper se-slot-ctx-menu__divider\\\"\\n\" +\n    \"        data-uib-dropdown\\n\" +\n    \"        data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"        data-auto-close=\\\"outsideClick\\\"\\n\" +\n    \"        data-is-open=\\\"ctrl.isPopupOpened\\\">\\n\" +\n    \"        <button type=\\\"button\\\"\\n\" +\n    \"            data-uib-dropdown-toggle\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__dropdown-toggle sap-icon--chain-link se-slot-ctx-menu__dropdown-toggle-icon\\\"\\n\" +\n    \"            data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isPopupOpened}\\\"\\n\" +\n    \"            id=\\\"sharedSlotButton-{{::ctrl.slotId}}\\\">\\n\" +\n    \"        </button>\\n\" +\n    \"        <div class=\\\"dropdown-menu dropdown-menu-right se-slot__dropdown-menu\\\"\\n\" +\n    \"            data-uib-dropdown-menu>\\n\" +\n    \"            <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"                data-translate=\\\"se.sharedslot.decorator.label\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"\\n\" +\n    \"            <div class=\\\"se-shared-slot__body\\\">\\n\" +\n    \"                <div class=\\\"se-shared-slot__description\\\"\\n\" +\n    \"                    data-translate=\\\"se.cms.slot.shared.popover.message\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                <div has-operation-permission=\\\"'se.shared.slot.override.options'\\\">\\n\" +\n    \"                    <div class=\\\"se-shared-slot__sub-header\\\"\\n\" +\n    \"                        data-translate=\\\"se.cms.slot.shared.popover.convertoptions.title\\\"></div>\\n\" +\n    \"\\n\" +\n    \"                    <div class=\\\"se-shared-slot__option\\\">\\n\" +\n    \"                        <a class=\\\"se-shared-slot__link fd-link\\\"\\n\" +\n    \"                            data-ng-click=\\\"ctrl.convertToNonSharedSlotAndCloneComponents()\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.button.clonecomponents\\\">\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <div class=\\\"se-shared-slot__link-description\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.text.clonecomponents\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"se-shared-slot__option\\\">\\n\" +\n    \"                        <a class=\\\"se-shared-slot__link fd-link\\\"\\n\" +\n    \"                            data-ng-click=\\\"ctrl.convertToNonSharedSlotAndRemoveComponents()\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.button.removecomponents\\\">\\n\" +\n    \"                        </a>\\n\" +\n    \"                        <div class=\\\"se-shared-slot__link-description\\\"\\n\" +\n    \"                            data-translate=\\\"se.cms.slot.shared.popover.text.removecomponents\\\"></div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotShared/slotSharedTemplate.html',\n    \"<slot-shared-button data-slot-id=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-component-attributes=\\\"ctrl.componentAttributes\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\">\\n\" +\n    \"</slot-shared-button>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotSharedDisabled/externalSlotDisabledDecoratorTemplate.html',\n    \"<div class=\\\"se-decorator-wrap\\\">\\n\" +\n    \"    <slot-disabled-component data-active=\\\"ctrl.active\\\"\\n\" +\n    \"        data-component-attributes=\\\"ctrl.componentAttributes\\\" />\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotSharedDisabled/sharedSlotDisabledDecoratorTemplate.html',\n    \"<div class=\\\"se-decorator-wrap\\\">\\n\" +\n    \"    <slot-disabled-component data-active=\\\"ctrl.active\\\"\\n\" +\n    \"        data-component-attributes=\\\"ctrl.componentAttributes\\\" />\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotSharedDisabled/slotDisabledTemplate.html',\n    \"<div class=\\\"disabled-shared-slot se-slot-popover external-shared-slot\\\"\\n\" +\n    \"    data-ng-class=\\\"{ 'disabled-shared-slot-hovered': ctrl.active, 'external-shared-slot': ctrl.isExternalSlot, 'disabled-shared-slot-versioning-mode': ctrl.isVersioningPerspective, 'disabled-shared-slot': !ctrl.isVersioningPerspective}\\\"\\n\" +\n    \"    data-popover-content=\\\"{{ctrl.getPopoverMessage()}}\\\">\\n\" +\n    \"    <div class=\\\"se-slot-popover__arrow\\\">\\n\" +\n    \"        <div class=\\\"se-slot-popover__arrow--fill\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"disabled-shared-slot__icon--outer disabled-shared-slot__icon--outer-linked\\\"\\n\" +\n    \"        data-ng-class=\\\"[ctrl.getOuterSlotClass(), { 'disabled-shared-slot__icon--outer-hovered': ctrl.active && !ctrl.isVersioningPerspective}]\\\">\\n\" +\n    \"        <span class=\\\"hyicon shared_slot_disabled_icon disabled-shared-slot__icon--inner\\\"\\n\" +\n    \"            data-ng-class=\\\"ctrl.getSlotIconClass()\\\">\\n\" +\n    \"        </span>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotUnshared/slotUnsharedButtonTemplate.html',\n    \"<div class=\\\"slot-unshared-button-template\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.slotUnsharedFlag\\\">\\n\" +\n    \"    <div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper se-slot-ctx-menu__divider\\\"\\n\" +\n    \"        data-uib-dropdown\\n\" +\n    \"        data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"        data-auto-close=\\\"outsideClick\\\"\\n\" +\n    \"        data-is-open=\\\"ctrl.isPopupOpened\\\">\\n\" +\n    \"        <button type=\\\"button\\\"\\n\" +\n    \"            data-uib-dropdown-toggle\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__dropdown-toggle sap-icon--broken-link se-slot-ctx-menu__dropdown-toggle-icon\\\"\\n\" +\n    \"            data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isPopupOpened}\\\"\\n\" +\n    \"            id=\\\"slot-unshared-button-{{::ctrl.slotUid}}\\\">\\n\" +\n    \"        </button>\\n\" +\n    \"        <div class=\\\"dropdown-menu dropdown-menu-right se-toolbar-menu-content se-slot__dropdown-menu\\\"\\n\" +\n    \"            data-uib-dropdown-menu>\\n\" +\n    \"            <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"                data-translate=\\\"se.cms.unshared.slot.header\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"shared-slot__divider\\\"></div>\\n\" +\n    \"            <div class=\\\"se-shared-slot__body\\\">\\n\" +\n    \"                <div class=\\\"se-shared-slot__link-description se-shared-slot__link-description__unshared\\\"\\n\" +\n    \"                    data-translate=\\\"se.cms.slot.unshared.popover.message\\\"></div>\\n\" +\n    \"                <div data-has-operation-permission=\\\"'se.revert.to.shared.slot.link'\\\">\\n\" +\n    \"                    <a class=\\\"se-shared-slot__link fd-link\\\"\\n\" +\n    \"                        data-ng-click=\\\"ctrl.revertToSharedSlot()\\\"\\n\" +\n    \"                        data-translate=\\\"se.cms.slot.unshared.revert.to.shared.title\\\">\\n\" +\n    \"                    </a>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotUnshared/slotUnsharedButtonWrapperTemplate.html',\n    \"<slot-unshared-button data-slot-uuid=\\\"{{::ctrl.componentAttributes.smarteditComponentUuid}}\\\"\\n\" +\n    \"    data-slot-uid=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\"></slot-unshared-button>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenuItemsTemplate.html',\n    \"<div class=\\\"se-hidden-component-menu fd-menu__list\\\">\\n\" +\n    \"    <div class=\\\"se-hidden-component-menu__item fd-menu__item\\\"\\n\" +\n    \"        data-ng-repeat=\\\"dropdownItem in ctrl.menuItems\\\"\\n\" +\n    \"        data-ng-click=\\\"ctrl.executeItemCallback(dropdownItem, $event)\\\">\\n\" +\n    \"        <span class=\\\"se-hidden-component-menu__item-icon\\\"\\n\" +\n    \"            data-ng-class=\\\"[dropdownItem.displayIconClass]\\\"></span>\\n\" +\n    \"        <span class=\\\"se-hidden-component-menu__item-link\\\">\\n\" +\n    \"            {{ dropdownItem.i18nKey | translate }}\\n\" +\n    \"        </span>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/hiddenComponentMenu/hiddenComponentMenuTemplate.html',\n    \"<div class=\\\"se-hidden-component-menu__popup-anchor\\\"\\n\" +\n    \"    data-ng-click=\\\"ctrl.onButtonClick($event)\\\"\\n\" +\n    \"    y-popup-overlay=\\\"ctrl.popupConfig\\\"\\n\" +\n    \"    y-popup-overlay-trigger=\\\"{{ctrl.isMenuOpen}}\\\"\\n\" +\n    \"    y-popup-overlay-on-hide=\\\"ctrl.onMenuHide()\\\">\\n\" +\n    \"    <span data-ng-if=\\\"ctrl.menuItems.length > 0\\\"\\n\" +\n    \"        class=\\\"sap-icon--overflow se-hidden-component-menu__toggle\\\"></span>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/slotVisibilityButtonTemplate.html',\n    \"<div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper \\n\" +\n    \"        se-slot-ctx-menu__dropdown-toggle-wrapper--slot-visibility \\n\" +\n    \"        se-slot-ctx-menu__divider\\\"\\n\" +\n    \"    data-uib-dropdown\\n\" +\n    \"    data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.buttonVisible\\\"\\n\" +\n    \"    data-is-open=\\\"ctrl.isComponentListOpened\\\">\\n\" +\n    \"\\n\" +\n    \"    <button type=\\\"button\\\"\\n\" +\n    \"        data-uib-dropdown-toggle\\n\" +\n    \"        class=\\\"se-slot-ctx-menu__dropdown-toggle--slot-visibility se-slot-ctx-menu__dropdown-toggle\\\"\\n\" +\n    \"        data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isComponentListOpened}\\\"\\n\" +\n    \"        id=\\\"slot-visibility-button-{{::ctrl.slotId}}\\\">\\n\" +\n    \"        <span class=\\\"se-slot-ctx-menu__dropdown-toggle-icon sap-icon--hide\\\"></span>\\n\" +\n    \"        <span class=\\\"se-slot-ctx-menu__dropdown-toggle-add-on\\\">{{ ::ctrl.hiddenComponentCount }}</span>\\n\" +\n    \"    </button>\\n\" +\n    \"\\n\" +\n    \"    <div class=\\\"dropdown-menu dropdown-menu-right se-slot__dropdown-menu\\\"\\n\" +\n    \"        data-uib-dropdown-menu\\n\" +\n    \"        data-ng-click=\\\"ctrl.onInsideClick($event)\\\"\\n\" +\n    \"        role=\\\"menu\\\"\\n\" +\n    \"        id=\\\"slot-visibility-list-{{::ctrl.slotId}}\\\">\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"            data-translate=\\\"se.cms.slotvisibility.list.title\\\"></div>\\n\" +\n    \"\\n\" +\n    \"        <ul class=\\\"se-slot-visility__component-list\\\">\\n\" +\n    \"            <li data-ng-repeat=\\\"component in ctrl.hiddenComponents track by $index\\\"\\n\" +\n    \"                class=\\\"se-slot-visility__component-list-item\\\">\\n\" +\n    \"                <span data-y-popover\\n\" +\n    \"                    data-ng-if=\\\"component.isExternal\\\"\\n\" +\n    \"                    data-trigger=\\\"'hover'\\\"\\n\" +\n    \"                    data-template=\\\"ctrl.getTemplateInfoForExternalComponent()\\\">\\n\" +\n    \"                    <slot-visibility-component data-component=\\\"component\\\"\\n\" +\n    \"                        data-component-id=\\\"{{::component.uid}}\\\"\\n\" +\n    \"                        data-slot-id=\\\"{{::ctrl.slotId}}\\\"></slot-visibility-component>\\n\" +\n    \"                </span>\\n\" +\n    \"                <slot-visibility-component data-component=\\\"component\\\"\\n\" +\n    \"                    data-ng-if=\\\"!component.isExternal\\\"\\n\" +\n    \"                    data-component-id=\\\"{{::component.uid}}\\\"\\n\" +\n    \"                    data-slot-id=\\\"{{::ctrl.slotId}}\\\"></slot-visibility-component>\\n\" +\n    \"            </li>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/slotVisibilityComponentTemplate.html',\n    \"<div class=\\\"se-slot-visibility-wrapper\\\"\\n\" +\n    \"    data-ng-class=\\\"{'se-slot-visibility-wrapper__external': ctrl.readOnly}\\\">\\n\" +\n    \"    <div class=\\\"se-slot-visiblity-component__content\\\"\\n\" +\n    \"        data-ng-if=\\\"ctrl.isReady\\\">\\n\" +\n    \"        <div class=\\\"se-slot-visibility__icon-wrapper\\\">\\n\" +\n    \"            <div class=\\\"se-slot-visibility__icon sap-icon--home-share\\\"></div>\\n\" +\n    \"            <div data-ng-if=\\\"ctrl.isSharedComponent\\\"\\n\" +\n    \"                class=\\\"se-slot-visibility__icon--shared sap-icon--chain-link\\\">\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"\\n\" +\n    \"        <div class=\\\"se-slot-visiblity-component__description\\\">\\n\" +\n    \"            <div data-ng-if=\\\"ctrl.readOnly\\\"\\n\" +\n    \"                class=\\\"se-slot-visiblity-component__name\\\">\\n\" +\n    \"                {{ ::ctrl.component.name }}\\n\" +\n    \"            </div>\\n\" +\n    \"            <div data-ng-if=\\\"!ctrl.readOnly\\\"\\n\" +\n    \"                class=\\\"se-slot-visiblity-component__name--link\\\"\\n\" +\n    \"                data-ng-click=\\\"ctrl.openEditorModal()\\\">{{ ::ctrl.component.name }}</div>\\n\" +\n    \"            <div class=\\\"se-slot-visiblity-component__type\\\">\\n\" +\n    \"                {{ ::ctrl.component.typeCode }}\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"se-slot-visiblity-component__visibility\\\">\\n\" +\n    \"                {{'se.genericeditor.tab.visibility.title' | translate}} {{ctrl.componentVisibilitySwitch | translate}} / {{ctrl.componentRestrictionsCount}} {{'se.cms.restrictions.editor.tab' | translate}}\\n\" +\n    \"            </div>\\n\" +\n    \"            <div data-ng-if=\\\"ctrl.component.isExternal === true\\\"\\n\" +\n    \"                class=\\\"sap-icon--globe slot-visiblity-component--globe-icon\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <hidden-component-menu class=\\\"slot-visiblity-component--hidden-menu\\\"\\n\" +\n    \"        data-slot-id=\\\"ctrl.slotId\\\"\\n\" +\n    \"        data-component=\\\"ctrl.component\\\"></hidden-component-menu>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/slotVisibility/slotVisibilityWidgetTemplate.html',\n    \"<slot-visibility-button data-slot-id=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\" />\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/slotSyncButtonTemplate.html',\n    \"<div class=\\\"se-slot-sync-button-template\\\"\\n\" +\n    \"    data-ng-if=\\\"ctrl.ready\\\">\\n\" +\n    \"    <div class=\\\"se-slot-ctx-menu__dropdown-toggle-wrapper se-slot-ctx-menu__divider\\\"\\n\" +\n    \"        data-uib-dropdown\\n\" +\n    \"        data-dropdown-append-to=\\\"'#smarteditoverlay'\\\"\\n\" +\n    \"        data-auto-close=\\\"outsideClick\\\"\\n\" +\n    \"        data-is-open=\\\"ctrl.isPopupOpened\\\">\\n\" +\n    \"\\n\" +\n    \"        <span data-y-popover\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__popover-ancor\\\"\\n\" +\n    \"            data-trigger=\\\"'hover'\\\"\\n\" +\n    \"            data-template=\\\"ctrl.newPageIsNotSynchronizedTemplate\\\"\\n\" +\n    \"            data-ng-if=\\\"ctrl.newPageIsNotSynchronized\\\"\\n\" +\n    \"            data-placement=\\\"'bottom'\\\">\\n\" +\n    \"        </span>\\n\" +\n    \"\\n\" +\n    \"        <button type=\\\"button\\\"\\n\" +\n    \"            data-uib-dropdown-toggle\\n\" +\n    \"            class=\\\"se-slot-ctx-menu__dropdown-toggle\\\"\\n\" +\n    \"            data-ng-class=\\\"{'se-slot-ctx-menu__dropdown-toggle--open': ctrl.isPopupOpened, \\n\" +\n    \"                'se-slot-ctx-menu__dropdown-toggle--disabled': ctrl.newPageIsNotSynchronized }\\\"\\n\" +\n    \"            id=\\\"slot-sync-button-{{::ctrl.slotId}}\\\">\\n\" +\n    \"            <span class=\\\"sap-icon--synchronize se-slot-ctx-menu__dropdown-toggle-icon\\\"></span>\\n\" +\n    \"            <span data-ng-if=\\\"!ctrl.isSlotInSync\\\"\\n\" +\n    \"                class=\\\"sap-icon--alert se-slot-sync__btn-status se-slot-ctx-menu__dropdown-toggle-add-on\\\"></span>\\n\" +\n    \"        </button>\\n\" +\n    \"        <div class=\\\"se-slot__dropdown-menu dropdown-menu-right\\\"\\n\" +\n    \"            data-uib-dropdown-menu\\n\" +\n    \"            role=\\\"menu\\\">\\n\" +\n    \"            <div class=\\\"se-toolbar-menu-content--wrapper\\\">\\n\" +\n    \"                <div class=\\\"se-slot-contextual-menu__header\\\"\\n\" +\n    \"                    data-translate=\\\"se.cms.synchronization.slot.header\\\">\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"se-slot-sync__body\\\">\\n\" +\n    \"                    <slot-synchronization-panel data-ng-if=\\\"ctrl.isPopupOpened\\\"\\n\" +\n    \"                        data-slot-id=\\\"ctrl.slotId\\\"></slot-synchronization-panel>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/slotSynchronizationPanelTemplate.html',\n    \"<div data-page-sensitive>\\n\" +\n    \"    <synchronization-panel data-item-id=\\\"$ctrl.slotId\\\"\\n\" +\n    \"        data-get-sync-status=\\\"$ctrl.getSyncStatus\\\"\\n\" +\n    \"        data-perform-sync=\\\"$ctrl.performSync\\\"\\n\" +\n    \"        data-get-api=\\\"$ctrl.getApi($api)\\\">\\n\" +\n    \"    </synchronization-panel>\\n\" +\n    \"</div>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/slotSyncTemplate.html',\n    \"<slot-sync-button data-slot-id=\\\"{{::ctrl.smarteditComponentId}}\\\"\\n\" +\n    \"    data-set-remain-open=\\\"ctrl.setRemainOpen(button, remainOpen)\\\"></slot-sync-button>\"\n  );\n\n\n  $templateCache.put('web/features/cmssmartedit/components/synchronize/slots/SyncIndicatorDecoratorTemplate.html',\n    \"<div class=\\\"sync-indicator-decorator\\\"\\n\" +\n    \"    [ngClass]=\\\"syncStatus.status\\\"\\n\" +\n    \"    [attr.sync-status]=\\\"syncStatus.status\\\">\\n\" +\n    \"    <ng-content class=\\\"se-wrapper-data\\\"></ng-content>\\n\" +\n    \"</div>\"\n  );\n\n}]);\n","module.exports = angular;","module.exports = smarteditcommons;","module.exports = vendor_chunk;","module.exports = moment;"],"sourceRoot":""}